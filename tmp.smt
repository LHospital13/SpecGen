; Proof attempt for IsSuffix.isSuffix(java.lang.String,java.lang.String)
(set-option :produce-models true)
(set-logic ALL)
(set-option :AUTO_CONFIG false)
(set-option :smt.MBQI false)
(declare-sort REF 0)
(declare-fun NULL () REF)
(declare-fun NULLSTRING () (Array Int Int))
(declare-fun stringConcat (REF REF ) REF)
(declare-fun stringLength ((Array Int Int) ) Int)
(declare-fun __JMLlength () (Array REF Int))
(assert (forall ((o REF) ) (>= (select __JMLlength o) 0)))
(declare-fun asIntArray (REF ) (Array Int Int))
(declare-fun asREFArray (REF ) (Array Int REF))
(declare-fun intValue (REF ) Int)
(declare-fun booleanValue (REF ) Bool)
(define-fun |#is_byte#| ((x Int)) Bool (and (<= (- 128) x) (<= x 127)))
(define-fun |#is_short#| ((x Int)) Bool (and (<= (- 32768) x) (<= x 32767)))
(define-fun |#is_char#| ((x Int)) Bool (and (<= 0 x) (<= x 65535)))
(define-fun |#is_int#| ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(define-fun |#is_long#| ((x Int)) Bool (and (<= (- 9223372036854775808) x) (<= x 9223372036854775807)))
(define-fun |#big8#| () Int 256)
(define-fun |#big16#| () Int 65536)
(define-fun |#big32#| () Int 4294967296)
(define-fun |#big64#| () Int (* 4294967296 4294967296))
(define-fun |#max8#| () Int 127)
(define-fun |#min8#| () Int (- 128))
(define-fun |#max16#| () Int 32767)
(define-fun |#min16#| () Int (- 32768))
(define-fun |#max32#| () Int 2147483647)
(define-fun |#min32#| () Int (- 2147483648))
(define-fun |#max64#| () Int (- (* 2147483648 4294967296) 1))
(define-fun |#min64#| () Int (- (* 2147483648 4294967296)))
(define-fun |#isMul32ok#| ((x Int)(y Int)) Bool (let ((prod (* x y)) ) (and (<= |#min32#| prod) (<= prod |#max32#|))))
(define-fun |#isMul64ok#| ((x Int)(y Int)) Bool (let ((prod (* x y)) ) (and (<= |#min64#| prod) (<= prod |#max64#|))))
(define-fun |#trunc32s#| ((x Int)) Int (let ((m (mod x |#big32#|)) ) (ite (<= m |#max32#|) m (- m |#big32#|))))
(define-fun |#trunc16s#| ((x Int)) Int (let ((m (mod x |#big16#|)) ) (ite (<= m |#max16#|) m (- m |#big16#|))))
(define-fun |#trunc8s#| ((x Int)) Int (let ((m (mod x |#big8#|)) ) (ite (<= m |#max8#|) m (- m |#big8#|))))
(define-fun |#cdiv#| ((a Int)(b Int)) Int (ite (>= a 0) (div a b) (div (- a) (- b))))
(define-fun |#cmod#| ((a Int)(b Int)) Int (ite (>= a 0) (mod a b) (mod (- a) (- b))))
(define-fun |#inRange32#| ((a Int)) Bool (and (<= |#min32#| a) (<= a |#max32#|)))
(define-fun |#add32ok#| ((a Int)(b Int)) Bool (|#inRange32#| (+ a b)))
(define-fun |#add32#| ((a Int)(b Int)) Int (let ((p (+ a b)) ) (ite (|#inRange32#| p) p (ite (< |#max32#| p) (- p |#big32#|) (+ p |#big32#|)))))
(define-fun |#mul32ok#| ((a Int)(b Int)) Bool (|#inRange32#| (* a b)))
(define-fun |#mul32#| ((a Int)(b Int)) Int (let ((p (* a b)) ) (ite (|#inRange32#| p) p (+ (mod (- p |#min32#|) |#big32#|) |#min32#|))))
(define-fun |#inRange64#| ((a Int)) Bool (and (<= |#min64#| a) (<= a |#max64#|)))
(define-fun |#add64ok#| ((a Int)(b Int)) Bool (|#inRange64#| (+ a b)))
(define-fun |#add64#| ((a Int)(b Int)) Int (let ((p (+ a b)) ) (ite (|#inRange64#| p) p (ite (< |#max64#| p) (- p |#big64#|) (+ p |#big64#|)))))
(define-fun |#mul64ok#| ((a Int)(b Int)) Bool (|#inRange64#| (* a b)))
(define-fun |#mul64#| ((a Int)(b Int)) Int (let ((p (* a b)) ) (ite (|#inRange64#| p) p (+ (mod (- p |#min64#|) |#big64#|) |#min64#|))))
(declare-sort |RANGE| 0)
(declare-fun |range:cons| (Int Int ) |RANGE|)
(declare-fun |range:lo| (|RANGE| ) Int)
(declare-fun |range:hi| (|RANGE| ) Int)
(assert (forall ((i Int) (j Int) ) (= i (|range:lo| (|range:cons| i j)))))
(assert (forall ((i Int) (j Int) ) (= j (|range:hi| (|range:cons| i j)))))
(declare-sort JMLTypeSort 0)
(declare-fun javaTypeOf (REF ) REF)
(declare-fun jmlTypeOf (REF ) JMLTypeSort)
(declare-fun typearg1_1 (JMLTypeSort ) JMLTypeSort)
(declare-fun typearg2_1 (JMLTypeSort ) JMLTypeSort)
(declare-fun typearg2_2 (JMLTypeSort ) JMLTypeSort)
(declare-fun typearg3_1 (JMLTypeSort ) JMLTypeSort)
(declare-fun typearg3_2 (JMLTypeSort ) JMLTypeSort)
(declare-fun typearg3_3 (JMLTypeSort ) JMLTypeSort)
(declare-fun javaSubType (REF REF ) Bool)
(declare-fun jmlSubType (JMLTypeSort JMLTypeSort ) Bool)
(declare-fun erasure (JMLTypeSort ) REF)
(declare-fun erasure_java (REF ) REF)
(declare-fun _JMLT_0 (REF ) JMLTypeSort)
(declare-fun _JMLT_1 (REF JMLTypeSort ) JMLTypeSort)
(declare-fun _JMLT_2 (REF JMLTypeSort JMLTypeSort ) JMLTypeSort)
(declare-fun _JMLT_3 (REF JMLTypeSort JMLTypeSort JMLTypeSort ) JMLTypeSort)
(assert (forall ((o REF) ) (= (erasure (jmlTypeOf o)) (javaTypeOf o))))
(assert (forall ((o REF) ) (= (erasure_java (javaTypeOf o)) (javaTypeOf o))))
(declare-fun _makeArrayType (REF ) REF)
(declare-fun _isArrayType (REF ) Bool)
(declare-fun _makeJMLArrayType (JMLTypeSort ) JMLTypeSort)
(declare-fun _isJMLArrayType (JMLTypeSort ) Bool)
(declare-fun __arrayElemType (JMLTypeSort ) JMLTypeSort)
(assert (forall ((T JMLTypeSort) ) (= (erasure (_makeJMLArrayType T)) (_makeArrayType (erasure T)))))
(assert (forall ((T1 JMLTypeSort) (T2 JMLTypeSort) ) (=> (jmlSubType T1 T2) (javaSubType (erasure T1) (erasure T2)))))
(assert (forall ((T1 REF) (T2 REF) (T3 JMLTypeSort) ) (= (javaSubType T1 T2) (jmlSubType (_JMLT_1 T1 T3) (_JMLT_1 T2 T3)))))
(assert (forall ((T1 REF) (T2 REF) (T3 JMLTypeSort) (T4 JMLTypeSort) ) (=> (and (javaSubType T1 T2) (not (= T3 T4))) (not (jmlSubType (_JMLT_1 T1 T3) (_JMLT_1 T2 T4))))))
(assert (forall ((T1 REF) (T2 REF) (T3 JMLTypeSort) (T4 JMLTypeSort) ) (=> (jmlSubType (_JMLT_1 T1 T3) (_JMLT_1 T2 T4)) (and (javaSubType T1 T2) (= T3 T4)))))
(assert (forall ((T1 REF) (T2 REF) (T3 JMLTypeSort) (T4 JMLTypeSort) ) (=> (= (_JMLT_1 T1 T3) (_JMLT_1 T2 T4)) (and (= T1 T2) (= T3 T4)))))
(declare-fun nonnullelements (REF (Array REF (Array Int REF)) ) Bool)
(assert (forall ((a REF) (arrays (Array REF (Array Int REF))) ) (= (nonnullelements a arrays) (forall ((i Int) ) (=> (and (<= 0 i) (< i (select __JMLlength a))) (distinct NULL (select (select arrays a) i)))))))
(declare-fun T_java_lang_RuntimeException () REF)
(declare-fun JMLT_java_lang_RuntimeException () JMLTypeSort)
(declare-fun T_java_lang_CharSequence () REF)
(declare-fun JMLT_java_lang_CharSequence () JMLTypeSort)
(declare-fun T_java_io_Serializable () REF)
(declare-fun JMLT_java_io_Serializable () JMLTypeSort)
(declare-fun T_java_lang_Object () REF)
(declare-fun JMLT_java_lang_Object () JMLTypeSort)
(declare-fun T_java_lang_String () REF)
(declare-fun JMLT_java_lang_String () JMLTypeSort)
(declare-fun T_char () REF)
(declare-fun JMLT_char () JMLTypeSort)
(declare-fun T_java_util_Comparator () REF)
(declare-fun T_java_lang_IndexOutOfBoundsException () REF)
(declare-fun JMLT_java_lang_IndexOutOfBoundsException () JMLTypeSort)
(declare-fun T_java_lang_Exception () REF)
(declare-fun JMLT_java_lang_Exception () JMLTypeSort)
(declare-fun T_java_lang_Comparable () REF)
(declare-fun T_java_lang_StringIndexOutOfBoundsException () REF)
(declare-fun JMLT_java_lang_StringIndexOutOfBoundsException () JMLTypeSort)
(declare-fun T_IsSuffix () REF)
(declare-fun JMLT_IsSuffix () JMLTypeSort)
(assert (not (_isArrayType T_java_lang_RuntimeException)))
(assert (not (_isJMLArrayType JMLT_java_lang_RuntimeException)))
(assert (= (_JMLT_0 T_java_lang_RuntimeException) JMLT_java_lang_RuntimeException))
(assert (= (erasure JMLT_java_lang_RuntimeException) T_java_lang_RuntimeException))
(assert (not (_isArrayType T_java_lang_CharSequence)))
(assert (not (_isJMLArrayType JMLT_java_lang_CharSequence)))
(assert (= (_JMLT_0 T_java_lang_CharSequence) JMLT_java_lang_CharSequence))
(assert (= (erasure JMLT_java_lang_CharSequence) T_java_lang_CharSequence))
(assert (not (_isArrayType T_java_io_Serializable)))
(assert (not (_isJMLArrayType JMLT_java_io_Serializable)))
(assert (= (_JMLT_0 T_java_io_Serializable) JMLT_java_io_Serializable))
(assert (= (erasure JMLT_java_io_Serializable) T_java_io_Serializable))
(assert (not (_isArrayType T_java_lang_Object)))
(assert (not (_isJMLArrayType JMLT_java_lang_Object)))
(assert (= (_JMLT_0 T_java_lang_Object) JMLT_java_lang_Object))
(assert (= (erasure JMLT_java_lang_Object) T_java_lang_Object))
(assert (not (_isArrayType T_java_lang_String)))
(assert (forall ((t REF) ) (=> (javaSubType t T_java_lang_String) (= t T_java_lang_String))))
(assert (not (_isJMLArrayType JMLT_java_lang_String)))
(assert (= (_JMLT_0 T_java_lang_String) JMLT_java_lang_String))
(assert (= (erasure JMLT_java_lang_String) T_java_lang_String))
(assert (forall ((t JMLTypeSort) ) (=> (jmlSubType t JMLT_java_lang_String) (= t JMLT_java_lang_String))))
(assert (not (_isArrayType T_char)))
(assert (not (_isJMLArrayType JMLT_char)))
(assert (= (_JMLT_0 T_char) JMLT_char))
(assert (= (erasure JMLT_char) T_char))
(assert (not (_isArrayType T_java_util_Comparator)))
(assert (not (_isJMLArrayType (_JMLT_0 T_java_util_Comparator))))
(assert (= (erasure (_JMLT_0 T_java_util_Comparator)) T_java_util_Comparator))
(assert (not (_isArrayType T_java_lang_IndexOutOfBoundsException)))
(assert (not (_isJMLArrayType JMLT_java_lang_IndexOutOfBoundsException)))
(assert (= (_JMLT_0 T_java_lang_IndexOutOfBoundsException) JMLT_java_lang_IndexOutOfBoundsException))
(assert (= (erasure JMLT_java_lang_IndexOutOfBoundsException) T_java_lang_IndexOutOfBoundsException))
(assert (not (_isArrayType T_java_lang_Exception)))
(assert (not (_isJMLArrayType JMLT_java_lang_Exception)))
(assert (= (_JMLT_0 T_java_lang_Exception) JMLT_java_lang_Exception))
(assert (= (erasure JMLT_java_lang_Exception) T_java_lang_Exception))
(assert (not (_isArrayType T_java_lang_Comparable)))
(assert (not (_isJMLArrayType (_JMLT_0 T_java_lang_Comparable))))
(assert (= (erasure (_JMLT_0 T_java_lang_Comparable)) T_java_lang_Comparable))
(assert (not (_isArrayType T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (_isJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (= (_JMLT_0 T_java_lang_StringIndexOutOfBoundsException) JMLT_java_lang_StringIndexOutOfBoundsException))
(assert (= (erasure JMLT_java_lang_StringIndexOutOfBoundsException) T_java_lang_StringIndexOutOfBoundsException))
(assert (not (_isArrayType T_IsSuffix)))
(assert (not (_isJMLArrayType JMLT_IsSuffix)))
(assert (= (_JMLT_0 T_IsSuffix) JMLT_IsSuffix))
(assert (= (erasure JMLT_IsSuffix) T_IsSuffix))
(assert (distinct T_java_lang_RuntimeException T_java_lang_CharSequence T_java_io_Serializable T_java_lang_Object T_java_lang_String T_char T_java_util_Comparator T_java_lang_IndexOutOfBoundsException T_java_lang_Exception T_java_lang_Comparable T_java_lang_StringIndexOutOfBoundsException T_IsSuffix))
(assert (distinct JMLT_java_lang_RuntimeException JMLT_java_lang_CharSequence JMLT_java_io_Serializable JMLT_java_lang_Object JMLT_java_lang_String JMLT_char JMLT_java_lang_IndexOutOfBoundsException JMLT_java_lang_Exception JMLT_java_lang_StringIndexOutOfBoundsException JMLT_IsSuffix))
(assert (javaSubType T_java_lang_RuntimeException T_java_lang_RuntimeException))
(assert (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_RuntimeException)))
(assert (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_RuntimeException))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_RuntimeException)))
(assert (not (javaSubType T_java_lang_RuntimeException T_java_lang_CharSequence)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_CharSequence))))
(assert (not (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_CharSequence)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_CharSequence))))
(assert (javaSubType T_java_lang_RuntimeException T_java_io_Serializable))
(assert (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_io_Serializable)))
(assert (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_io_Serializable))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_io_Serializable)))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_RuntimeException) (javaSubType (javaTypeOf e) T_java_io_Serializable))))
(assert (javaSubType T_java_lang_RuntimeException T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_RuntimeException) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_RuntimeException T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_RuntimeException)) (not (javaSubType (javaTypeOf e) T_java_lang_String)))))
(assert (not (javaSubType T_java_lang_RuntimeException T_char)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_char))))
(assert (not (jmlSubType JMLT_java_lang_RuntimeException JMLT_char)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_char))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_RuntimeException)) (not (javaSubType (javaTypeOf e) T_char)))))
(assert (not (javaSubType T_java_lang_RuntimeException T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_util_Comparator))))
(assert (not (javaSubType T_java_lang_RuntimeException T_java_lang_IndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_IndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_IndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_IndexOutOfBoundsException) (javaSubType (javaTypeOf e) T_java_lang_RuntimeException))))
(assert (javaSubType T_java_lang_RuntimeException T_java_lang_Exception))
(assert (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_Exception)))
(assert (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_Exception))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_Exception)))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_RuntimeException) (javaSubType (javaTypeOf e) T_java_lang_Exception))))
(assert (not (javaSubType T_java_lang_RuntimeException T_java_lang_Comparable)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_Comparable))))
(assert (not (javaSubType T_java_lang_RuntimeException T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_StringIndexOutOfBoundsException) (javaSubType (javaTypeOf e) T_java_lang_RuntimeException))))
(assert (not (javaSubType T_java_lang_RuntimeException T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_IsSuffix))))
(assert (not (jmlSubType JMLT_java_lang_RuntimeException JMLT_IsSuffix)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_IsSuffix))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_RuntimeException)) (not (javaSubType (javaTypeOf e) T_IsSuffix)))))
(assert (not (javaSubType T_java_lang_CharSequence T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_java_lang_CharSequence JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_CharSequence) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (javaSubType T_java_lang_CharSequence T_java_lang_CharSequence))
(assert (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_java_lang_CharSequence)))
(assert (jmlSubType JMLT_java_lang_CharSequence JMLT_java_lang_CharSequence))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_CharSequence) (_makeJMLArrayType JMLT_java_lang_CharSequence)))
(assert (not (javaSubType T_java_lang_CharSequence T_java_io_Serializable)))
(assert (not (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_java_io_Serializable))))
(assert (not (jmlSubType JMLT_java_lang_CharSequence JMLT_java_io_Serializable)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_CharSequence) (_makeJMLArrayType JMLT_java_io_Serializable))))
(assert (javaSubType T_java_lang_CharSequence T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_CharSequence JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_CharSequence) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_CharSequence) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_CharSequence T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_lang_CharSequence JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_CharSequence) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_String) (javaSubType (javaTypeOf e) T_java_lang_CharSequence))))
(assert (not (javaSubType T_java_lang_CharSequence T_char)))
(assert (not (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_char))))
(assert (not (jmlSubType JMLT_java_lang_CharSequence JMLT_char)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_CharSequence) (_makeJMLArrayType JMLT_char))))
(assert (not (javaSubType T_java_lang_CharSequence T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_java_util_Comparator))))
(assert (not (javaSubType T_java_lang_CharSequence T_java_lang_IndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_java_lang_IndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_CharSequence JMLT_java_lang_IndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_CharSequence) (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException))))
(assert (not (javaSubType T_java_lang_CharSequence T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_java_lang_Exception))))
(assert (not (jmlSubType JMLT_java_lang_CharSequence JMLT_java_lang_Exception)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_CharSequence) (_makeJMLArrayType JMLT_java_lang_Exception))))
(assert (not (javaSubType T_java_lang_CharSequence T_java_lang_Comparable)))
(assert (not (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_java_lang_Comparable))))
(assert (not (javaSubType T_java_lang_CharSequence T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_CharSequence JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_CharSequence) (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException))))
(assert (not (javaSubType T_java_lang_CharSequence T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_java_lang_CharSequence) (_makeArrayType T_IsSuffix))))
(assert (not (jmlSubType JMLT_java_lang_CharSequence JMLT_IsSuffix)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_CharSequence) (_makeJMLArrayType JMLT_IsSuffix))))
(assert (not (javaSubType T_java_io_Serializable T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_java_io_Serializable JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_io_Serializable) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (not (javaSubType T_java_io_Serializable T_java_lang_CharSequence)))
(assert (not (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_java_lang_CharSequence))))
(assert (not (jmlSubType JMLT_java_io_Serializable JMLT_java_lang_CharSequence)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_io_Serializable) (_makeJMLArrayType JMLT_java_lang_CharSequence))))
(assert (javaSubType T_java_io_Serializable T_java_io_Serializable))
(assert (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_java_io_Serializable)))
(assert (jmlSubType JMLT_java_io_Serializable JMLT_java_io_Serializable))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_io_Serializable) (_makeJMLArrayType JMLT_java_io_Serializable)))
(assert (javaSubType T_java_io_Serializable T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_io_Serializable JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_io_Serializable) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_io_Serializable) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_io_Serializable T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_io_Serializable JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_io_Serializable) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_String) (javaSubType (javaTypeOf e) T_java_io_Serializable))))
(assert (not (javaSubType T_java_io_Serializable T_char)))
(assert (not (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_char))))
(assert (not (jmlSubType JMLT_java_io_Serializable JMLT_char)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_io_Serializable) (_makeJMLArrayType JMLT_char))))
(assert (not (javaSubType T_java_io_Serializable T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_java_util_Comparator))))
(assert (not (javaSubType T_java_io_Serializable T_java_lang_IndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_java_lang_IndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_io_Serializable JMLT_java_lang_IndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_io_Serializable) (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_IndexOutOfBoundsException) (javaSubType (javaTypeOf e) T_java_io_Serializable))))
(assert (not (javaSubType T_java_io_Serializable T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_java_lang_Exception))))
(assert (not (jmlSubType JMLT_java_io_Serializable JMLT_java_lang_Exception)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_io_Serializable) (_makeJMLArrayType JMLT_java_lang_Exception))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_Exception) (javaSubType (javaTypeOf e) T_java_io_Serializable))))
(assert (not (javaSubType T_java_io_Serializable T_java_lang_Comparable)))
(assert (not (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_java_lang_Comparable))))
(assert (not (javaSubType T_java_io_Serializable T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_io_Serializable JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_io_Serializable) (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_StringIndexOutOfBoundsException) (javaSubType (javaTypeOf e) T_java_io_Serializable))))
(assert (not (javaSubType T_java_io_Serializable T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_java_io_Serializable) (_makeArrayType T_IsSuffix))))
(assert (not (jmlSubType JMLT_java_io_Serializable JMLT_IsSuffix)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_io_Serializable) (_makeJMLArrayType JMLT_IsSuffix))))
(assert (not (javaSubType T_java_lang_Object T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (not (javaSubType T_java_lang_Object T_java_lang_CharSequence)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_CharSequence))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_lang_CharSequence)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_CharSequence))))
(assert (not (javaSubType T_java_lang_Object T_java_io_Serializable)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_io_Serializable))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_io_Serializable)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_io_Serializable))))
(assert (javaSubType T_java_lang_Object T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_Object JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (not (javaSubType T_java_lang_Object T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_String) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_Object T_char)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_char))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_char)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_char))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_Object)) (not (javaSubType (javaTypeOf e) T_char)))))
(assert (not (javaSubType T_java_lang_Object T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_util_Comparator))))
(assert (not (javaSubType T_java_lang_Object T_java_lang_IndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_IndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_lang_IndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_IndexOutOfBoundsException) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_Object T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_Exception))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_lang_Exception)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_Exception))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_Exception) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_Object T_java_lang_Comparable)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_Comparable))))
(assert (not (javaSubType T_java_lang_Object T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_StringIndexOutOfBoundsException) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_Object T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_IsSuffix))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_IsSuffix)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_IsSuffix))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_IsSuffix) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_String T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_java_lang_String JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (javaSubType T_java_lang_String T_java_lang_CharSequence))
(assert (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_CharSequence)))
(assert (jmlSubType JMLT_java_lang_String JMLT_java_lang_CharSequence))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_CharSequence)))
(assert (javaSubType T_java_lang_String T_java_io_Serializable))
(assert (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_io_Serializable)))
(assert (jmlSubType JMLT_java_lang_String JMLT_java_io_Serializable))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_io_Serializable)))
(assert (javaSubType T_java_lang_String T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_String JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (javaSubType T_java_lang_String T_java_lang_String))
(assert (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_String)))
(assert (jmlSubType JMLT_java_lang_String JMLT_java_lang_String))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_String)))
(assert (not (javaSubType T_java_lang_String T_char)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_char))))
(assert (not (jmlSubType JMLT_java_lang_String JMLT_char)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_char))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_String)) (not (javaSubType (javaTypeOf e) T_char)))))
(assert (not (javaSubType T_java_lang_String T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_util_Comparator))))
(assert (not (javaSubType T_java_lang_String T_java_lang_IndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_IndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_String JMLT_java_lang_IndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_String)) (not (javaSubType (javaTypeOf e) T_java_lang_IndexOutOfBoundsException)))))
(assert (not (javaSubType T_java_lang_String T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_Exception))))
(assert (not (jmlSubType JMLT_java_lang_String JMLT_java_lang_Exception)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_Exception))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_String)) (not (javaSubType (javaTypeOf e) T_java_lang_Exception)))))
(assert (javaSubType T_java_lang_String T_java_lang_Comparable))
(assert (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_Comparable)))
(assert (not (javaSubType T_java_lang_String T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_String JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_String)) (not (javaSubType (javaTypeOf e) T_java_lang_StringIndexOutOfBoundsException)))))
(assert (not (javaSubType T_java_lang_String T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_IsSuffix))))
(assert (not (jmlSubType JMLT_java_lang_String JMLT_IsSuffix)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_IsSuffix))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_String)) (not (javaSubType (javaTypeOf e) T_IsSuffix)))))
(assert (not (javaSubType T_char T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_char JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_char) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (not (javaSubType T_char T_java_lang_CharSequence)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_java_lang_CharSequence))))
(assert (not (jmlSubType JMLT_char JMLT_java_lang_CharSequence)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_char) (_makeJMLArrayType JMLT_java_lang_CharSequence))))
(assert (not (javaSubType T_char T_java_io_Serializable)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_java_io_Serializable))))
(assert (not (jmlSubType JMLT_char JMLT_java_io_Serializable)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_char) (_makeJMLArrayType JMLT_java_io_Serializable))))
(assert (not (javaSubType T_char T_java_lang_Object)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_java_lang_Object))))
(assert (not (jmlSubType JMLT_char JMLT_java_lang_Object)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_char) (_makeJMLArrayType JMLT_java_lang_Object))))
(assert (not (javaSubType T_char T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_char JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_char) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (javaSubType T_char T_char))
(assert (javaSubType (_makeArrayType T_char) (_makeArrayType T_char)))
(assert (jmlSubType JMLT_char JMLT_char))
(assert (jmlSubType (_makeJMLArrayType JMLT_char) (_makeJMLArrayType JMLT_char)))
(assert (not (javaSubType T_char T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_java_util_Comparator))))
(assert (not (javaSubType T_char T_java_lang_IndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_java_lang_IndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_char JMLT_java_lang_IndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_char) (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_char)) (not (javaSubType (javaTypeOf e) T_java_lang_IndexOutOfBoundsException)))))
(assert (not (javaSubType T_char T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_java_lang_Exception))))
(assert (not (jmlSubType JMLT_char JMLT_java_lang_Exception)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_char) (_makeJMLArrayType JMLT_java_lang_Exception))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_char)) (not (javaSubType (javaTypeOf e) T_java_lang_Exception)))))
(assert (not (javaSubType T_char T_java_lang_Comparable)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_java_lang_Comparable))))
(assert (not (javaSubType T_char T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_char JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_char) (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_char)) (not (javaSubType (javaTypeOf e) T_java_lang_StringIndexOutOfBoundsException)))))
(assert (not (javaSubType T_char T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_char) (_makeArrayType T_IsSuffix))))
(assert (not (jmlSubType JMLT_char JMLT_IsSuffix)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_char) (_makeJMLArrayType JMLT_IsSuffix))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_char)) (not (javaSubType (javaTypeOf e) T_IsSuffix)))))
(assert (not (javaSubType T_java_util_Comparator T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (javaSubType T_java_util_Comparator T_java_lang_CharSequence)))
(assert (not (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_java_lang_CharSequence))))
(assert (not (javaSubType T_java_util_Comparator T_java_io_Serializable)))
(assert (not (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_java_io_Serializable))))
(assert (javaSubType T_java_util_Comparator T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_java_lang_Object)))
(assert (not (javaSubType T_java_util_Comparator T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_java_lang_String))))
(assert (not (javaSubType T_java_util_Comparator T_char)))
(assert (not (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_char))))
(assert (javaSubType T_java_util_Comparator T_java_util_Comparator))
(assert (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_java_util_Comparator)))
(assert (not (javaSubType T_java_util_Comparator T_java_lang_IndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_java_lang_IndexOutOfBoundsException))))
(assert (not (javaSubType T_java_util_Comparator T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_java_lang_Exception))))
(assert (not (javaSubType T_java_util_Comparator T_java_lang_Comparable)))
(assert (not (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_java_lang_Comparable))))
(assert (not (javaSubType T_java_util_Comparator T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (javaSubType T_java_util_Comparator T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_java_util_Comparator) (_makeArrayType T_IsSuffix))))
(assert (javaSubType T_java_lang_IndexOutOfBoundsException T_java_lang_RuntimeException))
(assert (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_java_lang_RuntimeException)))
(assert (jmlSubType JMLT_java_lang_IndexOutOfBoundsException JMLT_java_lang_RuntimeException))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_RuntimeException)))
(assert (not (javaSubType T_java_lang_IndexOutOfBoundsException T_java_lang_CharSequence)))
(assert (not (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_java_lang_CharSequence))))
(assert (not (jmlSubType JMLT_java_lang_IndexOutOfBoundsException JMLT_java_lang_CharSequence)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_CharSequence))))
(assert (javaSubType T_java_lang_IndexOutOfBoundsException T_java_io_Serializable))
(assert (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_java_io_Serializable)))
(assert (jmlSubType JMLT_java_lang_IndexOutOfBoundsException JMLT_java_io_Serializable))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_io_Serializable)))
(assert (javaSubType T_java_lang_IndexOutOfBoundsException T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_IndexOutOfBoundsException JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (not (javaSubType T_java_lang_IndexOutOfBoundsException T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_lang_IndexOutOfBoundsException JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (not (javaSubType T_java_lang_IndexOutOfBoundsException T_char)))
(assert (not (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_char))))
(assert (not (jmlSubType JMLT_java_lang_IndexOutOfBoundsException JMLT_char)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException) (_makeJMLArrayType JMLT_char))))
(assert (not (javaSubType T_java_lang_IndexOutOfBoundsException T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_java_util_Comparator))))
(assert (javaSubType T_java_lang_IndexOutOfBoundsException T_java_lang_IndexOutOfBoundsException))
(assert (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_java_lang_IndexOutOfBoundsException)))
(assert (jmlSubType JMLT_java_lang_IndexOutOfBoundsException JMLT_java_lang_IndexOutOfBoundsException))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException)))
(assert (javaSubType T_java_lang_IndexOutOfBoundsException T_java_lang_Exception))
(assert (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_java_lang_Exception)))
(assert (jmlSubType JMLT_java_lang_IndexOutOfBoundsException JMLT_java_lang_Exception))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_Exception)))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_IndexOutOfBoundsException) (javaSubType (javaTypeOf e) T_java_lang_Exception))))
(assert (not (javaSubType T_java_lang_IndexOutOfBoundsException T_java_lang_Comparable)))
(assert (not (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_java_lang_Comparable))))
(assert (not (javaSubType T_java_lang_IndexOutOfBoundsException T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_IndexOutOfBoundsException JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_StringIndexOutOfBoundsException) (javaSubType (javaTypeOf e) T_java_lang_IndexOutOfBoundsException))))
(assert (not (javaSubType T_java_lang_IndexOutOfBoundsException T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_java_lang_IndexOutOfBoundsException) (_makeArrayType T_IsSuffix))))
(assert (not (jmlSubType JMLT_java_lang_IndexOutOfBoundsException JMLT_IsSuffix)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException) (_makeJMLArrayType JMLT_IsSuffix))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_IndexOutOfBoundsException)) (not (javaSubType (javaTypeOf e) T_IsSuffix)))))
(assert (not (javaSubType T_java_lang_Exception T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (not (javaSubType T_java_lang_Exception T_java_lang_CharSequence)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_CharSequence))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_CharSequence)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_CharSequence))))
(assert (javaSubType T_java_lang_Exception T_java_io_Serializable))
(assert (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_io_Serializable)))
(assert (jmlSubType JMLT_java_lang_Exception JMLT_java_io_Serializable))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_io_Serializable)))
(assert (javaSubType T_java_lang_Exception T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (not (javaSubType T_java_lang_Exception T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (not (javaSubType T_java_lang_Exception T_char)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_char))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_char)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_char))))
(assert (not (javaSubType T_java_lang_Exception T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_util_Comparator))))
(assert (not (javaSubType T_java_lang_Exception T_java_lang_IndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_IndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_IndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException))))
(assert (javaSubType T_java_lang_Exception T_java_lang_Exception))
(assert (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_Exception)))
(assert (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_Exception))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_Exception)))
(assert (not (javaSubType T_java_lang_Exception T_java_lang_Comparable)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_Comparable))))
(assert (not (javaSubType T_java_lang_Exception T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_StringIndexOutOfBoundsException) (javaSubType (javaTypeOf e) T_java_lang_Exception))))
(assert (not (javaSubType T_java_lang_Exception T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_IsSuffix))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_IsSuffix)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_IsSuffix))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_Exception)) (not (javaSubType (javaTypeOf e) T_IsSuffix)))))
(assert (not (javaSubType T_java_lang_Comparable T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (javaSubType T_java_lang_Comparable T_java_lang_CharSequence)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_java_lang_CharSequence))))
(assert (not (javaSubType T_java_lang_Comparable T_java_io_Serializable)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_java_io_Serializable))))
(assert (javaSubType T_java_lang_Comparable T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_java_lang_Object)))
(assert (not (javaSubType T_java_lang_Comparable T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_java_lang_String))))
(assert (not (javaSubType T_java_lang_Comparable T_char)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_char))))
(assert (not (javaSubType T_java_lang_Comparable T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_java_util_Comparator))))
(assert (not (javaSubType T_java_lang_Comparable T_java_lang_IndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_java_lang_IndexOutOfBoundsException))))
(assert (not (javaSubType T_java_lang_Comparable T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_java_lang_Exception))))
(assert (javaSubType T_java_lang_Comparable T_java_lang_Comparable))
(assert (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_java_lang_Comparable)))
(assert (not (javaSubType T_java_lang_Comparable T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (javaSubType T_java_lang_Comparable T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Comparable) (_makeArrayType T_IsSuffix))))
(assert (javaSubType T_java_lang_StringIndexOutOfBoundsException T_java_lang_RuntimeException))
(assert (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_java_lang_RuntimeException)))
(assert (jmlSubType JMLT_java_lang_StringIndexOutOfBoundsException JMLT_java_lang_RuntimeException))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_RuntimeException)))
(assert (not (javaSubType T_java_lang_StringIndexOutOfBoundsException T_java_lang_CharSequence)))
(assert (not (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_java_lang_CharSequence))))
(assert (not (jmlSubType JMLT_java_lang_StringIndexOutOfBoundsException JMLT_java_lang_CharSequence)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_CharSequence))))
(assert (javaSubType T_java_lang_StringIndexOutOfBoundsException T_java_io_Serializable))
(assert (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_java_io_Serializable)))
(assert (jmlSubType JMLT_java_lang_StringIndexOutOfBoundsException JMLT_java_io_Serializable))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_io_Serializable)))
(assert (javaSubType T_java_lang_StringIndexOutOfBoundsException T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_StringIndexOutOfBoundsException JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (not (javaSubType T_java_lang_StringIndexOutOfBoundsException T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_lang_StringIndexOutOfBoundsException JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (not (javaSubType T_java_lang_StringIndexOutOfBoundsException T_char)))
(assert (not (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_char))))
(assert (not (jmlSubType JMLT_java_lang_StringIndexOutOfBoundsException JMLT_char)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException) (_makeJMLArrayType JMLT_char))))
(assert (not (javaSubType T_java_lang_StringIndexOutOfBoundsException T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_java_util_Comparator))))
(assert (javaSubType T_java_lang_StringIndexOutOfBoundsException T_java_lang_IndexOutOfBoundsException))
(assert (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_java_lang_IndexOutOfBoundsException)))
(assert (jmlSubType JMLT_java_lang_StringIndexOutOfBoundsException JMLT_java_lang_IndexOutOfBoundsException))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException)))
(assert (javaSubType T_java_lang_StringIndexOutOfBoundsException T_java_lang_Exception))
(assert (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_java_lang_Exception)))
(assert (jmlSubType JMLT_java_lang_StringIndexOutOfBoundsException JMLT_java_lang_Exception))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_Exception)))
(assert (not (javaSubType T_java_lang_StringIndexOutOfBoundsException T_java_lang_Comparable)))
(assert (not (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_java_lang_Comparable))))
(assert (javaSubType T_java_lang_StringIndexOutOfBoundsException T_java_lang_StringIndexOutOfBoundsException))
(assert (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException)))
(assert (jmlSubType JMLT_java_lang_StringIndexOutOfBoundsException JMLT_java_lang_StringIndexOutOfBoundsException))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException) (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType T_java_lang_StringIndexOutOfBoundsException T_IsSuffix)))
(assert (not (javaSubType (_makeArrayType T_java_lang_StringIndexOutOfBoundsException) (_makeArrayType T_IsSuffix))))
(assert (not (jmlSubType JMLT_java_lang_StringIndexOutOfBoundsException JMLT_IsSuffix)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException) (_makeJMLArrayType JMLT_IsSuffix))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_StringIndexOutOfBoundsException)) (not (javaSubType (javaTypeOf e) T_IsSuffix)))))
(assert (not (javaSubType T_IsSuffix T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_IsSuffix JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_IsSuffix) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (not (javaSubType T_IsSuffix T_java_lang_CharSequence)))
(assert (not (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_java_lang_CharSequence))))
(assert (not (jmlSubType JMLT_IsSuffix JMLT_java_lang_CharSequence)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_IsSuffix) (_makeJMLArrayType JMLT_java_lang_CharSequence))))
(assert (not (javaSubType T_IsSuffix T_java_io_Serializable)))
(assert (not (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_java_io_Serializable))))
(assert (not (jmlSubType JMLT_IsSuffix JMLT_java_io_Serializable)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_IsSuffix) (_makeJMLArrayType JMLT_java_io_Serializable))))
(assert (javaSubType T_IsSuffix T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_IsSuffix JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_IsSuffix) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (not (javaSubType T_IsSuffix T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_IsSuffix JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_IsSuffix) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (not (javaSubType T_IsSuffix T_char)))
(assert (not (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_char))))
(assert (not (jmlSubType JMLT_IsSuffix JMLT_char)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_IsSuffix) (_makeJMLArrayType JMLT_char))))
(assert (not (javaSubType T_IsSuffix T_java_util_Comparator)))
(assert (not (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_java_util_Comparator))))
(assert (not (javaSubType T_IsSuffix T_java_lang_IndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_java_lang_IndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_IsSuffix JMLT_java_lang_IndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_IsSuffix) (_makeJMLArrayType JMLT_java_lang_IndexOutOfBoundsException))))
(assert (not (javaSubType T_IsSuffix T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_java_lang_Exception))))
(assert (not (jmlSubType JMLT_IsSuffix JMLT_java_lang_Exception)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_IsSuffix) (_makeJMLArrayType JMLT_java_lang_Exception))))
(assert (not (javaSubType T_IsSuffix T_java_lang_Comparable)))
(assert (not (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_java_lang_Comparable))))
(assert (not (javaSubType T_IsSuffix T_java_lang_StringIndexOutOfBoundsException)))
(assert (not (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_java_lang_StringIndexOutOfBoundsException))))
(assert (not (jmlSubType JMLT_IsSuffix JMLT_java_lang_StringIndexOutOfBoundsException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_IsSuffix) (_makeJMLArrayType JMLT_java_lang_StringIndexOutOfBoundsException))))
(assert (javaSubType T_IsSuffix T_IsSuffix))
(assert (javaSubType (_makeArrayType T_IsSuffix) (_makeArrayType T_IsSuffix)))
(assert (jmlSubType JMLT_IsSuffix JMLT_IsSuffix))
(assert (jmlSubType (_makeJMLArrayType JMLT_IsSuffix) (_makeJMLArrayType JMLT_IsSuffix)))
(assert (forall ((t1 REF) (t2 REF) (t3 REF) ) (=> (and (javaSubType t1 t2) (javaSubType t2 t3)) (javaSubType t1 t3))))
(assert (forall ((t1 JMLTypeSort) (t2 JMLTypeSort) (t3 JMLTypeSort) ) (=> (and (jmlSubType t1 t2) (jmlSubType t2 t3)) (jmlSubType t1 t3))))
(assert (distinct T_java_lang_RuntimeException T_java_lang_CharSequence T_java_io_Serializable T_java_lang_Object T_java_lang_String T_char T_java_util_Comparator T_java_lang_IndexOutOfBoundsException T_java_lang_Exception T_java_lang_Comparable T_java_lang_StringIndexOutOfBoundsException T_IsSuffix))
(assert (distinct (_JMLT_0 T_char) (_JMLT_0 T_IsSuffix) (_JMLT_0 T_java_lang_StringIndexOutOfBoundsException) (_JMLT_0 T_java_lang_String) (_JMLT_0 T_java_lang_Exception) (_JMLT_0 T_java_lang_Object) (_JMLT_0 T_java_lang_RuntimeException) (_JMLT_0 T_java_lang_CharSequence) (_JMLT_0 T_java_io_Serializable) (_JMLT_1 T_java_lang_Comparable JMLT_java_lang_String) (_JMLT_0 T_java_lang_IndexOutOfBoundsException) (_JMLT_1 T_java_util_Comparator JMLT_java_lang_String)))
(declare-fun |java.lang.Object_objectTimesFinalized_111030101918| () (Array REF Int))
(declare-fun |java.lang.Object_`isalloc___7_0___4| () (Array REF Bool))
(declare-fun |java.lang.Object___owner_1586_0___5| () (Array REF REF))
(declare-fun |java.lang.CharSequence_charArray_1045_0_1380892664| () (Array REF REF))
(declare-fun |java.lang.String_CASE_INSENSITIVE_ORDER| () REF)
(declare-fun |java.lang.Object_`alloc___7_0___7| () (Array REF Int))
(declare-fun |java.lang.Object_theString_8079_0___8| () (Array REF REF))
(declare-fun |IsSuffix__heap___0_0___9| () Int)
(declare-fun |java.lang.Object_theHashCode_2252_0___10| () (Array REF Int))
(declare-fun |pat_0_0___11| () REF)
(declare-fun |txt_0_0___12| () REF)
(declare-fun |`exception_233_233___13| () REF)
(declare-fun |`terminationPosition_233_233___14| () Int)
(declare-fun |pat_250_250___15| () REF)
(declare-fun |txt_262_262___16| () REF)
(declare-fun |`result_233_233___17| () Bool)
(declare-fun |IsSuffix__heap___0_233___18| () Int)
(declare-fun |Array_length| () (Array REF Int))
(declare-fun arrays_char_0 () (Array REF (Array Int Int)))
(declare-fun |j_469_469___19| () Int)
(declare-fun |BL_233_afterIf_3_source| () Int)
(declare-fun |BL_250_afterIf_6_source| () Int)
(declare-fun |BL_250_afterIf_9_source| () Int)
(declare-fun |BL_250_afterIf_12_source| () Int)
(declare-fun |BL_262_afterIf_15_source| () Int)
(declare-fun |BL_262_afterIf_18_source| () Int)
(declare-fun |BL_262_afterIf_21_source| () Int)
(declare-fun |`conditionalResult_95_262_262___20| () Bool)
(declare-fun |`conditionalResult_95_262_262___21| () Bool)
(declare-fun |`conditionalResult_95_262_0___22| () Bool)
(declare-fun |BL_262_afterIf_24_source| () Int)
(declare-fun |`conditionalResult_99_54_54___23| () Bool)
(declare-fun |`conditionalResult_99_54_61___24| () Bool)
(declare-fun |`conditionalResult_99_54_0___25| () Bool)
(declare-fun |BL_54_afterIf_30_source| () Int)
(declare-fun |BL_54_afterIf_27_source| () Int)
(declare-fun |Pre_2_54_33___26| () Bool)
(declare-fun |BL_33_afterIf_33_source| () Int)
(declare-fun |ASSERT_152_287| () Bool)
(declare-fun |ASSERT_156_0| () Bool)
(declare-fun |BL_297_afterIf_45_source| () Int)
(declare-fun |`exceptionCall_297_297___27| () REF)
(declare-fun |ASSERT_161_3235| () Bool)
(declare-fun |i_283_283___28| () Int)
(declare-fun |index_444_115_444_444___29| () Int)
(declare-fun |ASSERT_185_331| () Bool)
(declare-fun |index_444_115_444_458___30| () Int)
(declare-fun |i_283_604___31| () Int)
(declare-fun |index_444_115_444_458___32| () Int)
(declare-fun |ASSERT_204_477| () Bool)
(declare-fun |ASSERT_208_0| () Bool)
(declare-fun |BL_487_afterIf_57_source| () Int)
(declare-fun |`exceptionCall_487_487___33| () REF)
(declare-fun |ASSERT_213_3235| () Bool)
(declare-fun |ASSERT_222_492| () Bool)
(declare-fun |ASSERT_226_0| () Bool)
(declare-fun |BL_502_afterIf_61_source| () Int)
(declare-fun |`exceptionCall_502_502___34| () REF)
(declare-fun |ASSERT_231_3235| () Bool)
(declare-fun |j_469_469___35| () Int)
(declare-fun |`conditionalResult_170_527_527___36| () Bool)
(declare-fun |`conditionalResult_170_527_0___37| () Bool)
(declare-fun |ASSERT_241_530| () Bool)
(declare-fun |ASSERT_242_530| () Bool)
(declare-fun |BL_540_afterIf_67_source| () Int)
(declare-fun |ASSERT_243_250| () Bool)
(declare-fun |BL_250_afterIf_70_source| () Int)
(declare-fun |ASSERT_244_262| () Bool)
(declare-fun |BL_262_afterIf_73_source| () Int)
(declare-fun |ASSERT_245_530| () Bool)
(declare-fun |BL_540_afterIf_76_source| () Int)
(declare-fun |ASSERT_250_3357| () Bool)
(declare-fun |ASSERT_256_3516| () Bool)
(declare-fun |`conditionalResult_191_13335_13335___38| () Bool)
(declare-fun |`conditionalResult_191_13335_0___39| () Bool)
(declare-fun |ASSERT_264_0| () Bool)
(declare-fun |BL_13353_afterIf_83_source| () Int)
(declare-fun |ASSERT_268_3235| () Bool)
(declare-fun |`conditionalResult_191_13335_13344___40| () Bool)
(declare-fun |BL_13335_afterIf_79_source| () Int)
(declare-fun |ASSERT_274_3346| () Bool)
(declare-fun |BL_3297_afterIf_90_source| () Int)
(declare-fun |BL_3297_afterIf_87_source| () Int)
(declare-fun |BL_3449_afterIf_96_source| () Int)
(declare-fun |BL_3449_afterIf_93_source| () Int)
(declare-fun |BL_13285_afterIf_102_source| () Int)
(declare-fun |BL_13285_afterIf_99_source| () Int)
(declare-fun |BL_540_afterIf_105_source| () Int)
(declare-fun |BL_540_afterIf_108_source| () Int)
(declare-fun |BL_540_afterIf_111_source| () Int)
(declare-fun |BL_540_afterIf_114_source| () Int)
(declare-fun |`exceptionCall_540_540___41| () REF)
(declare-fun |ASSERT_289_3408| () Bool)
(declare-fun |ASSERT_290_3408| () Bool)
(declare-fun |BL_3298_afterIf_120_source| () Int)
(declare-fun |BL_3450_afterIf_123_source| () Int)
(declare-fun |BL_13286_afterIf_126_source| () Int)
(declare-fun |`exception_233_540___42| () REF)
(declare-fun |`terminationPosition_233_540___43| () Int)
(declare-fun |BL_3297_afterIf_132_source| () Int)
(declare-fun |BL_3298_afterIf_129_source| () Int)
(declare-fun |BL_3450_afterIf_135_source| () Int)
(declare-fun |BL_13286_afterIf_138_source| () Int)
(declare-fun |ASSERT_298_547| () Bool)
(declare-fun |ASSERT_299_547| () Bool)
(declare-fun |BL_557_afterIf_142_source| () Int)
(declare-fun |ASSERT_300_250| () Bool)
(declare-fun |BL_250_afterIf_145_source| () Int)
(declare-fun |ASSERT_301_262| () Bool)
(declare-fun |BL_262_afterIf_148_source| () Int)
(declare-fun |ASSERT_302_547| () Bool)
(declare-fun |BL_557_afterIf_151_source| () Int)
(declare-fun |ASSERT_307_3357| () Bool)
(declare-fun |ASSERT_313_3516| () Bool)
(declare-fun |`conditionalResult_227_13335_13335___44| () Bool)
(declare-fun |`conditionalResult_227_13335_0___45| () Bool)
(declare-fun |ASSERT_321_0| () Bool)
(declare-fun |BL_13353_afterIf_158_source| () Int)
(declare-fun |ASSERT_325_3235| () Bool)
(declare-fun |`conditionalResult_227_13335_13344___46| () Bool)
(declare-fun |BL_13335_afterIf_154_source| () Int)
(declare-fun |ASSERT_331_3346| () Bool)
(declare-fun |BL_3297_afterIf_165_source| () Int)
(declare-fun |BL_3297_afterIf_162_source| () Int)
(declare-fun |BL_3449_afterIf_171_source| () Int)
(declare-fun |BL_3449_afterIf_168_source| () Int)
(declare-fun |BL_13285_afterIf_177_source| () Int)
(declare-fun |BL_13285_afterIf_174_source| () Int)
(declare-fun |BL_557_afterIf_180_source| () Int)
(declare-fun |BL_557_afterIf_183_source| () Int)
(declare-fun |BL_557_afterIf_186_source| () Int)
(declare-fun |BL_557_afterIf_189_source| () Int)
(declare-fun |`exceptionCall_557_557___47| () REF)
(declare-fun |ASSERT_346_3408| () Bool)
(declare-fun |ASSERT_347_3408| () Bool)
(declare-fun |BL_3298_afterIf_195_source| () Int)
(declare-fun |BL_3450_afterIf_198_source| () Int)
(declare-fun |BL_13286_afterIf_201_source| () Int)
(declare-fun |`exception_233_557___48| () REF)
(declare-fun |`terminationPosition_233_557___49| () Int)
(declare-fun |BL_3297_afterIf_207_source| () Int)
(declare-fun |BL_3298_afterIf_204_source| () Int)
(declare-fun |BL_3450_afterIf_210_source| () Int)
(declare-fun |BL_13286_afterIf_213_source| () Int)
(declare-fun |`conditionalResult_170_527_544___50| () Bool)
(declare-fun |BL_527_afterIf_64_source| () Int)
(declare-fun |`result_233_578___51| () Bool)
(declare-fun |`terminationPosition_233_578___52| () Int)
(declare-fun |`exception_233_578___53| () REF)
(declare-fun |i_283_604___54| () Int)
(declare-fun |index_444_115_444_444___55| () Int)
(declare-fun |ASSERT_371_331| () Bool)
(declare-fun |BL_444_LoopAfter_51_source| () Int)
(declare-fun |`result_233_634___56| () Bool)
(declare-fun |`terminationPosition_233_634___57| () Int)
(declare-fun |`exception_233_634___58| () REF)
(declare-fun |BL_233tryTarget_38_source| () Int)
(declare-fun |BL_233_finally_39_source| () Int)
(declare-fun |__JMLsavedException_233_233_233___59| () REF)
(declare-fun |__JMLsavedTermination_233_233_233___60| () Int)
(declare-fun |ASSERT_372_1093| () Bool)
(declare-fun |BL_250_afterIf_226_source| () Int)
(declare-fun |ASSERT_373_1093| () Bool)
(declare-fun |BL_262_afterIf_229_source| () Int)
(declare-fun |ASSERT_389_86| () Bool)
(declare-fun |BL_78_afterIf_232_source| () Int)
(declare-fun |ASSERT_374_250| () Bool)
(declare-fun |BL_250_afterIf_235_source| () Int)
(declare-fun |ASSERT_375_262| () Bool)
(declare-fun |BL_262_afterIf_238_source| () Int)
(declare-fun |ASSERT_390_233| () Bool)
(declare-fun |BL_233_afterIf_223_source| () Int)
(declare-fun |`exception_233_233___61| () REF)
(declare-fun |`terminationPosition_233_233___62| () Int)
(declare-fun |BL_233_AfterTry_37_source| () Int)
(declare-fun BL_233Start_1 () Bool)
(declare-fun BL_267bodyBegin_2 () Bool)
(declare-fun BL_233_then_4 () Bool)
(declare-fun BL_233_else_5 () Bool)
(declare-fun BL_233_afterIf_3 () Bool)
(declare-fun BL_250_then_7 () Bool)
(declare-fun BL_250_else_8 () Bool)
(declare-fun BL_250_afterIf_6 () Bool)
(declare-fun BL_250_then_10 () Bool)
(declare-fun BL_250_else_11 () Bool)
(declare-fun BL_250_afterIf_9 () Bool)
(declare-fun BL_250_then_13 () Bool)
(declare-fun BL_250_else_14 () Bool)
(declare-fun BL_250_afterIf_12 () Bool)
(declare-fun BL_262_then_16 () Bool)
(declare-fun BL_262_else_17 () Bool)
(declare-fun BL_262_afterIf_15 () Bool)
(declare-fun BL_262_then_19 () Bool)
(declare-fun BL_262_else_20 () Bool)
(declare-fun BL_262_afterIf_18 () Bool)
(declare-fun BL_262_then_22 () Bool)
(declare-fun BL_262_else_23 () Bool)
(declare-fun BL_262_afterIf_21 () Bool)
(declare-fun BL_262_then_25 () Bool)
(declare-fun BL_262_else_26 () Bool)
(declare-fun BL_262_afterIf_24 () Bool)
(declare-fun BL_54_then_28 () Bool)
(declare-fun BL_54_then_31 () Bool)
(declare-fun BL_54_else_32 () Bool)
(declare-fun BL_54_afterIf_30 () Bool)
(declare-fun BL_54_else_29 () Bool)
(declare-fun BL_54_afterIf_27 () Bool)
(declare-fun BL_33_then_34 () Bool)
(declare-fun BL_33_else_35 () Bool)
(declare-fun BL_33_afterIf_33 () Bool)
(declare-fun BL_233_AfterLabel_36 () Bool)
(declare-fun BL_297_AfterLabel_44 () Bool)
(declare-fun BL_297_then_46 () Bool)
(declare-fun BL_297_else_47 () Bool)
(declare-fun BL_297_afterIf_45 () Bool)
(declare-fun BL_444_LoopBody_48 () Bool)
(declare-fun BL_444_then_53 () Bool)
(declare-fun BL_444_else_54 () Bool)
(declare-fun BL_444_afterIf_52 () Bool)
(declare-fun BL_487_AfterLabel_56 () Bool)
(declare-fun BL_487_then_58 () Bool)
(declare-fun BL_487_else_59 () Bool)
(declare-fun BL_487_afterIf_57 () Bool)
(declare-fun BL_502_AfterLabel_60 () Bool)
(declare-fun BL_502_then_62 () Bool)
(declare-fun BL_502_else_63 () Bool)
(declare-fun BL_502_afterIf_61 () Bool)
(declare-fun BL_527_then_65 () Bool)
(declare-fun BL_527_else_66 () Bool)
(declare-fun BL_540_then_68 () Bool)
(declare-fun BL_540_else_69 () Bool)
(declare-fun BL_540_afterIf_67 () Bool)
(declare-fun BL_250_then_71 () Bool)
(declare-fun BL_250_else_72 () Bool)
(declare-fun BL_250_afterIf_70 () Bool)
(declare-fun BL_262_then_74 () Bool)
(declare-fun BL_262_else_75 () Bool)
(declare-fun BL_262_afterIf_73 () Bool)
(declare-fun BL_540_then_77 () Bool)
(declare-fun BL_540_else_78 () Bool)
(declare-fun BL_540_afterIf_76 () Bool)
(declare-fun BL_13335_then_80 () Bool)
(declare-fun BL_13335_else_81 () Bool)
(declare-fun BL_13353_AfterLabel_82 () Bool)
(declare-fun BL_13353_then_84 () Bool)
(declare-fun BL_13353_else_85 () Bool)
(declare-fun BL_13353_afterIf_83 () Bool)
(declare-fun BL_13335_afterIf_79 () Bool)
(declare-fun BL_540_AfterLabel_86 () Bool)
(declare-fun BL_3297_then_88 () Bool)
(declare-fun BL_3297_then_91 () Bool)
(declare-fun BL_3297_else_92 () Bool)
(declare-fun BL_3297_afterIf_90 () Bool)
(declare-fun BL_3297_else_89 () Bool)
(declare-fun BL_3297_afterIf_87 () Bool)
(declare-fun BL_3449_then_94 () Bool)
(declare-fun BL_3449_then_97 () Bool)
(declare-fun BL_3449_else_98 () Bool)
(declare-fun BL_3449_afterIf_96 () Bool)
(declare-fun BL_3449_else_95 () Bool)
(declare-fun BL_3449_afterIf_93 () Bool)
(declare-fun BL_13285_then_100 () Bool)
(declare-fun BL_13285_then_103 () Bool)
(declare-fun BL_13285_else_104 () Bool)
(declare-fun BL_13285_afterIf_102 () Bool)
(declare-fun BL_13285_else_101 () Bool)
(declare-fun BL_13285_afterIf_99 () Bool)
(declare-fun BL_540_then_106 () Bool)
(declare-fun BL_540_else_107 () Bool)
(declare-fun BL_540_afterIf_105 () Bool)
(declare-fun BL_540_then_109 () Bool)
(declare-fun BL_540_else_110 () Bool)
(declare-fun BL_540_afterIf_108 () Bool)
(declare-fun BL_540_then_112 () Bool)
(declare-fun BL_540_else_113 () Bool)
(declare-fun BL_540_afterIf_111 () Bool)
(declare-fun BL_540_then_115 () Bool)
(declare-fun BL_540_else_116 () Bool)
(declare-fun BL_540_afterIf_114 () Bool)
(declare-fun BL_530_then_118 () Bool)
(declare-fun BL_3298_then_121 () Bool)
(declare-fun BL_3298_else_122 () Bool)
(declare-fun BL_3298_afterIf_120 () Bool)
(declare-fun BL_3450_then_124 () Bool)
(declare-fun BL_3450_else_125 () Bool)
(declare-fun BL_3450_afterIf_123 () Bool)
(declare-fun BL_13286_then_127 () Bool)
(declare-fun BL_13286_else_128 () Bool)
(declare-fun BL_13286_afterIf_126 () Bool)
(declare-fun BL_530_else_119 () Bool)
(declare-fun BL_3298_then_130 () Bool)
(declare-fun BL_3297_then_133 () Bool)
(declare-fun BL_3297_else_134 () Bool)
(declare-fun BL_3297_afterIf_132 () Bool)
(declare-fun BL_3298_else_131 () Bool)
(declare-fun BL_3298_afterIf_129 () Bool)
(declare-fun BL_3450_then_136 () Bool)
(declare-fun BL_3450_else_137 () Bool)
(declare-fun BL_3450_afterIf_135 () Bool)
(declare-fun BL_13286_then_139 () Bool)
(declare-fun BL_13286_else_140 () Bool)
(declare-fun BL_13286_afterIf_138 () Bool)
(declare-fun BL_540_throw_141 () Bool)
(declare-fun BL_530_afterIf_117 () Bool)
(declare-fun BL_557_then_143 () Bool)
(declare-fun BL_557_else_144 () Bool)
(declare-fun BL_557_afterIf_142 () Bool)
(declare-fun BL_250_then_146 () Bool)
(declare-fun BL_250_else_147 () Bool)
(declare-fun BL_250_afterIf_145 () Bool)
(declare-fun BL_262_then_149 () Bool)
(declare-fun BL_262_else_150 () Bool)
(declare-fun BL_262_afterIf_148 () Bool)
(declare-fun BL_557_then_152 () Bool)
(declare-fun BL_557_else_153 () Bool)
(declare-fun BL_557_afterIf_151 () Bool)
(declare-fun BL_13335_then_155 () Bool)
(declare-fun BL_13335_else_156 () Bool)
(declare-fun BL_13353_AfterLabel_157 () Bool)
(declare-fun BL_13353_then_159 () Bool)
(declare-fun BL_13353_else_160 () Bool)
(declare-fun BL_13353_afterIf_158 () Bool)
(declare-fun BL_13335_afterIf_154 () Bool)
(declare-fun BL_557_AfterLabel_161 () Bool)
(declare-fun BL_3297_then_163 () Bool)
(declare-fun BL_3297_then_166 () Bool)
(declare-fun BL_3297_else_167 () Bool)
(declare-fun BL_3297_afterIf_165 () Bool)
(declare-fun BL_3297_else_164 () Bool)
(declare-fun BL_3297_afterIf_162 () Bool)
(declare-fun BL_3449_then_169 () Bool)
(declare-fun BL_3449_then_172 () Bool)
(declare-fun BL_3449_else_173 () Bool)
(declare-fun BL_3449_afterIf_171 () Bool)
(declare-fun BL_3449_else_170 () Bool)
(declare-fun BL_3449_afterIf_168 () Bool)
(declare-fun BL_13285_then_175 () Bool)
(declare-fun BL_13285_then_178 () Bool)
(declare-fun BL_13285_else_179 () Bool)
(declare-fun BL_13285_afterIf_177 () Bool)
(declare-fun BL_13285_else_176 () Bool)
(declare-fun BL_13285_afterIf_174 () Bool)
(declare-fun BL_557_then_181 () Bool)
(declare-fun BL_557_else_182 () Bool)
(declare-fun BL_557_afterIf_180 () Bool)
(declare-fun BL_557_then_184 () Bool)
(declare-fun BL_557_else_185 () Bool)
(declare-fun BL_557_afterIf_183 () Bool)
(declare-fun BL_557_then_187 () Bool)
(declare-fun BL_557_else_188 () Bool)
(declare-fun BL_557_afterIf_186 () Bool)
(declare-fun BL_557_then_190 () Bool)
(declare-fun BL_557_else_191 () Bool)
(declare-fun BL_557_afterIf_189 () Bool)
(declare-fun BL_547_then_193 () Bool)
(declare-fun BL_3298_then_196 () Bool)
(declare-fun BL_3298_else_197 () Bool)
(declare-fun BL_3298_afterIf_195 () Bool)
(declare-fun BL_3450_then_199 () Bool)
(declare-fun BL_3450_else_200 () Bool)
(declare-fun BL_3450_afterIf_198 () Bool)
(declare-fun BL_13286_then_202 () Bool)
(declare-fun BL_13286_else_203 () Bool)
(declare-fun BL_13286_afterIf_201 () Bool)
(declare-fun BL_547_else_194 () Bool)
(declare-fun BL_3298_then_205 () Bool)
(declare-fun BL_3297_then_208 () Bool)
(declare-fun BL_3297_else_209 () Bool)
(declare-fun BL_3297_afterIf_207 () Bool)
(declare-fun BL_3298_else_206 () Bool)
(declare-fun BL_3298_afterIf_204 () Bool)
(declare-fun BL_3450_then_211 () Bool)
(declare-fun BL_3450_else_212 () Bool)
(declare-fun BL_3450_afterIf_210 () Bool)
(declare-fun BL_13286_then_214 () Bool)
(declare-fun BL_13286_else_215 () Bool)
(declare-fun BL_13286_afterIf_213 () Bool)
(declare-fun BL_557_throw_216 () Bool)
(declare-fun BL_547_afterIf_192 () Bool)
(declare-fun BL_527_afterIf_64 () Bool)
(declare-fun BL_518_then_218 () Bool)
(declare-fun BL_578_return_220 () Bool)
(declare-fun BL_518_else_219 () Bool)
(declare-fun BL_518_afterIf_217 () Bool)
(declare-fun BL_606_AfterLabel_221 () Bool)
(declare-fun BL_458_AfterLabel_55 () Bool)
(declare-fun BL_444_LoopContinue_49 () Bool)
(declare-fun BL_444_LoopEnd_50 () Bool)
(declare-fun BL_444_LoopAfter_51 () Bool)
(declare-fun BL_634_return_222 () Bool)
(declare-fun BL_233tryTarget_38 () Bool)
(declare-fun BL_233noException_40 () Bool)
(declare-fun BL_233nocatch_41 () Bool)
(declare-fun BL_233_finally_39 () Bool)
(declare-fun BL_233_then_224 () Bool)
(declare-fun BL_250_then_227 () Bool)
(declare-fun BL_250_else_228 () Bool)
(declare-fun BL_250_afterIf_226 () Bool)
(declare-fun BL_262_then_230 () Bool)
(declare-fun BL_262_else_231 () Bool)
(declare-fun BL_262_afterIf_229 () Bool)
(declare-fun BL_78_then_233 () Bool)
(declare-fun BL_78_else_234 () Bool)
(declare-fun BL_78_afterIf_232 () Bool)
(declare-fun BL_233_else_225 () Bool)
(declare-fun BL_250_then_236 () Bool)
(declare-fun BL_250_else_237 () Bool)
(declare-fun BL_250_afterIf_235 () Bool)
(declare-fun BL_262_then_239 () Bool)
(declare-fun BL_262_else_240 () Bool)
(declare-fun BL_262_afterIf_238 () Bool)
(declare-fun BL_233_afterIf_223 () Bool)
(declare-fun BL_233finallyNormal_42 () Bool)
(declare-fun BL_233finallyExit_43 () Bool)
(declare-fun BL_233_AfterTry_37 () Bool)
(assert (= BL_233Start_1 BL_267bodyBegin_2))
(declare-fun |__JML_FeasCheck_| () Int)
(declare-fun |`THIS| () REF)
(declare-fun java_lang_CharSequence_equal$_H2_1965 (REF REF ) Bool)
(declare-fun |_JML__tmp22| () Bool)
(assert (= |_JML__tmp22| (forall ((|a| REF) ) (=> (distinct |a| NULL) (java_lang_CharSequence_equal$_H2_1965 |a| |a|)))))
(declare-fun |_JML__tmp25| () Bool)
(assert (= |_JML__tmp25| (forall ((|a| REF) (|b| REF) ) (=> (and (distinct |a| NULL) (distinct |b| NULL)) (= (java_lang_CharSequence_equal$_H2_1965 |a| |b|) (java_lang_CharSequence_equal$_H2_1965 |b| |a|))))))
(declare-fun |_JML__tmp29| () Bool)
(assert (= |_JML__tmp29| (forall ((|a| REF) (|b| REF) (|c| REF) ) (=> (and (and (distinct |a| NULL) (distinct |b| NULL)) (distinct |c| NULL)) (or (not (and (java_lang_CharSequence_equal$_H2_1965 |a| |b|) (java_lang_CharSequence_equal$_H2_1965 |b| |c|))) (java_lang_CharSequence_equal$_H2_1965 |a| |c|))))))
(declare-fun java_lang_String_equals$_18430 (REF REF ) Bool)
(declare-fun java_lang_String_length$_12891 (REF ) Int)
(declare-fun |_JML__tmp45| () Bool)
(assert (= |_JML__tmp45| (forall ((|s| REF) (|ss| REF) ) (=> (and (distinct |s| NULL) (distinct |ss| NULL)) (or (not (java_lang_String_equals$_18430 |s| |ss|)) (= (java_lang_String_length$_12891 |s|) (java_lang_String_length$_12891 |ss|)))))))
(declare-fun |_JML__tmp46| () Bool)
(assert (= |_JML__tmp46| (forall ((|s1| REF) (|s2| REF) (|s3| REF) ) (or (not (java_lang_String_equals$_18430 |s1| |s2|)) (= (java_lang_String_equals$_18430 |s1| |s3|) (java_lang_String_equals$_18430 |s2| |s3|))))))
(declare-fun java_lang_String_lessThan$_H2_22109 (REF REF ) Bool)
(declare-fun |_JML__tmp90| () Bool)
(assert (= |_JML__tmp90| (forall ((|s1| REF) (|s2| REF) ) (=> (and (distinct |s1| NULL) (distinct |s2| NULL)) (or (not (not (java_lang_CharSequence_equal$_H2_1965 |s1| |s2|))) (distinct (java_lang_String_lessThan$_H2_22109 |s1| |s2|) (java_lang_String_lessThan$_H2_22109 |s2| |s1|)))))))
(define-fun BL_267bodyBegin_2__A1 () Bool (= |`exception_233_233___13| NULL))
(define-fun BL_267bodyBegin_2__A2 () Bool (= |`terminationPosition_233_233___14| 0))
(define-fun BL_267bodyBegin_2__A3 () Bool (distinct |`THIS| NULL))
(define-fun BL_267bodyBegin_2__A4 () Bool (or (= |`THIS| NULL) (and (and (distinct |`THIS| NULL) (javaSubType (javaTypeOf |`THIS|) T_IsSuffix)) (jmlSubType (jmlTypeOf |`THIS|) JMLT_IsSuffix))))
(define-fun BL_267bodyBegin_2__A5 () Bool (= (select |java.lang.Object_`alloc___7_0___7| |`THIS|) 0))
(define-fun BL_267bodyBegin_2__A6 () Bool (= |IsSuffix__heap___0_233___18| 2))
(declare-fun java_lang_CharSequence_equal$_H2_2391 (REF Int REF Int Int ) Bool)
(define-fun BL_267bodyBegin_2__A7 () Bool (forall ((|a| REF) (|astart| Int) (|b| REF) (|bstart| Int) (|len| Int) ) (! (=> (and (and (distinct |a| NULL) (distinct |b| NULL)) (and (and (and (and (and (and (distinct |a| NULL) (distinct |b| NULL)) (>= |astart| 0)) (>= |bstart| 0)) (>= |len| 0)) (<= (+ |astart| |len|) (select |Array_length| |a|))) (<= (+ |bstart| |len|) (select |Array_length| |b|)))) (= (java_lang_CharSequence_equal$_H2_2391 |a| |astart| |b| |bstart| |len|) (or (and (= |a| |b|) (= |astart| |bstart|)) (forall ((|i| Int) ) (=> (and (<= 0 |i|) (< |i| |len|)) (= (select (select arrays_char_0 |a|) (+ |i| |astart|)) (select (select arrays_char_0 |b|) (+ |i| |bstart|)))))))) :pattern ( (java_lang_CharSequence_equal$_H2_2391 |a| |astart| |b| |bstart| |len|) ))))
(define-fun _JML_METHODEF__java_lang_CharSequence_equal$_H2_2391 ((a REF)(astart Int)(b REF)(bstart Int)(len Int)) Bool (and (and (distinct |a| NULL) (distinct |b| NULL)) (and (and (and (and (and (and (distinct |a| NULL) (distinct |b| NULL)) (>= |astart| 0)) (>= |bstart| 0)) (>= |len| 0)) (<= (+ |astart| |len|) (select |Array_length| |a|))) (<= (+ |bstart| |len|) (select |Array_length| |b|)))))
(define-fun BL_267bodyBegin_2__A8 () Bool (forall ((|a| REF) (|b| REF) ) (! (=> (and (distinct |a| NULL) (distinct |b| NULL)) (= (java_lang_CharSequence_equal$_H2_1965 |a| |b|) (or (= |a| |b|) (and (and (and (distinct |a| NULL) (distinct |b| NULL)) (= (select |Array_length| |a|) (select |Array_length| |b|))) (java_lang_CharSequence_equal$_H2_2391 |a| 0 |b| 0 (select |Array_length| |a|)))))) :pattern ( (java_lang_CharSequence_equal$_H2_1965 |a| |b|) ))))
(define-fun _JML_METHODEF__java_lang_CharSequence_equal$_H2_1965 ((a REF)(b REF)) Bool (and (distinct |a| NULL) (distinct |b| NULL)))
(declare-fun java_lang_String_isInterned$_47636 (REF ) Bool)
(define-fun BL_267bodyBegin_2__A9 () Bool (forall ((|s| REF) ) (! (=> (distinct |s| NULL) true) :pattern ( (java_lang_String_isInterned$_47636 |s|) ))))
(define-fun _JML_METHODEF__java_lang_String_isInterned$_47636 ((s REF)) Bool (distinct |s| NULL))
(define-fun BL_267bodyBegin_2__A10 () Bool (forall ((|s1| REF) (|s2| REF) ) (! (=> (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |s1|) NULL) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |s2|) NULL))) (= (java_lang_String_equals$_18430 |s1| |s2|) (java_lang_CharSequence_equal$_H2_1965 (select |java.lang.CharSequence_charArray_1045_0_1380892664| |s1|) (select |java.lang.CharSequence_charArray_1045_0_1380892664| |s2|)))) :pattern ( (java_lang_String_equals$_18430 |s1| |s2|) ))))
(define-fun BL_267bodyBegin_2__A11 () Bool (forall ((|s1| REF) (|s2| REF) ) (! (=> (= |s1| |s2|) (java_lang_String_equals$_18430 |s1| |s2|)) :pattern ( (java_lang_String_equals$_18430 |s1| |s2|) ))))
(define-fun BL_267bodyBegin_2__A12 () Bool (forall ((|s1| REF) (|s2| REF) ) (! (=> (or (or (= |s1| NULL) (= |s2| NULL)) (and (java_lang_String_isInterned$_47636 |s1|) (java_lang_String_isInterned$_47636 |s2|))) (= (java_lang_String_equals$_18430 |s1| |s2|) (= |s1| |s2|))) :pattern ( (java_lang_String_equals$_18430 |s1| |s2|) ))))
(define-fun _JML_METHODEF__java_lang_String_equals$_18430 ((s1 REF)(s2 REF)) Bool (or (or (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |s1|) NULL) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |s2|) NULL))) (= |s1| |s2|)) (or (or (= |s1| NULL) (= |s2| NULL)) (and (java_lang_String_isInterned$_47636 |s1|) (java_lang_String_isInterned$_47636 |s2|)))))
(define-fun BL_267bodyBegin_2__A13 () Bool (forall ((|QQHIS| REF) ) (! (=> (and (distinct |QQHIS| NULL) (and (distinct |QQHIS| NULL) (javaSubType (javaTypeOf |QQHIS|) T_java_lang_CharSequence))) (>= (java_lang_String_length$_12891 |QQHIS|) 0)) :pattern ( (java_lang_String_length$_12891 |QQHIS|) ))))
(define-fun BL_267bodyBegin_2__A14 () Bool (forall ((|QQHIS| REF) ) (! (=> (and (distinct |QQHIS| NULL) (and (distinct |QQHIS| NULL) (javaSubType (javaTypeOf |QQHIS|) T_java_lang_CharSequence))) (= (java_lang_String_length$_12891 |QQHIS|) (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |QQHIS|)))) :pattern ( (java_lang_String_length$_12891 |QQHIS|) ))))
(define-fun _JML_METHODEF__java_lang_String_length$_12891 ((QQHIS REF)) Bool (and (distinct |QQHIS| NULL) (and (distinct |QQHIS| NULL) (javaSubType (javaTypeOf |QQHIS|) T_java_lang_CharSequence))))
(define-fun BL_267bodyBegin_2__A15 () Bool (forall ((|s1| REF) (|s2| REF) ) (! (=> (and (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct |s1| NULL) (distinct |s2| NULL))) (and (= (select |Array_length| |s2|) 0) (= (select |Array_length| |s1|) 0))) (not (java_lang_String_lessThan$_H2_22109 |s1| |s2|))) :pattern ( (java_lang_String_lessThan$_H2_22109 |s1| |s2|) ))))
(define-fun BL_267bodyBegin_2__A16 () Bool (forall ((|s1| REF) (|s2| REF) ) (! (=> (and (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct |s1| NULL) (distinct |s2| NULL))) (and (= (select |Array_length| |s1|) 0) (distinct (select |Array_length| |s2|) 0))) (java_lang_String_lessThan$_H2_22109 |s1| |s2|)) :pattern ( (java_lang_String_lessThan$_H2_22109 |s1| |s2|) ))))
(define-fun BL_267bodyBegin_2__A17 () Bool (forall ((|s1| REF) (|s2| REF) ) (! (=> (and (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct |s1| NULL) (distinct |s2| NULL))) (and (distinct (select |Array_length| |s1|) 0) (= (select |Array_length| |s2|) 0))) (not (java_lang_String_lessThan$_H2_22109 |s1| |s2|))) :pattern ( (java_lang_String_lessThan$_H2_22109 |s1| |s2|) ))))
(define-fun BL_267bodyBegin_2__A18 () Bool (forall ((|s1| REF) (|s2| REF) ) (! (=> (and (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct |s1| NULL) (distinct |s2| NULL))) (and (and (> (select |Array_length| |s1|) 0) (> (select |Array_length| |s2|) 0)) (distinct (select (select arrays_char_0 |s1|) 0) (select (select arrays_char_0 |s2|) 0)))) (= (java_lang_String_lessThan$_H2_22109 |s1| |s2|) (< (select (select arrays_char_0 |s1|) 0) (select (select arrays_char_0 |s2|) 0)))) :pattern ( (java_lang_String_lessThan$_H2_22109 |s1| |s2|) ))))
(define-fun BL_267bodyBegin_2__A19 () Bool (forall ((|s1| REF) (|s2| REF) ) (! (=> (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct |s1| NULL) (distinct |s2| NULL))) (= (java_lang_String_lessThan$_H2_22109 |s1| |s2|) (or (exists ((|i| Int) ) (and (and (and (<= 0 |i|) (< |i| (select |Array_length| |s1|))) (< |i| (select |Array_length| |s2|))) (and (< (select (select arrays_char_0 |s1|) |i|) (select (select arrays_char_0 |s2|) |i|)) (java_lang_CharSequence_equal$_H2_2391 |s1| 0 |s2| 0 |i|)))) (and (< (select |Array_length| |s1|) (select |Array_length| |s2|)) (java_lang_CharSequence_equal$_H2_2391 |s1| 0 |s2| 0 (select |Array_length| |s1|)))))) :pattern ( (java_lang_String_lessThan$_H2_22109 |s1| |s2|) ))))
(define-fun _JML_METHODEF__java_lang_String_lessThan$_H2_22109 ((s1 REF)(s2 REF)) Bool (or (or (or (or (and (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct |s1| NULL) (distinct |s2| NULL))) (and (= (select |Array_length| |s2|) 0) (= (select |Array_length| |s1|) 0))) (and (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct |s1| NULL) (distinct |s2| NULL))) (and (= (select |Array_length| |s1|) 0) (distinct (select |Array_length| |s2|) 0)))) (and (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct |s1| NULL) (distinct |s2| NULL))) (and (distinct (select |Array_length| |s1|) 0) (= (select |Array_length| |s2|) 0)))) (and (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct |s1| NULL) (distinct |s2| NULL))) (and (and (> (select |Array_length| |s1|) 0) (> (select |Array_length| |s2|) 0)) (distinct (select (select arrays_char_0 |s1|) 0) (select (select arrays_char_0 |s2|) 0))))) (and (and (distinct |s1| NULL) (distinct |s2| NULL)) (and (distinct |s1| NULL) (distinct |s2| NULL)))))
(declare-fun java_lang_String_charAt$_H2_13452 (REF Int ) Int)
(define-fun BL_267bodyBegin_2__A20 () Bool (forall ((|QQHIS| REF) (|index| Int) ) (! (=> (and (and (distinct |QQHIS| NULL) (and (distinct |QQHIS| NULL) (javaSubType (javaTypeOf |QQHIS|) T_java_lang_CharSequence))) (and (<= 0 |index|) (< |index| (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |QQHIS|))))) (= (java_lang_String_charAt$_H2_13452 |QQHIS| |index|) (select (select arrays_char_0 (select |java.lang.CharSequence_charArray_1045_0_1380892664| |QQHIS|)) |index|))) :pattern ( (java_lang_String_charAt$_H2_13452 |QQHIS| |index|) ))))
(define-fun _JML_METHODEF__java_lang_String_charAt$_H2_13452 ((QQHIS REF)(index Int)) Bool (and (and (distinct |QQHIS| NULL) (and (distinct |QQHIS| NULL) (javaSubType (javaTypeOf |QQHIS|) T_java_lang_CharSequence))) (and (<= 0 |index|) (< |index| (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |QQHIS|))))))
(define-fun BL_267bodyBegin_2__A21 () Bool (and (<= (- 2147483648) |j_469_469___19|) (<= |j_469_469___19| 2147483647)))
(define-fun BL_267bodyBegin_2__A22 () Bool |_JML__tmp22|)
(define-fun BL_267bodyBegin_2__A23 () Bool |_JML__tmp25|)
(define-fun BL_267bodyBegin_2__A24 () Bool |_JML__tmp29|)
(define-fun BL_267bodyBegin_2__A25 () Bool |_JML__tmp45|)
(define-fun BL_267bodyBegin_2__A26 () Bool |_JML__tmp46|)
(define-fun BL_267bodyBegin_2__A27 () Bool |_JML__tmp90|)
(define-fun BL_267bodyBegin_2__A28 () Bool true)
(define-fun BL_267bodyBegin_2__A29 () Bool true)
(define-fun BL_267bodyBegin_2__A30 () Bool (and (<= (- 2147483648) (select |java.lang.Object_objectTimesFinalized_111030101918| |`THIS|)) (<= (select |java.lang.Object_objectTimesFinalized_111030101918| |`THIS|) 2147483647)))
(define-fun BL_267bodyBegin_2__A31 () Bool (and (<= (- 2147483648) (select |java.lang.Object_objectTimesFinalized_111030101918| |`THIS|)) (<= (select |java.lang.Object_objectTimesFinalized_111030101918| |`THIS|) 2147483647)))
(define-fun BL_267bodyBegin_2__A32 () Bool (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL))
(define-fun BL_267bodyBegin_2__A33 () Bool (<= (select |java.lang.Object_`alloc___7_0___7| (select |java.lang.Object_theString_8079_0___8| |`THIS|)) 0))
(define-fun BL_267bodyBegin_2__A34 () Bool (and (and (and (and (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) JMLT_java_lang_Object))) (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_lang_CharSequence)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) JMLT_java_lang_CharSequence)))) (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_lang_Comparable)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) (_JMLT_1 T_java_lang_Comparable JMLT_java_lang_String))))) (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_io_Serializable)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) JMLT_java_io_Serializable)))) (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_lang_String)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) JMLT_java_lang_String)))))
(define-fun BL_267bodyBegin_2__A35 () Bool (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL))
(define-fun BL_267bodyBegin_2__A36 () Bool (<= (select |java.lang.Object_`alloc___7_0___7| (select |java.lang.Object_theString_8079_0___8| |`THIS|)) 0))
(define-fun BL_267bodyBegin_2__A37 () Bool (and (and (and (and (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) JMLT_java_lang_Object))) (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_lang_CharSequence)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) JMLT_java_lang_CharSequence)))) (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_lang_Comparable)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) (_JMLT_1 T_java_lang_Comparable JMLT_java_lang_String))))) (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_io_Serializable)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) JMLT_java_io_Serializable)))) (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_lang_String)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) JMLT_java_lang_String)))))
(define-fun BL_267bodyBegin_2__A38 () Bool (and (<= (- 2147483648) (select |java.lang.Object_theHashCode_2252_0___10| |`THIS|)) (<= (select |java.lang.Object_theHashCode_2252_0___10| |`THIS|) 2147483647)))
(define-fun BL_267bodyBegin_2__A39 () Bool (and (<= (- 2147483648) (select |java.lang.Object_theHashCode_2252_0___10| |`THIS|)) (<= (select |java.lang.Object_theHashCode_2252_0___10| |`THIS|) 2147483647)))
(define-fun BL_267bodyBegin_2__A40 () Bool (or (= (select |java.lang.Object___owner_1586_0___5| |`THIS|) NULL) (<= (select |java.lang.Object_`alloc___7_0___7| (select |java.lang.Object___owner_1586_0___5| |`THIS|)) 0)))
(define-fun BL_267bodyBegin_2__A41 () Bool (or (= (select |java.lang.Object___owner_1586_0___5| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object___owner_1586_0___5| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object___owner_1586_0___5| |`THIS|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object___owner_1586_0___5| |`THIS|)) JMLT_java_lang_Object))))
(define-fun BL_267bodyBegin_2__A42 () Bool (or (= (select |java.lang.Object___owner_1586_0___5| |`THIS|) NULL) (<= (select |java.lang.Object_`alloc___7_0___7| (select |java.lang.Object___owner_1586_0___5| |`THIS|)) 0)))
(define-fun BL_267bodyBegin_2__A43 () Bool (or (= (select |java.lang.Object___owner_1586_0___5| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object___owner_1586_0___5| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object___owner_1586_0___5| |`THIS|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object___owner_1586_0___5| |`THIS|)) JMLT_java_lang_Object))))
(define-fun BL_267bodyBegin_2__A44 () Bool (distinct |pat_250_250___15| NULL))
(define-fun BL_267bodyBegin_2__A45 () Bool (<= (select |java.lang.Object_`alloc___7_0___7| |pat_250_250___15|) 0))
(define-fun BL_267bodyBegin_2__A46 () Bool (and (and (and (and (or (= |pat_250_250___15| NULL) (and (and (distinct |pat_250_250___15| NULL) (javaSubType (javaTypeOf |pat_250_250___15|) T_java_lang_Object)) (jmlSubType (jmlTypeOf |pat_250_250___15|) JMLT_java_lang_Object))) (or (= |pat_250_250___15| NULL) (and (and (distinct |pat_250_250___15| NULL) (javaSubType (javaTypeOf |pat_250_250___15|) T_java_lang_CharSequence)) (jmlSubType (jmlTypeOf |pat_250_250___15|) JMLT_java_lang_CharSequence)))) (or (= |pat_250_250___15| NULL) (and (and (distinct |pat_250_250___15| NULL) (javaSubType (javaTypeOf |pat_250_250___15|) T_java_lang_Comparable)) (jmlSubType (jmlTypeOf |pat_250_250___15|) (_JMLT_1 T_java_lang_Comparable JMLT_java_lang_String))))) (or (= |pat_250_250___15| NULL) (and (and (distinct |pat_250_250___15| NULL) (javaSubType (javaTypeOf |pat_250_250___15|) T_java_io_Serializable)) (jmlSubType (jmlTypeOf |pat_250_250___15|) JMLT_java_io_Serializable)))) (or (= |pat_250_250___15| NULL) (and (and (distinct |pat_250_250___15| NULL) (javaSubType (javaTypeOf |pat_250_250___15|) T_java_lang_String)) (jmlSubType (jmlTypeOf |pat_250_250___15|) JMLT_java_lang_String)))))
(define-fun BL_267bodyBegin_2__A47 () Bool (distinct |txt_262_262___16| NULL))
(define-fun BL_267bodyBegin_2__A48 () Bool (<= (select |java.lang.Object_`alloc___7_0___7| |txt_262_262___16|) 0))
(define-fun BL_267bodyBegin_2__A49 () Bool (and (and (and (and (or (= |txt_262_262___16| NULL) (and (and (distinct |txt_262_262___16| NULL) (javaSubType (javaTypeOf |txt_262_262___16|) T_java_lang_Object)) (jmlSubType (jmlTypeOf |txt_262_262___16|) JMLT_java_lang_Object))) (or (= |txt_262_262___16| NULL) (and (and (distinct |txt_262_262___16| NULL) (javaSubType (javaTypeOf |txt_262_262___16|) T_java_lang_CharSequence)) (jmlSubType (jmlTypeOf |txt_262_262___16|) JMLT_java_lang_CharSequence)))) (or (= |txt_262_262___16| NULL) (and (and (distinct |txt_262_262___16| NULL) (javaSubType (javaTypeOf |txt_262_262___16|) T_java_lang_Comparable)) (jmlSubType (jmlTypeOf |txt_262_262___16|) (_JMLT_1 T_java_lang_Comparable JMLT_java_lang_String))))) (or (= |txt_262_262___16| NULL) (and (and (distinct |txt_262_262___16| NULL) (javaSubType (javaTypeOf |txt_262_262___16|) T_java_io_Serializable)) (jmlSubType (jmlTypeOf |txt_262_262___16|) JMLT_java_io_Serializable)))) (or (= |txt_262_262___16| NULL) (and (and (distinct |txt_262_262___16| NULL) (javaSubType (javaTypeOf |txt_262_262___16|) T_java_lang_String)) (jmlSubType (jmlTypeOf |txt_262_262___16|) JMLT_java_lang_String)))))
(define-fun BL_267bodyBegin_2__A50 () Bool (select |java.lang.Object_`isalloc___7_0___4| |`THIS|))
(assert (= BL_267bodyBegin_2 (=> BL_267bodyBegin_2__A1 (=> BL_267bodyBegin_2__A2 (=> BL_267bodyBegin_2__A3 (=> BL_267bodyBegin_2__A4 (=> BL_267bodyBegin_2__A5 (=> BL_267bodyBegin_2__A6 (=> BL_267bodyBegin_2__A7 (=> BL_267bodyBegin_2__A8 (=> BL_267bodyBegin_2__A9 (=> BL_267bodyBegin_2__A10 (=> BL_267bodyBegin_2__A11 (=> BL_267bodyBegin_2__A12 (=> BL_267bodyBegin_2__A13 (=> BL_267bodyBegin_2__A14 (=> BL_267bodyBegin_2__A15 (=> BL_267bodyBegin_2__A16 (=> BL_267bodyBegin_2__A17 (=> BL_267bodyBegin_2__A18 (=> BL_267bodyBegin_2__A19 (=> BL_267bodyBegin_2__A20 (=> BL_267bodyBegin_2__A21 (=> BL_267bodyBegin_2__A22 (=> BL_267bodyBegin_2__A23 (=> BL_267bodyBegin_2__A24 (=> BL_267bodyBegin_2__A25 (=> BL_267bodyBegin_2__A26 (=> BL_267bodyBegin_2__A27 (=> BL_267bodyBegin_2__A28 (=> BL_267bodyBegin_2__A29 (=> BL_267bodyBegin_2__A30 (=> BL_267bodyBegin_2__A31 (=> BL_267bodyBegin_2__A32 (=> BL_267bodyBegin_2__A33 (=> BL_267bodyBegin_2__A34 (=> BL_267bodyBegin_2__A35 (=> BL_267bodyBegin_2__A36 (=> BL_267bodyBegin_2__A37 (=> BL_267bodyBegin_2__A38 (=> BL_267bodyBegin_2__A39 (=> BL_267bodyBegin_2__A40 (=> BL_267bodyBegin_2__A41 (=> BL_267bodyBegin_2__A42 (=> BL_267bodyBegin_2__A43 (=> BL_267bodyBegin_2__A44 (=> BL_267bodyBegin_2__A45 (=> BL_267bodyBegin_2__A46 (=> BL_267bodyBegin_2__A47 (=> BL_267bodyBegin_2__A48 (=> BL_267bodyBegin_2__A49 (=> BL_267bodyBegin_2__A50 (and BL_233_then_4 BL_233_else_5)))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun BL_233_then_4__A1 () Bool (distinct |`THIS| NULL))
(define-fun BL_233_then_4__A2 () Bool (or (= (select |java.lang.Object___owner_1586_0___5| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object___owner_1586_0___5| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object___owner_1586_0___5| |`THIS|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object___owner_1586_0___5| |`THIS|)) JMLT_java_lang_Object))))
(define-fun BL_233_then_4__A3 () Bool (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL))
(define-fun BL_233_then_4__A4 () Bool (or (= (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |`THIS|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) T_java_lang_String)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |`THIS|)) JMLT_java_lang_String))))
(define-fun BL_233_then_4__A5 () Bool (= |BL_233_afterIf_3_source| 4))
(assert (= BL_233_then_4 (=> BL_233_then_4__A1 (=> BL_233_then_4__A2 (=> BL_233_then_4__A3 (=> BL_233_then_4__A4 (=> BL_233_then_4__A5 BL_233_afterIf_3)))))))
(define-fun BL_233_else_5__A1 () Bool (not (distinct |`THIS| NULL)))
(define-fun BL_233_else_5__A2 () Bool (= |BL_233_afterIf_3_source| 5))
(assert (= BL_233_else_5 (=> BL_233_else_5__A1 (=> BL_233_else_5__A2 BL_233_afterIf_3))))
(assert (= BL_233_afterIf_3 (and BL_250_then_7 BL_250_else_8)))
(define-fun BL_250_then_7__A1 () Bool (distinct |pat_250_250___15| NULL))
(define-fun BL_250_then_7__A2 () Bool (or (= (select |java.lang.Object___owner_1586_0___5| |pat_250_250___15|) NULL) (and (and (distinct (select |java.lang.Object___owner_1586_0___5| |pat_250_250___15|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object___owner_1586_0___5| |pat_250_250___15|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object___owner_1586_0___5| |pat_250_250___15|)) JMLT_java_lang_Object))))
(define-fun BL_250_then_7__A3 () Bool (distinct (select |java.lang.Object_theString_8079_0___8| |pat_250_250___15|) NULL))
(define-fun BL_250_then_7__A4 () Bool (or (= (select |java.lang.Object_theString_8079_0___8| |pat_250_250___15|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |pat_250_250___15|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |pat_250_250___15|)) T_java_lang_String)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |pat_250_250___15|)) JMLT_java_lang_String))))
(define-fun BL_250_then_7__A5 () Bool (= |BL_250_afterIf_6_source| 7))
(assert (= BL_250_then_7 (=> BL_250_then_7__A1 (=> BL_250_then_7__A2 (=> BL_250_then_7__A3 (=> BL_250_then_7__A4 (=> BL_250_then_7__A5 BL_250_afterIf_6)))))))
(define-fun BL_250_else_8__A1 () Bool (not (distinct |pat_250_250___15| NULL)))
(define-fun BL_250_else_8__A2 () Bool (= |BL_250_afterIf_6_source| 8))
(assert (= BL_250_else_8 (=> BL_250_else_8__A1 (=> BL_250_else_8__A2 BL_250_afterIf_6))))
(assert (= BL_250_afterIf_6 (and BL_250_then_10 BL_250_else_11)))
(define-fun |_JML__tmp91| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |pat_250_250___15|) NULL))
(define-fun BL_250_then_10__A1 () Bool (distinct |pat_250_250___15| NULL))
(define-fun BL_250_then_10__A2 () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |pat_250_250___15|) NULL))
(define-fun BL_250_then_10__A3 () Bool (or (= (select |java.lang.CharSequence_charArray_1045_0_1380892664| |pat_250_250___15|) NULL) (and (jmlSubType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |pat_250_250___15|)) (_makeJMLArrayType JMLT_char)) (= (__arrayElemType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |pat_250_250___15|))) JMLT_char))))
(define-fun BL_250_then_10__A4 () Bool |_JML__tmp91|)
(define-fun BL_250_then_10__A5 () Bool (= |BL_250_afterIf_9_source| 10))
(assert (= BL_250_then_10 (=> BL_250_then_10__A1 (=> BL_250_then_10__A2 (=> BL_250_then_10__A3 (=> BL_250_then_10__A4 (=> BL_250_then_10__A5 BL_250_afterIf_9)))))))
(define-fun BL_250_else_11__A1 () Bool (not (distinct |pat_250_250___15| NULL)))
(define-fun BL_250_else_11__A2 () Bool (= |BL_250_afterIf_9_source| 11))
(assert (= BL_250_else_11 (=> BL_250_else_11__A1 (=> BL_250_else_11__A2 BL_250_afterIf_9))))
(assert (= BL_250_afterIf_9 (and BL_250_then_13 BL_250_else_14)))
(define-fun BL_250_then_13__A1 () Bool (distinct |pat_250_250___15| NULL))
(define-fun BL_250_then_13__A2 () Bool (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL))
(define-fun BL_250_then_13__A3 () Bool (or (= |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (and (and (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (javaSubType (javaTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) T_java_util_Comparator)) (jmlSubType (jmlTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) (_JMLT_1 T_java_util_Comparator JMLT_java_lang_String)))))
(define-fun BL_250_then_13__A4 () Bool (= |BL_250_afterIf_12_source| 13))
(assert (= BL_250_then_13 (=> BL_250_then_13__A1 (=> BL_250_then_13__A2 (=> BL_250_then_13__A3 (=> BL_250_then_13__A4 BL_250_afterIf_12))))))
(define-fun BL_250_else_14__A1 () Bool (not (distinct |pat_250_250___15| NULL)))
(define-fun BL_250_else_14__A2 () Bool (= |BL_250_afterIf_12_source| 14))
(assert (= BL_250_else_14 (=> BL_250_else_14__A1 (=> BL_250_else_14__A2 BL_250_afterIf_12))))
(assert (= BL_250_afterIf_12 (and BL_262_then_16 BL_262_else_17)))
(define-fun BL_262_then_16__A1 () Bool (distinct |txt_262_262___16| NULL))
(define-fun BL_262_then_16__A2 () Bool (or (= (select |java.lang.Object___owner_1586_0___5| |txt_262_262___16|) NULL) (and (and (distinct (select |java.lang.Object___owner_1586_0___5| |txt_262_262___16|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object___owner_1586_0___5| |txt_262_262___16|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object___owner_1586_0___5| |txt_262_262___16|)) JMLT_java_lang_Object))))
(define-fun BL_262_then_16__A3 () Bool (distinct (select |java.lang.Object_theString_8079_0___8| |txt_262_262___16|) NULL))
(define-fun BL_262_then_16__A4 () Bool (or (= (select |java.lang.Object_theString_8079_0___8| |txt_262_262___16|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |txt_262_262___16|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |txt_262_262___16|)) T_java_lang_String)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |txt_262_262___16|)) JMLT_java_lang_String))))
(define-fun BL_262_then_16__A5 () Bool (= |BL_262_afterIf_15_source| 16))
(assert (= BL_262_then_16 (=> BL_262_then_16__A1 (=> BL_262_then_16__A2 (=> BL_262_then_16__A3 (=> BL_262_then_16__A4 (=> BL_262_then_16__A5 BL_262_afterIf_15)))))))
(define-fun BL_262_else_17__A1 () Bool (not (distinct |txt_262_262___16| NULL)))
(define-fun BL_262_else_17__A2 () Bool (= |BL_262_afterIf_15_source| 17))
(assert (= BL_262_else_17 (=> BL_262_else_17__A1 (=> BL_262_else_17__A2 BL_262_afterIf_15))))
(assert (= BL_262_afterIf_15 (and BL_262_then_19 BL_262_else_20)))
(define-fun |_JML__tmp92| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |txt_262_262___16|) NULL))
(define-fun BL_262_then_19__A1 () Bool (distinct |txt_262_262___16| NULL))
(define-fun BL_262_then_19__A2 () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |txt_262_262___16|) NULL))
(define-fun BL_262_then_19__A3 () Bool (or (= (select |java.lang.CharSequence_charArray_1045_0_1380892664| |txt_262_262___16|) NULL) (and (jmlSubType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |txt_262_262___16|)) (_makeJMLArrayType JMLT_char)) (= (__arrayElemType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |txt_262_262___16|))) JMLT_char))))
(define-fun BL_262_then_19__A4 () Bool |_JML__tmp92|)
(define-fun BL_262_then_19__A5 () Bool (= |BL_262_afterIf_18_source| 19))
(assert (= BL_262_then_19 (=> BL_262_then_19__A1 (=> BL_262_then_19__A2 (=> BL_262_then_19__A3 (=> BL_262_then_19__A4 (=> BL_262_then_19__A5 BL_262_afterIf_18)))))))
(define-fun BL_262_else_20__A1 () Bool (not (distinct |txt_262_262___16| NULL)))
(define-fun BL_262_else_20__A2 () Bool (= |BL_262_afterIf_18_source| 20))
(assert (= BL_262_else_20 (=> BL_262_else_20__A1 (=> BL_262_else_20__A2 BL_262_afterIf_18))))
(assert (= BL_262_afterIf_18 (and BL_262_then_22 BL_262_else_23)))
(define-fun BL_262_then_22__A1 () Bool (distinct |txt_262_262___16| NULL))
(define-fun BL_262_then_22__A2 () Bool (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL))
(define-fun BL_262_then_22__A3 () Bool (or (= |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (and (and (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (javaSubType (javaTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) T_java_util_Comparator)) (jmlSubType (jmlTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) (_JMLT_1 T_java_util_Comparator JMLT_java_lang_String)))))
(define-fun BL_262_then_22__A4 () Bool (= |BL_262_afterIf_21_source| 22))
(assert (= BL_262_then_22 (=> BL_262_then_22__A1 (=> BL_262_then_22__A2 (=> BL_262_then_22__A3 (=> BL_262_then_22__A4 BL_262_afterIf_21))))))
(define-fun BL_262_else_23__A1 () Bool (not (distinct |txt_262_262___16| NULL)))
(define-fun BL_262_else_23__A2 () Bool (= |BL_262_afterIf_21_source| 23))
(assert (= BL_262_else_23 (=> BL_262_else_23__A1 (=> BL_262_else_23__A2 BL_262_afterIf_21))))
(declare-fun |_JML__tmp93| () Bool)
(define-fun |_JML__tmp94| () Bool (distinct |pat_250_250___15| NULL))
(assert (= BL_262_afterIf_21 (and BL_262_then_25 BL_262_else_26)))
(define-fun |_JML__tmp96| () Bool (distinct |txt_262_262___16| NULL))
(define-fun BL_262_then_25__A1 () Bool |_JML__tmp94|)
(define-fun BL_262_then_25__A2 () Bool (= |`conditionalResult_95_262_262___21| |_JML__tmp96|))
(define-fun BL_262_then_25__A3 () Bool (= |`conditionalResult_95_262_0___22| |`conditionalResult_95_262_262___21|))
(define-fun BL_262_then_25__A4 () Bool (= |BL_262_afterIf_24_source| 25))
(assert (= BL_262_then_25 (=> BL_262_then_25__A1 (=> BL_262_then_25__A2 (=> BL_262_then_25__A3 (=> BL_262_then_25__A4 BL_262_afterIf_24))))))
(define-fun BL_262_else_26__A1 () Bool (not |_JML__tmp94|))
(define-fun BL_262_else_26__A2 () Bool (= |`conditionalResult_95_262_0___22| false))
(define-fun BL_262_else_26__A3 () Bool (= |BL_262_afterIf_24_source| 26))
(assert (= BL_262_else_26 (=> BL_262_else_26__A1 (=> BL_262_else_26__A2 (=> BL_262_else_26__A3 BL_262_afterIf_24)))))
(declare-fun |_JML__tmp97| () Bool)
(define-fun BL_262_afterIf_24__A1 () Bool (= |_JML__tmp93| |`conditionalResult_95_262_0___22|))
(assert (= BL_262_afterIf_24 (=> BL_262_afterIf_24__A1 (and BL_54_then_28 BL_54_else_29))))
(define-fun |_JML__tmp98| () Bool (distinct |pat_250_250___15| NULL))
(define-fun BL_54_then_28__A1 () Bool |_JML__tmp93|)
(assert (= BL_54_then_28 (=> BL_54_then_28__A1 (and BL_54_then_31 BL_54_else_32))))
(define-fun |_JML__tmp100| () Bool (distinct |txt_262_262___16| NULL))
(define-fun BL_54_then_31__A1 () Bool |_JML__tmp98|)
(define-fun BL_54_then_31__A2 () Bool (= |`conditionalResult_99_54_61___24| |_JML__tmp100|))
(define-fun BL_54_then_31__A3 () Bool (= |`conditionalResult_99_54_0___25| |`conditionalResult_99_54_61___24|))
(define-fun BL_54_then_31__A4 () Bool (= |BL_54_afterIf_30_source| 31))
(assert (= BL_54_then_31 (=> BL_54_then_31__A1 (=> BL_54_then_31__A2 (=> BL_54_then_31__A3 (=> BL_54_then_31__A4 BL_54_afterIf_30))))))
(define-fun BL_54_else_32__A1 () Bool (not |_JML__tmp98|))
(define-fun BL_54_else_32__A2 () Bool (= |`conditionalResult_99_54_0___25| false))
(define-fun BL_54_else_32__A3 () Bool (= |BL_54_afterIf_30_source| 32))
(assert (= BL_54_else_32 (=> BL_54_else_32__A1 (=> BL_54_else_32__A2 (=> BL_54_else_32__A3 BL_54_afterIf_30)))))
(define-fun BL_54_afterIf_30__A1 () Bool (= |_JML__tmp97| |`conditionalResult_99_54_0___25|))
(define-fun BL_54_afterIf_30__A2 () Bool (= |BL_54_afterIf_27_source| 30))
(assert (= BL_54_afterIf_30 (=> BL_54_afterIf_30__A1 (=> BL_54_afterIf_30__A2 BL_54_afterIf_27))))
(define-fun BL_54_else_29__A1 () Bool (not |_JML__tmp93|))
(define-fun BL_54_else_29__A2 () Bool (= |_JML__tmp97| false))
(define-fun BL_54_else_29__A3 () Bool (= |BL_54_afterIf_27_source| 29))
(assert (= BL_54_else_29 (=> BL_54_else_29__A1 (=> BL_54_else_29__A2 (=> BL_54_else_29__A3 BL_54_afterIf_27)))))
(define-fun BL_54_afterIf_27__A1 () Bool (= |Pre_2_54_33___26| |_JML__tmp97|))
(define-fun BL_54_afterIf_27__A2 () Bool |Pre_2_54_33___26|)
(assert (= BL_54_afterIf_27 (=> BL_54_afterIf_27__A1 (=> BL_54_afterIf_27__A2 (and BL_33_then_34 BL_33_else_35)))))
(define-fun BL_33_then_34__A1 () Bool |Pre_2_54_33___26|)
(define-fun BL_33_then_34__A2 () Bool (= |BL_33_afterIf_33_source| 34))
(assert (= BL_33_then_34 (=> BL_33_then_34__A1 (=> BL_33_then_34__A2 BL_33_afterIf_33))))
(define-fun BL_33_else_35__A1 () Bool (not |Pre_2_54_33___26|))
(define-fun BL_33_else_35__A2 () Bool (= |BL_33_afterIf_33_source| 35))
(assert (= BL_33_else_35 (=> BL_33_else_35__A1 (=> BL_33_else_35__A2 BL_33_afterIf_33))))
(assert (= BL_33_afterIf_33 BL_233_AfterLabel_36))
(define-fun |_JML__tmp101| () REF |pat_250_250___15|)
(define-fun |_JML__tmp102| () REF |_JML__tmp101|)
(declare-fun |_JML__tmp103| () Int)
(declare-fun |_JML__tmp104| () Bool)
(define-fun |_$CPRE__23_1_1| () Bool true)
(define-fun |_$CPRE__23_1| () Bool true)
(define-fun |_$CPRE__23| () Bool true)
(define-fun BL_233_AfterLabel_36__A1 () Bool (= |ASSERT_152_287| (distinct |_JML__tmp102| NULL)))
(define-fun BL_233_AfterLabel_36__A2 () Bool (and (<= (- 2147483648) |_JML__tmp103|) (<= |_JML__tmp103| 2147483647)))
(define-fun BL_233_AfterLabel_36__A3 () Bool (= |_JML__tmp104| true))
(define-fun BL_233_AfterLabel_36__A4 () Bool (= |ASSERT_156_0| |_$CPRE__23|))
(assert (= BL_233_AfterLabel_36 (=> BL_233_AfterLabel_36__A1 (and |ASSERT_152_287| (=> |ASSERT_152_287| (=> BL_233_AfterLabel_36__A2 (=> BL_233_AfterLabel_36__A3 (=> BL_233_AfterLabel_36__A4 (and |ASSERT_156_0| (=> |ASSERT_156_0| BL_297_AfterLabel_44))))))))))
(define-fun |_JML__tmp106| () Bool (= |`exception_233_233___13| NULL))
(assert (= BL_297_AfterLabel_44 (and BL_297_then_46 BL_297_else_47)))
(define-fun BL_297_then_46__A1 () Bool |_JML__tmp106|)
(define-fun BL_297_then_46__A2 () Bool (= |BL_297_afterIf_45_source| 46))
(assert (= BL_297_then_46 (=> BL_297_then_46__A1 (=> BL_297_then_46__A2 BL_297_afterIf_45))))
(define-fun BL_297_else_47__A1 () Bool (not |_JML__tmp106|))
(define-fun BL_297_else_47__A2 () Bool (= |BL_297_afterIf_45_source| 47))
(assert (= BL_297_else_47 (=> BL_297_else_47__A1 (=> BL_297_else_47__A2 BL_297_afterIf_45))))
(define-fun |_JML__tmp111| () Bool (= |`exceptionCall_297_297___27| NULL))
(define-fun |_JML__tmp107| () Bool (>= |_JML__tmp103| 0))
(define-fun |_JML__tmp108| () Int (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp102|)))
(define-fun |_JML__tmp109| () Int |_JML__tmp108|)
(define-fun |_JML__tmp110| () Bool (= |_JML__tmp103| |_JML__tmp109|))
(define-fun |_JML__tmp112| () Bool (or (not (and (< 0 |_JML__tmp103|) (< 1 0))) (<= |_JML__tmp103| (+ 2147483647 1))))
(define-fun |_JML__tmp113| () Bool (or (not (and (< |_JML__tmp103| 0) (< 0 1))) (<= (+ (- 2147483648) 1) |_JML__tmp103|)))
(define-fun |_JML__tmp114| () Int (ite (< 2147483647 (- |_JML__tmp103| 1)) (+ (+ (- |_JML__tmp103| 1) (- 2147483648)) (- 2147483648)) (ite (< (- |_JML__tmp103| 1) (- 2147483648)) (- (- (- |_JML__tmp103| 1) (- 2147483648)) (- 2147483648)) (- |_JML__tmp103| 1))))
(declare-fun |_JML__tmp126| () Bool)
(assert (= |_JML__tmp126| (forall ((|k| Int) ) (=> (and (< |i_283_283___28| |k|) (< |k| (java_lang_String_length$_12891 |pat_250_250___15|))) (= (java_lang_String_charAt$_H2_13452 |pat_250_250___15| |k|) (java_lang_String_charAt$_H2_13452 |txt_262_262___16| (+ (- (java_lang_String_length$_12891 |txt_262_262___16|) (java_lang_String_length$_12891 |pat_250_250___15|)) |k|)))))))
(define-fun BL_297_afterIf_45__A1 () Bool (= |`exceptionCall_297_297___27| NULL))
(define-fun BL_297_afterIf_45__A2 () Bool (= |_JML__tmp103| (java_lang_String_length$_12891 |_JML__tmp102|)))
(define-fun BL_297_afterIf_45__A3 () Bool |_JML__tmp107|)
(define-fun BL_297_afterIf_45__A4 () Bool (and (<= 0 (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp102|))) (<= (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp102|)) 2147483647)))
(define-fun BL_297_afterIf_45__A5 () Bool (= |ASSERT_161_3235| (or (not (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp102|) NULL)) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp102|) NULL))))
(define-fun BL_297_afterIf_45__A6 () Bool |_JML__tmp110|)
(define-fun BL_297_afterIf_45__A7 () Bool (and (<= (- 2147483648) |_JML__tmp103|) (<= |_JML__tmp103| 2147483647)))
(define-fun BL_297_afterIf_45__A8 () Bool (or (not (and (< 0 |_JML__tmp103|) (< 1 0))) (<= |_JML__tmp103| (+ 2147483647 1))))
(define-fun BL_297_afterIf_45__A9 () Bool (or (not (and (< |_JML__tmp103| 0) (< 0 1))) (<= (+ (- 2147483648) 1) |_JML__tmp103|)))
(define-fun BL_297_afterIf_45__A10 () Bool (= |i_283_283___28| |_JML__tmp114|))
(define-fun BL_297_afterIf_45__A11 () Bool (= |index_444_115_444_444___29| 0))
(define-fun BL_297_afterIf_45__A12 () Bool (= |ASSERT_185_331| |_JML__tmp126|))
(assert (= BL_297_afterIf_45 (=> BL_297_afterIf_45__A1 (=> BL_297_afterIf_45__A2 (=> BL_297_afterIf_45__A3 (=> BL_297_afterIf_45__A4 (=> BL_297_afterIf_45__A5 (and |ASSERT_161_3235| (=> |ASSERT_161_3235| (=> BL_297_afterIf_45__A6 (=> BL_297_afterIf_45__A7 (=> BL_297_afterIf_45__A8 (=> BL_297_afterIf_45__A9 (=> BL_297_afterIf_45__A10 (=> BL_297_afterIf_45__A11 (=> BL_297_afterIf_45__A12 (and |ASSERT_185_331| (=> |ASSERT_185_331| (and BL_444_LoopBody_48 BL_444_LoopEnd_50)))))))))))))))))))
(declare-fun |_JML__tmp135| () Bool)
(assert (= |_JML__tmp135| (forall ((|k| Int) ) (=> (and (< |i_283_604___31| |k|) (< |k| (java_lang_String_length$_12891 |pat_250_250___15|))) (= (java_lang_String_charAt$_H2_13452 |pat_250_250___15| |k|) (java_lang_String_charAt$_H2_13452 |txt_262_262___16| (+ (- (java_lang_String_length$_12891 |txt_262_262___16|) (java_lang_String_length$_12891 |pat_250_250___15|)) |k|)))))))
(define-fun |_JML__tmp136| () Int |i_283_604___31|)
(define-fun |_JML__tmp137| () Bool (>= |_JML__tmp136| 0))
(define-fun BL_444_LoopBody_48__A1 () Bool true)
(define-fun BL_444_LoopBody_48__A2 () Bool (and (<= (- 2147483648) |index_444_115_444_458___32|) (<= |index_444_115_444_458___32| 2147483647)))
(define-fun BL_444_LoopBody_48__A3 () Bool (and (<= (- 2147483648) |i_283_604___31|) (<= |i_283_604___31| 2147483647)))
(define-fun BL_444_LoopBody_48__A4 () Bool (and (<= (- 2147483648) |index_444_115_444_458___32|) (<= |index_444_115_444_458___32| 2147483647)))
(define-fun BL_444_LoopBody_48__A5 () Bool (<= 0 |index_444_115_444_458___32|))
(define-fun BL_444_LoopBody_48__A6 () Bool |_JML__tmp135|)
(assert (= BL_444_LoopBody_48 (=> BL_444_LoopBody_48__A1 (=> BL_444_LoopBody_48__A2 (=> BL_444_LoopBody_48__A3 (=> BL_444_LoopBody_48__A4 (=> BL_444_LoopBody_48__A5 (=> BL_444_LoopBody_48__A6 (and BL_444_then_53 BL_444_else_54)))))))))
(define-fun BL_444_then_53__A1 () Bool (not |_JML__tmp137|))
(define-fun BL_444_then_53__A2 () Bool (= |BL_444_LoopAfter_51_source| 53))
(assert (= BL_444_then_53 (=> BL_444_then_53__A1 (=> BL_444_then_53__A2 BL_444_LoopAfter_51))))
(define-fun BL_444_else_54__A1 () Bool (not (not |_JML__tmp137|)))
(assert (= BL_444_else_54 (=> BL_444_else_54__A1 BL_444_afterIf_52)))
(define-fun |_JML__tmp139| () Int |i_283_604___31|)
(define-fun |_JML__tmp140| () REF |pat_250_250___15|)
(define-fun |_JML__tmp141| () REF |_JML__tmp140|)
(declare-fun |_JML__tmp142| () Int)
(declare-fun |_JML__tmp143| () Bool)
(define-fun |_$CPRE__34_1_1| () Bool true)
(define-fun |_$CPRE__34_1| () Bool true)
(define-fun |_$CPRE__34| () Bool true)
(define-fun BL_444_afterIf_52__A1 () Bool (= |ASSERT_204_477| (distinct |_JML__tmp141| NULL)))
(define-fun BL_444_afterIf_52__A2 () Bool (and (<= (- 2147483648) |_JML__tmp142|) (<= |_JML__tmp142| 2147483647)))
(define-fun BL_444_afterIf_52__A3 () Bool (= |_JML__tmp143| true))
(define-fun BL_444_afterIf_52__A4 () Bool (= |ASSERT_208_0| |_$CPRE__34|))
(assert (= BL_444_afterIf_52 (=> BL_444_afterIf_52__A1 (and |ASSERT_204_477| (=> |ASSERT_204_477| (=> BL_444_afterIf_52__A2 (=> BL_444_afterIf_52__A3 (=> BL_444_afterIf_52__A4 (and |ASSERT_208_0| (=> |ASSERT_208_0| BL_487_AfterLabel_56))))))))))
(define-fun |_JML__tmp145| () Bool (= |`exception_233_233___13| NULL))
(assert (= BL_487_AfterLabel_56 (and BL_487_then_58 BL_487_else_59)))
(define-fun BL_487_then_58__A1 () Bool |_JML__tmp145|)
(define-fun BL_487_then_58__A2 () Bool (= |BL_487_afterIf_57_source| 58))
(assert (= BL_487_then_58 (=> BL_487_then_58__A1 (=> BL_487_then_58__A2 BL_487_afterIf_57))))
(define-fun BL_487_else_59__A1 () Bool (not |_JML__tmp145|))
(define-fun BL_487_else_59__A2 () Bool (= |BL_487_afterIf_57_source| 59))
(assert (= BL_487_else_59 (=> BL_487_else_59__A1 (=> BL_487_else_59__A2 BL_487_afterIf_57))))
(define-fun |_JML__tmp150| () Bool (= |`exceptionCall_487_487___33| NULL))
(define-fun |_JML__tmp146| () Bool (>= |_JML__tmp142| 0))
(define-fun |_JML__tmp147| () Int (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp141|)))
(define-fun |_JML__tmp148| () Int |_JML__tmp147|)
(define-fun |_JML__tmp149| () Bool (= |_JML__tmp142| |_JML__tmp148|))
(define-fun |_JML__tmp151| () Bool (or (not (and (< 0 |_JML__tmp139|) (< |_JML__tmp142| 0))) (<= |_JML__tmp139| (+ 2147483647 |_JML__tmp142|))))
(define-fun |_JML__tmp152| () Bool (or (not (and (< |_JML__tmp139| 0) (< 0 |_JML__tmp142|))) (<= (+ (- 2147483648) |_JML__tmp142|) |_JML__tmp139|)))
(define-fun |_JML__tmp153| () Int (ite (< 2147483647 (- |_JML__tmp139| |_JML__tmp142|)) (+ (+ (- |_JML__tmp139| |_JML__tmp142|) (- 2147483648)) (- 2147483648)) (ite (< (- |_JML__tmp139| |_JML__tmp142|) (- 2147483648)) (- (- (- |_JML__tmp139| |_JML__tmp142|) (- 2147483648)) (- 2147483648)) (- |_JML__tmp139| |_JML__tmp142|))))
(define-fun |_JML__tmp154| () REF |txt_262_262___16|)
(define-fun |_JML__tmp155| () REF |_JML__tmp154|)
(declare-fun |_JML__tmp156| () Int)
(declare-fun |_JML__tmp157| () Bool)
(define-fun |_$CPRE__35_1_1| () Bool true)
(define-fun |_$CPRE__35_1| () Bool true)
(define-fun |_$CPRE__35| () Bool true)
(define-fun BL_487_afterIf_57__A1 () Bool (= |`exceptionCall_487_487___33| NULL))
(define-fun BL_487_afterIf_57__A2 () Bool (= |_JML__tmp142| (java_lang_String_length$_12891 |_JML__tmp141|)))
(define-fun BL_487_afterIf_57__A3 () Bool |_JML__tmp146|)
(define-fun BL_487_afterIf_57__A4 () Bool (and (<= 0 (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp141|))) (<= (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp141|)) 2147483647)))
(define-fun BL_487_afterIf_57__A5 () Bool (= |ASSERT_213_3235| (or (not (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp141|) NULL)) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp141|) NULL))))
(define-fun BL_487_afterIf_57__A6 () Bool |_JML__tmp149|)
(define-fun BL_487_afterIf_57__A7 () Bool (and (<= (- 2147483648) |_JML__tmp139|) (<= |_JML__tmp139| 2147483647)))
(define-fun BL_487_afterIf_57__A8 () Bool (and (<= (- 2147483648) |_JML__tmp142|) (<= |_JML__tmp142| 2147483647)))
(define-fun BL_487_afterIf_57__A9 () Bool (or (not (and (< 0 |_JML__tmp139|) (< |_JML__tmp142| 0))) (<= |_JML__tmp139| (+ 2147483647 |_JML__tmp142|))))
(define-fun BL_487_afterIf_57__A10 () Bool (or (not (and (< |_JML__tmp139| 0) (< 0 |_JML__tmp142|))) (<= (+ (- 2147483648) |_JML__tmp142|) |_JML__tmp139|)))
(define-fun BL_487_afterIf_57__A11 () Bool (= |ASSERT_222_492| (distinct |_JML__tmp155| NULL)))
(define-fun BL_487_afterIf_57__A12 () Bool (and (<= (- 2147483648) |_JML__tmp156|) (<= |_JML__tmp156| 2147483647)))
(define-fun BL_487_afterIf_57__A13 () Bool (= |_JML__tmp157| true))
(define-fun BL_487_afterIf_57__A14 () Bool (= |ASSERT_226_0| |_$CPRE__35|))
(assert (= BL_487_afterIf_57 (=> BL_487_afterIf_57__A1 (=> BL_487_afterIf_57__A2 (=> BL_487_afterIf_57__A3 (=> BL_487_afterIf_57__A4 (=> BL_487_afterIf_57__A5 (and |ASSERT_213_3235| (=> |ASSERT_213_3235| (=> BL_487_afterIf_57__A6 (=> BL_487_afterIf_57__A7 (=> BL_487_afterIf_57__A8 (=> BL_487_afterIf_57__A9 (=> BL_487_afterIf_57__A10 (=> BL_487_afterIf_57__A11 (and |ASSERT_222_492| (=> |ASSERT_222_492| (=> BL_487_afterIf_57__A12 (=> BL_487_afterIf_57__A13 (=> BL_487_afterIf_57__A14 (and |ASSERT_226_0| (=> |ASSERT_226_0| BL_502_AfterLabel_60))))))))))))))))))))))
(define-fun |_JML__tmp159| () Bool (= |`exception_233_233___13| NULL))
(assert (= BL_502_AfterLabel_60 (and BL_502_then_62 BL_502_else_63)))
(define-fun BL_502_then_62__A1 () Bool |_JML__tmp159|)
(define-fun BL_502_then_62__A2 () Bool (= |BL_502_afterIf_61_source| 62))
(assert (= BL_502_then_62 (=> BL_502_then_62__A1 (=> BL_502_then_62__A2 BL_502_afterIf_61))))
(define-fun BL_502_else_63__A1 () Bool (not |_JML__tmp159|))
(define-fun BL_502_else_63__A2 () Bool (= |BL_502_afterIf_61_source| 63))
(assert (= BL_502_else_63 (=> BL_502_else_63__A1 (=> BL_502_else_63__A2 BL_502_afterIf_61))))
(define-fun |_JML__tmp164| () Bool (= |`exceptionCall_502_502___34| NULL))
(define-fun |_JML__tmp160| () Bool (>= |_JML__tmp156| 0))
(define-fun |_JML__tmp161| () Int (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp155|)))
(define-fun |_JML__tmp162| () Int |_JML__tmp161|)
(define-fun |_JML__tmp163| () Bool (= |_JML__tmp156| |_JML__tmp162|))
(define-fun |_JML__tmp165| () Bool (or (not (and (< 0 |_JML__tmp153|) (< 0 |_JML__tmp156|))) (<= |_JML__tmp153| (- 2147483647 |_JML__tmp156|))))
(define-fun |_JML__tmp166| () Bool (or (not (and (< |_JML__tmp153| 0) (< |_JML__tmp156| 0))) (<= (- (- 2147483648) |_JML__tmp156|) |_JML__tmp153|)))
(define-fun |_JML__tmp167| () Int (ite (< 2147483647 (+ |_JML__tmp153| |_JML__tmp156|)) (+ (+ (+ |_JML__tmp153| |_JML__tmp156|) (- 2147483648)) (- 2147483648)) (ite (< (+ |_JML__tmp153| |_JML__tmp156|) (- 2147483648)) (- (- (+ |_JML__tmp153| |_JML__tmp156|) (- 2147483648)) (- 2147483648)) (+ |_JML__tmp153| |_JML__tmp156|))))
(define-fun |_JML__tmp168| () Int |j_469_469___35|)
(define-fun |_JML__tmp169| () Bool (< |_JML__tmp168| 0))
(define-fun BL_502_afterIf_61__A1 () Bool (= |`exceptionCall_502_502___34| NULL))
(define-fun BL_502_afterIf_61__A2 () Bool (= |_JML__tmp156| (java_lang_String_length$_12891 |_JML__tmp155|)))
(define-fun BL_502_afterIf_61__A3 () Bool |_JML__tmp160|)
(define-fun BL_502_afterIf_61__A4 () Bool (and (<= 0 (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp155|))) (<= (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp155|)) 2147483647)))
(define-fun BL_502_afterIf_61__A5 () Bool (= |ASSERT_231_3235| (or (not (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp155|) NULL)) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp155|) NULL))))
(define-fun BL_502_afterIf_61__A6 () Bool |_JML__tmp163|)
(define-fun BL_502_afterIf_61__A7 () Bool (and (<= (- 2147483648) |_JML__tmp153|) (<= |_JML__tmp153| 2147483647)))
(define-fun BL_502_afterIf_61__A8 () Bool (and (<= (- 2147483648) |_JML__tmp156|) (<= |_JML__tmp156| 2147483647)))
(define-fun BL_502_afterIf_61__A9 () Bool (or (not (and (< 0 |_JML__tmp153|) (< 0 |_JML__tmp156|))) (<= |_JML__tmp153| (- 2147483647 |_JML__tmp156|))))
(define-fun BL_502_afterIf_61__A10 () Bool (or (not (and (< |_JML__tmp153| 0) (< |_JML__tmp156| 0))) (<= (- (- 2147483648) |_JML__tmp156|) |_JML__tmp153|)))
(define-fun BL_502_afterIf_61__A11 () Bool (= |j_469_469___35| |_JML__tmp167|))
(assert (= BL_502_afterIf_61 (=> BL_502_afterIf_61__A1 (=> BL_502_afterIf_61__A2 (=> BL_502_afterIf_61__A3 (=> BL_502_afterIf_61__A4 (=> BL_502_afterIf_61__A5 (and |ASSERT_231_3235| (=> |ASSERT_231_3235| (=> BL_502_afterIf_61__A6 (=> BL_502_afterIf_61__A7 (=> BL_502_afterIf_61__A8 (=> BL_502_afterIf_61__A9 (=> BL_502_afterIf_61__A10 (=> BL_502_afterIf_61__A11 (and BL_527_then_65 BL_527_else_66))))))))))))))))
(define-fun BL_527_then_65__A1 () Bool |_JML__tmp169|)
(define-fun BL_527_then_65__A2 () Bool (= |`conditionalResult_170_527_0___37| true))
(define-fun BL_527_then_65__A3 () Bool (= |`conditionalResult_170_527_544___50| |`conditionalResult_170_527_0___37|))
(define-fun BL_527_then_65__A4 () Bool (= |BL_527_afterIf_64_source| 65))
(assert (= BL_527_then_65 (=> BL_527_then_65__A1 (=> BL_527_then_65__A2 (=> BL_527_then_65__A3 (=> BL_527_then_65__A4 BL_527_afterIf_64))))))
(define-fun |_JML__tmp171| () REF |pat_250_250___15|)
(define-fun |_JML__tmp172| () Int |i_283_604___31|)
(define-fun |_JML__tmp173| () REF |_JML__tmp171|)
(define-fun BL_527_else_66__A1 () Bool (not |_JML__tmp169|))
(define-fun BL_527_else_66__A2 () Bool (= |ASSERT_241_530| (distinct |_JML__tmp173| NULL)))
(assert (= BL_527_else_66 (=> BL_527_else_66__A1 (=> BL_527_else_66__A2 (and |ASSERT_241_530| (=> |ASSERT_241_530| (and BL_540_then_68 BL_540_else_69)))))))
(define-fun |_JML__tmp174| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL))
(define-fun BL_540_then_68__A1 () Bool (distinct |_JML__tmp173| NULL))
(define-fun BL_540_then_68__A2 () Bool (= |ASSERT_242_530| |_JML__tmp174|))
(define-fun BL_540_then_68__A3 () Bool (= |BL_540_afterIf_67_source| 68))
(assert (= BL_540_then_68 (=> BL_540_then_68__A1 (=> BL_540_then_68__A2 (and |ASSERT_242_530| (=> |ASSERT_242_530| (=> BL_540_then_68__A3 BL_540_afterIf_67)))))))
(define-fun BL_540_else_69__A1 () Bool (not (distinct |_JML__tmp173| NULL)))
(define-fun BL_540_else_69__A2 () Bool (= |BL_540_afterIf_67_source| 69))
(assert (= BL_540_else_69 (=> BL_540_else_69__A1 (=> BL_540_else_69__A2 BL_540_afterIf_67))))
(assert (= BL_540_afterIf_67 (and BL_250_then_71 BL_250_else_72)))
(define-fun |_JML__tmp175| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |pat_250_250___15|) NULL))
(define-fun BL_250_then_71__A1 () Bool (distinct |pat_250_250___15| NULL))
(define-fun BL_250_then_71__A2 () Bool (= |ASSERT_243_250| |_JML__tmp175|))
(define-fun BL_250_then_71__A3 () Bool (= |BL_250_afterIf_70_source| 71))
(assert (= BL_250_then_71 (=> BL_250_then_71__A1 (=> BL_250_then_71__A2 (and |ASSERT_243_250| (=> |ASSERT_243_250| (=> BL_250_then_71__A3 BL_250_afterIf_70)))))))
(define-fun BL_250_else_72__A1 () Bool (not (distinct |pat_250_250___15| NULL)))
(define-fun BL_250_else_72__A2 () Bool (= |BL_250_afterIf_70_source| 72))
(assert (= BL_250_else_72 (=> BL_250_else_72__A1 (=> BL_250_else_72__A2 BL_250_afterIf_70))))
(assert (= BL_250_afterIf_70 (and BL_262_then_74 BL_262_else_75)))
(define-fun |_JML__tmp176| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |txt_262_262___16|) NULL))
(define-fun BL_262_then_74__A1 () Bool (distinct |txt_262_262___16| NULL))
(define-fun BL_262_then_74__A2 () Bool (= |ASSERT_244_262| |_JML__tmp176|))
(define-fun BL_262_then_74__A3 () Bool (= |BL_262_afterIf_73_source| 74))
(assert (= BL_262_then_74 (=> BL_262_then_74__A1 (=> BL_262_then_74__A2 (and |ASSERT_244_262| (=> |ASSERT_244_262| (=> BL_262_then_74__A3 BL_262_afterIf_73)))))))
(define-fun BL_262_else_75__A1 () Bool (not (distinct |txt_262_262___16| NULL)))
(define-fun BL_262_else_75__A2 () Bool (= |BL_262_afterIf_73_source| 75))
(assert (= BL_262_else_75 (=> BL_262_else_75__A1 (=> BL_262_else_75__A2 BL_262_afterIf_73))))
(assert (= BL_262_afterIf_73 (and BL_540_then_77 BL_540_else_78)))
(define-fun |_JML__tmp177| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL))
(define-fun BL_540_then_77__A1 () Bool (distinct |_JML__tmp173| NULL))
(define-fun BL_540_then_77__A2 () Bool (= |ASSERT_245_530| |_JML__tmp177|))
(define-fun BL_540_then_77__A3 () Bool (= |BL_540_afterIf_76_source| 77))
(assert (= BL_540_then_77 (=> BL_540_then_77__A1 (=> BL_540_then_77__A2 (and |ASSERT_245_530| (=> |ASSERT_245_530| (=> BL_540_then_77__A3 BL_540_afterIf_76)))))))
(define-fun BL_540_else_78__A1 () Bool (not (distinct |_JML__tmp173| NULL)))
(define-fun BL_540_else_78__A2 () Bool (= |BL_540_afterIf_76_source| 78))
(assert (= BL_540_else_78 (=> BL_540_else_78__A1 (=> BL_540_else_78__A2 BL_540_afterIf_76))))
(declare-fun |_JML__tmp178| () Int)
(declare-fun |_JML__tmp179| () Bool)
(define-fun |_$CPRE__36_1_1| () Bool true)
(declare-fun |_JML__tmp180| () Bool)
(define-fun |_JML__tmp181| () Int (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|)))
(define-fun |_JML__tmp182| () Bool (and (<= 0 |_JML__tmp172|) (< |_JML__tmp172| |_JML__tmp181|)))
(define-fun |_$CPRE__36_1_2| () Bool |_JML__tmp182|)
(define-fun |_$CPRE__36_1| () Bool |_JML__tmp180|)
(declare-fun |_JML__tmp183| () Bool)
(define-fun |_$CPRE__36_2_1| () Bool true)
(declare-fun |_JML__tmp184| () Bool)
(define-fun |_JML__tmp185| () Int (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|)))
(define-fun |_JML__tmp186| () Bool (and (<= 0 |_JML__tmp172|) (< |_JML__tmp172| |_JML__tmp185|)))
(define-fun |_JML__tmp187| () Bool (not |_JML__tmp186|))
(define-fun |_$CPRE__36_2_2| () Bool |_JML__tmp187|)
(define-fun |_$CPRE__36_2| () Bool |_JML__tmp184|)
(declare-fun |_JML__tmp188| () Bool)
(define-fun |_$CPRE__36_3_1| () Bool true)
(declare-fun |_JML__tmp189| () Bool)
(define-fun |_JML__tmp190| () Bool (< |_JML__tmp172| 0))
(define-fun BL_540_afterIf_76__A1 () Bool (and (<= 0 |_JML__tmp178|) (<= |_JML__tmp178| 65535)))
(define-fun BL_540_afterIf_76__A2 () Bool (= |_JML__tmp179| true))
(define-fun BL_540_afterIf_76__A3 () Bool (and (<= 0 (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|))) (<= (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|)) 2147483647)))
(define-fun BL_540_afterIf_76__A4 () Bool (= |ASSERT_250_3357| (or (not (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL)) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL))))
(define-fun BL_540_afterIf_76__A5 () Bool (= |_JML__tmp180| |_JML__tmp182|))
(define-fun BL_540_afterIf_76__A6 () Bool (= |_JML__tmp183| true))
(define-fun BL_540_afterIf_76__A7 () Bool (and (<= 0 (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|))) (<= (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|)) 2147483647)))
(define-fun BL_540_afterIf_76__A8 () Bool (= |ASSERT_256_3516| (or (not (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL)) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL))))
(define-fun BL_540_afterIf_76__A9 () Bool (= |_JML__tmp184| |_JML__tmp187|))
(define-fun BL_540_afterIf_76__A10 () Bool (= |_JML__tmp188| true))
(assert (= BL_540_afterIf_76 (=> BL_540_afterIf_76__A1 (=> BL_540_afterIf_76__A2 (=> BL_540_afterIf_76__A3 (=> BL_540_afterIf_76__A4 (and |ASSERT_250_3357| (=> |ASSERT_250_3357| (=> BL_540_afterIf_76__A5 (=> BL_540_afterIf_76__A6 (=> BL_540_afterIf_76__A7 (=> BL_540_afterIf_76__A8 (and |ASSERT_256_3516| (=> |ASSERT_256_3516| (=> BL_540_afterIf_76__A9 (=> BL_540_afterIf_76__A10 (and BL_13335_then_80 BL_13335_else_81)))))))))))))))))
(define-fun BL_13335_then_80__A1 () Bool |_JML__tmp190|)
(define-fun BL_13335_then_80__A2 () Bool (= |`conditionalResult_191_13335_0___39| true))
(define-fun BL_13335_then_80__A3 () Bool (= |`conditionalResult_191_13335_13344___40| |`conditionalResult_191_13335_0___39|))
(define-fun BL_13335_then_80__A4 () Bool (= |BL_13335_afterIf_79_source| 80))
(assert (= BL_13335_then_80 (=> BL_13335_then_80__A1 (=> BL_13335_then_80__A2 (=> BL_13335_then_80__A3 (=> BL_13335_then_80__A4 BL_13335_afterIf_79))))))
(define-fun |_JML__tmp192| () REF |_JML__tmp173|)
(declare-fun |_JML__tmp193| () Int)
(declare-fun |_JML__tmp194| () Bool)
(define-fun |_$CPRE__37_1_1| () Bool true)
(define-fun |_$CPRE__37_1| () Bool true)
(define-fun |_$CPRE__37| () Bool true)
(define-fun BL_13335_else_81__A1 () Bool (not |_JML__tmp190|))
(define-fun BL_13335_else_81__A2 () Bool (and (<= (- 2147483648) |_JML__tmp193|) (<= |_JML__tmp193| 2147483647)))
(define-fun BL_13335_else_81__A3 () Bool (= |_JML__tmp194| true))
(define-fun BL_13335_else_81__A4 () Bool (= |ASSERT_264_0| |_$CPRE__37|))
(assert (= BL_13335_else_81 (=> BL_13335_else_81__A1 (=> BL_13335_else_81__A2 (=> BL_13335_else_81__A3 (=> BL_13335_else_81__A4 (and |ASSERT_264_0| (=> |ASSERT_264_0| BL_13353_AfterLabel_82))))))))
(define-fun |_JML__tmp196| () Bool (= |`exception_233_233___13| NULL))
(assert (= BL_13353_AfterLabel_82 (and BL_13353_then_84 BL_13353_else_85)))
(define-fun BL_13353_then_84__A1 () Bool |_JML__tmp196|)
(define-fun BL_13353_then_84__A2 () Bool (= |BL_13353_afterIf_83_source| 84))
(assert (= BL_13353_then_84 (=> BL_13353_then_84__A1 (=> BL_13353_then_84__A2 BL_13353_afterIf_83))))
(define-fun BL_13353_else_85__A1 () Bool (not |_JML__tmp196|))
(define-fun BL_13353_else_85__A2 () Bool (= |BL_13353_afterIf_83_source| 85))
(assert (= BL_13353_else_85 (=> BL_13353_else_85__A1 (=> BL_13353_else_85__A2 BL_13353_afterIf_83))))
(define-fun |_JML__tmp197| () Bool (>= |_JML__tmp193| 0))
(define-fun |_JML__tmp198| () Int (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp192|)))
(define-fun |_JML__tmp199| () Int |_JML__tmp198|)
(define-fun |_JML__tmp200| () Bool (= |_JML__tmp193| |_JML__tmp199|))
(define-fun |_JML__tmp201| () Bool (>= |_JML__tmp172| |_JML__tmp193|))
(define-fun BL_13353_afterIf_83__A1 () Bool (= |_JML__tmp193| (java_lang_String_length$_12891 |_JML__tmp192|)))
(define-fun BL_13353_afterIf_83__A2 () Bool |_JML__tmp197|)
(define-fun BL_13353_afterIf_83__A3 () Bool (and (<= 0 (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp192|))) (<= (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp192|)) 2147483647)))
(define-fun BL_13353_afterIf_83__A4 () Bool (= |ASSERT_268_3235| (or (not (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp192|) NULL)) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp192|) NULL))))
(define-fun BL_13353_afterIf_83__A5 () Bool |_JML__tmp200|)
(define-fun BL_13353_afterIf_83__A6 () Bool (= |`conditionalResult_191_13335_13344___40| |_JML__tmp201|))
(define-fun BL_13353_afterIf_83__A7 () Bool (= |BL_13335_afterIf_79_source| 83))
(assert (= BL_13353_afterIf_83 (=> BL_13353_afterIf_83__A1 (=> BL_13353_afterIf_83__A2 (=> BL_13353_afterIf_83__A3 (=> BL_13353_afterIf_83__A4 (and |ASSERT_268_3235| (=> |ASSERT_268_3235| (=> BL_13353_afterIf_83__A5 (=> BL_13353_afterIf_83__A6 (=> BL_13353_afterIf_83__A7 BL_13335_afterIf_79)))))))))))
(define-fun |_$CPRE__36_3_2| () Bool |`conditionalResult_191_13335_13344___40|)
(define-fun |_$CPRE__36_3| () Bool |_JML__tmp189|)
(define-fun |_$CPRE__36| () Bool (or (or |_JML__tmp180| |_JML__tmp184|) |_JML__tmp189|))
(define-fun BL_13335_afterIf_79__A1 () Bool (= |_JML__tmp189| |`conditionalResult_191_13335_13344___40|))
(define-fun BL_13335_afterIf_79__A2 () Bool (= |ASSERT_274_3346| |_$CPRE__36|))
(assert (= BL_13335_afterIf_79 (=> BL_13335_afterIf_79__A1 (=> BL_13335_afterIf_79__A2 (and |ASSERT_274_3346| (=> |ASSERT_274_3346| BL_540_AfterLabel_86))))))
(assert (= BL_540_AfterLabel_86 (and BL_3297_then_88 BL_3297_else_89)))
(define-fun BL_3297_then_88__A1 () Bool |_JML__tmp180|)
(assert (= BL_3297_then_88 (=> BL_3297_then_88__A1 (and BL_3297_then_91 BL_3297_else_92))))
(define-fun BL_3297_then_91__A1 () Bool |_JML__tmp180|)
(define-fun BL_3297_then_91__A2 () Bool (= |BL_3297_afterIf_90_source| 91))
(assert (= BL_3297_then_91 (=> BL_3297_then_91__A1 (=> BL_3297_then_91__A2 BL_3297_afterIf_90))))
(define-fun BL_3297_else_92__A1 () Bool (not |_JML__tmp180|))
(define-fun BL_3297_else_92__A2 () Bool (= |BL_3297_afterIf_90_source| 92))
(assert (= BL_3297_else_92 (=> BL_3297_else_92__A1 (=> BL_3297_else_92__A2 BL_3297_afterIf_90))))
(define-fun BL_3297_afterIf_90__A1 () Bool (= |BL_3297_afterIf_87_source| 90))
(assert (= BL_3297_afterIf_90 (=> BL_3297_afterIf_90__A1 BL_3297_afterIf_87)))
(define-fun BL_3297_else_89__A1 () Bool (not |_JML__tmp180|))
(define-fun BL_3297_else_89__A2 () Bool (= |BL_3297_afterIf_87_source| 89))
(assert (= BL_3297_else_89 (=> BL_3297_else_89__A1 (=> BL_3297_else_89__A2 BL_3297_afterIf_87))))
(assert (= BL_3297_afterIf_87 (and BL_3449_then_94 BL_3449_else_95)))
(define-fun BL_3449_then_94__A1 () Bool |_JML__tmp184|)
(assert (= BL_3449_then_94 (=> BL_3449_then_94__A1 (and BL_3449_then_97 BL_3449_else_98))))
(define-fun BL_3449_then_97__A1 () Bool |_JML__tmp184|)
(define-fun BL_3449_then_97__A2 () Bool (= |BL_3449_afterIf_96_source| 97))
(assert (= BL_3449_then_97 (=> BL_3449_then_97__A1 (=> BL_3449_then_97__A2 BL_3449_afterIf_96))))
(define-fun BL_3449_else_98__A1 () Bool (not |_JML__tmp184|))
(define-fun BL_3449_else_98__A2 () Bool (= |BL_3449_afterIf_96_source| 98))
(assert (= BL_3449_else_98 (=> BL_3449_else_98__A1 (=> BL_3449_else_98__A2 BL_3449_afterIf_96))))
(define-fun BL_3449_afterIf_96__A1 () Bool (= |BL_3449_afterIf_93_source| 96))
(assert (= BL_3449_afterIf_96 (=> BL_3449_afterIf_96__A1 BL_3449_afterIf_93)))
(define-fun BL_3449_else_95__A1 () Bool (not |_JML__tmp184|))
(define-fun BL_3449_else_95__A2 () Bool (= |BL_3449_afterIf_93_source| 95))
(assert (= BL_3449_else_95 (=> BL_3449_else_95__A1 (=> BL_3449_else_95__A2 BL_3449_afterIf_93))))
(assert (= BL_3449_afterIf_93 (and BL_13285_then_100 BL_13285_else_101)))
(define-fun BL_13285_then_100__A1 () Bool |_JML__tmp189|)
(assert (= BL_13285_then_100 (=> BL_13285_then_100__A1 (and BL_13285_then_103 BL_13285_else_104))))
(define-fun BL_13285_then_103__A1 () Bool |_JML__tmp189|)
(define-fun BL_13285_then_103__A2 () Bool (= |BL_13285_afterIf_102_source| 103))
(assert (= BL_13285_then_103 (=> BL_13285_then_103__A1 (=> BL_13285_then_103__A2 BL_13285_afterIf_102))))
(define-fun BL_13285_else_104__A1 () Bool (not |_JML__tmp189|))
(define-fun BL_13285_else_104__A2 () Bool (= |BL_13285_afterIf_102_source| 104))
(assert (= BL_13285_else_104 (=> BL_13285_else_104__A1 (=> BL_13285_else_104__A2 BL_13285_afterIf_102))))
(define-fun BL_13285_afterIf_102__A1 () Bool (= |BL_13285_afterIf_99_source| 102))
(assert (= BL_13285_afterIf_102 (=> BL_13285_afterIf_102__A1 BL_13285_afterIf_99)))
(define-fun BL_13285_else_101__A1 () Bool (not |_JML__tmp189|))
(define-fun BL_13285_else_101__A2 () Bool (= |BL_13285_afterIf_99_source| 101))
(assert (= BL_13285_else_101 (=> BL_13285_else_101__A1 (=> BL_13285_else_101__A2 BL_13285_afterIf_99))))
(define-fun BL_13285_afterIf_99__A1 () Bool (or (not (distinct (select |java.lang.Object___owner_1586_0___5| |_JML__tmp173|) NULL)) (and (and (distinct (select |java.lang.Object___owner_1586_0___5| |_JML__tmp173|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object___owner_1586_0___5| |_JML__tmp173|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object___owner_1586_0___5| |_JML__tmp173|)) JMLT_java_lang_Object))))
(define-fun BL_13285_afterIf_99__A2 () Bool (and (distinct (select |java.lang.Object_theString_8079_0___8| |_JML__tmp173|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |_JML__tmp173|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |_JML__tmp173|)) T_java_lang_String)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |_JML__tmp173|)) JMLT_java_lang_String))))
(define-fun BL_13285_afterIf_99__A3 () Bool (and (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL) (and (jmlSubType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|)) (_makeJMLArrayType JMLT_char)) (= (__arrayElemType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|))) JMLT_char))))
(define-fun BL_13285_afterIf_99__A4 () Bool (and (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (and (and (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (javaSubType (javaTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) T_java_util_Comparator)) (jmlSubType (jmlTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) (_JMLT_1 T_java_util_Comparator JMLT_java_lang_String)))))
(assert (= BL_13285_afterIf_99 (=> BL_13285_afterIf_99__A1 (=> BL_13285_afterIf_99__A2 (=> BL_13285_afterIf_99__A3 (=> BL_13285_afterIf_99__A4 (and BL_540_then_106 BL_540_else_107)))))))
(define-fun BL_540_then_106__A1 () Bool (distinct |_JML__tmp173| NULL))
(define-fun BL_540_then_106__A2 () Bool (or (= (select |java.lang.Object___owner_1586_0___5| |_JML__tmp173|) NULL) (and (and (distinct (select |java.lang.Object___owner_1586_0___5| |_JML__tmp173|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object___owner_1586_0___5| |_JML__tmp173|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object___owner_1586_0___5| |_JML__tmp173|)) JMLT_java_lang_Object))))
(define-fun BL_540_then_106__A3 () Bool (distinct (select |java.lang.Object_theString_8079_0___8| |_JML__tmp173|) NULL))
(define-fun BL_540_then_106__A4 () Bool (or (= (select |java.lang.Object_theString_8079_0___8| |_JML__tmp173|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |_JML__tmp173|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |_JML__tmp173|)) T_java_lang_String)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |_JML__tmp173|)) JMLT_java_lang_String))))
(define-fun BL_540_then_106__A5 () Bool (= |BL_540_afterIf_105_source| 106))
(assert (= BL_540_then_106 (=> BL_540_then_106__A1 (=> BL_540_then_106__A2 (=> BL_540_then_106__A3 (=> BL_540_then_106__A4 (=> BL_540_then_106__A5 BL_540_afterIf_105)))))))
(define-fun BL_540_else_107__A1 () Bool (not (distinct |_JML__tmp173| NULL)))
(define-fun BL_540_else_107__A2 () Bool (= |BL_540_afterIf_105_source| 107))
(assert (= BL_540_else_107 (=> BL_540_else_107__A1 (=> BL_540_else_107__A2 BL_540_afterIf_105))))
(assert (= BL_540_afterIf_105 (and BL_540_then_109 BL_540_else_110)))
(define-fun |_JML__tmp203| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL))
(define-fun BL_540_then_109__A1 () Bool (distinct |_JML__tmp173| NULL))
(define-fun BL_540_then_109__A2 () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL))
(define-fun BL_540_then_109__A3 () Bool (or (= (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL) (and (jmlSubType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|)) (_makeJMLArrayType JMLT_char)) (= (__arrayElemType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|))) JMLT_char))))
(define-fun BL_540_then_109__A4 () Bool |_JML__tmp203|)
(define-fun BL_540_then_109__A5 () Bool (= |BL_540_afterIf_108_source| 109))
(assert (= BL_540_then_109 (=> BL_540_then_109__A1 (=> BL_540_then_109__A2 (=> BL_540_then_109__A3 (=> BL_540_then_109__A4 (=> BL_540_then_109__A5 BL_540_afterIf_108)))))))
(define-fun BL_540_else_110__A1 () Bool (not (distinct |_JML__tmp173| NULL)))
(define-fun BL_540_else_110__A2 () Bool (= |BL_540_afterIf_108_source| 110))
(assert (= BL_540_else_110 (=> BL_540_else_110__A1 (=> BL_540_else_110__A2 BL_540_afterIf_108))))
(assert (= BL_540_afterIf_108 (and BL_540_then_112 BL_540_else_113)))
(define-fun BL_540_then_112__A1 () Bool (distinct |_JML__tmp173| NULL))
(define-fun BL_540_then_112__A2 () Bool (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL))
(define-fun BL_540_then_112__A3 () Bool (or (= |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (and (and (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (javaSubType (javaTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) T_java_util_Comparator)) (jmlSubType (jmlTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) (_JMLT_1 T_java_util_Comparator JMLT_java_lang_String)))))
(define-fun BL_540_then_112__A4 () Bool (= |BL_540_afterIf_111_source| 112))
(assert (= BL_540_then_112 (=> BL_540_then_112__A1 (=> BL_540_then_112__A2 (=> BL_540_then_112__A3 (=> BL_540_then_112__A4 BL_540_afterIf_111))))))
(define-fun BL_540_else_113__A1 () Bool (not (distinct |_JML__tmp173| NULL)))
(define-fun BL_540_else_113__A2 () Bool (= |BL_540_afterIf_111_source| 113))
(assert (= BL_540_else_113 (=> BL_540_else_113__A1 (=> BL_540_else_113__A2 BL_540_afterIf_111))))
(define-fun |_JML__tmp204| () Bool (= |`exception_233_233___13| NULL))
(assert (= BL_540_afterIf_111 (and BL_540_then_115 BL_540_else_116)))
(define-fun BL_540_then_115__A1 () Bool |_JML__tmp204|)
(define-fun BL_540_then_115__A2 () Bool (= |BL_540_afterIf_114_source| 115))
(assert (= BL_540_then_115 (=> BL_540_then_115__A1 (=> BL_540_then_115__A2 BL_540_afterIf_114))))
(define-fun BL_540_else_116__A1 () Bool (not |_JML__tmp204|))
(define-fun BL_540_else_116__A2 () Bool (= |BL_540_afterIf_114_source| 116))
(assert (= BL_540_else_116 (=> BL_540_else_116__A1 (=> BL_540_else_116__A2 BL_540_afterIf_114))))
(define-fun |_JML__tmp206| () Bool (= |`exceptionCall_540_540___41| NULL))
(assert (= BL_540_afterIf_114 (and BL_530_then_118 BL_530_else_119)))
(define-fun BL_530_then_118__A1 () Bool |_JML__tmp206|)
(define-fun BL_530_then_118__A2 () Bool (= |_JML__tmp178| (java_lang_String_charAt$_H2_13452 |_JML__tmp173| |_JML__tmp172|)))
(assert (= BL_530_then_118 (=> BL_530_then_118__A1 (=> BL_530_then_118__A2 (and BL_3298_then_121 BL_3298_else_122)))))
(define-fun |_JML__tmp205| () Bool (= |_JML__tmp178| (select (select arrays_char_0 (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|)) |_JML__tmp172|)))
(define-fun BL_3298_then_121__A1 () Bool |_JML__tmp180|)
(define-fun BL_3298_then_121__A2 () Bool (= |ASSERT_289_3408| (or (not (and |_JML__tmp180| (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL))) (<= 0 |_JML__tmp172|))))
(define-fun BL_3298_then_121__A3 () Bool (= |ASSERT_290_3408| (or (not (and |_JML__tmp180| (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|) NULL))) (> (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp173|)) |_JML__tmp172|))))
(define-fun BL_3298_then_121__A4 () Bool |_JML__tmp205|)
(define-fun BL_3298_then_121__A5 () Bool (= |BL_3298_afterIf_120_source| 121))
(assert (= BL_3298_then_121 (=> BL_3298_then_121__A1 (=> BL_3298_then_121__A2 (and |ASSERT_289_3408| (=> |ASSERT_289_3408| (=> BL_3298_then_121__A3 (and |ASSERT_290_3408| (=> |ASSERT_290_3408| (=> BL_3298_then_121__A4 (=> BL_3298_then_121__A5 BL_3298_afterIf_120)))))))))))
(define-fun BL_3298_else_122__A1 () Bool (not |_JML__tmp180|))
(define-fun BL_3298_else_122__A2 () Bool (= |BL_3298_afterIf_120_source| 122))
(assert (= BL_3298_else_122 (=> BL_3298_else_122__A1 (=> BL_3298_else_122__A2 BL_3298_afterIf_120))))
(assert (= BL_3298_afterIf_120 (and BL_3450_then_124 BL_3450_else_125)))
(define-fun BL_3450_then_124__A1 () Bool |_JML__tmp184|)
(define-fun BL_3450_then_124__A2 () Bool false)
(define-fun BL_3450_then_124__A3 () Bool (= |BL_3450_afterIf_123_source| 124))
(assert (= BL_3450_then_124 (=> BL_3450_then_124__A1 (=> BL_3450_then_124__A2 (=> BL_3450_then_124__A3 BL_3450_afterIf_123)))))
(define-fun BL_3450_else_125__A1 () Bool (not |_JML__tmp184|))
(define-fun BL_3450_else_125__A2 () Bool (= |BL_3450_afterIf_123_source| 125))
(assert (= BL_3450_else_125 (=> BL_3450_else_125__A1 (=> BL_3450_else_125__A2 BL_3450_afterIf_123))))
(assert (= BL_3450_afterIf_123 (and BL_13286_then_127 BL_13286_else_128)))
(define-fun BL_13286_then_127__A1 () Bool |_JML__tmp189|)
(define-fun BL_13286_then_127__A2 () Bool false)
(define-fun BL_13286_then_127__A3 () Bool (= |BL_13286_afterIf_126_source| 127))
(assert (= BL_13286_then_127 (=> BL_13286_then_127__A1 (=> BL_13286_then_127__A2 (=> BL_13286_then_127__A3 BL_13286_afterIf_126)))))
(define-fun BL_13286_else_128__A1 () Bool (not |_JML__tmp189|))
(define-fun BL_13286_else_128__A2 () Bool (= |BL_13286_afterIf_126_source| 128))
(assert (= BL_13286_else_128 (=> BL_13286_else_128__A1 (=> BL_13286_else_128__A2 BL_13286_afterIf_126))))
(assert (= BL_13286_afterIf_126 BL_530_afterIf_117))
(define-fun BL_530_else_119__A1 () Bool (not |_JML__tmp206|))
(define-fun BL_530_else_119__A2 () Bool (= |`exception_233_540___42| |`exceptionCall_540_540___41|))
(define-fun BL_530_else_119__A3 () Bool (= |`terminationPosition_233_540___43| (- 540)))
(define-fun BL_530_else_119__A4 () Bool (and (distinct |`exception_233_540___42| NULL) (javaSubType (javaTypeOf |`exception_233_540___42|) T_java_lang_RuntimeException)))
(assert (= BL_530_else_119 (=> BL_530_else_119__A1 (=> BL_530_else_119__A2 (=> BL_530_else_119__A3 (=> BL_530_else_119__A4 (and BL_3298_then_130 BL_3298_else_131)))))))
(define-fun BL_3298_then_130__A1 () Bool |_JML__tmp180|)
(assert (= BL_3298_then_130 (=> BL_3298_then_130__A1 (and BL_3297_then_133 BL_3297_else_134))))
(define-fun BL_3297_then_133__A1 () Bool true)
(define-fun BL_3297_then_133__A2 () Bool false)
(define-fun BL_3297_then_133__A3 () Bool (= |BL_3297_afterIf_132_source| 133))
(assert (= BL_3297_then_133 (=> BL_3297_then_133__A1 (=> BL_3297_then_133__A2 (=> BL_3297_then_133__A3 BL_3297_afterIf_132)))))
(define-fun BL_3297_else_134__A1 () Bool (not true))
(define-fun BL_3297_else_134__A2 () Bool (= |BL_3297_afterIf_132_source| 134))
(assert (= BL_3297_else_134 (=> BL_3297_else_134__A1 (=> BL_3297_else_134__A2 BL_3297_afterIf_132))))
(define-fun BL_3297_afterIf_132__A1 () Bool (or (not (and (distinct |`exception_233_540___42| NULL) (javaSubType (javaTypeOf |`exception_233_540___42|) T_java_lang_Exception))) false))
(define-fun BL_3297_afterIf_132__A2 () Bool (= |BL_3298_afterIf_129_source| 132))
(assert (= BL_3297_afterIf_132 (=> BL_3297_afterIf_132__A1 (=> BL_3297_afterIf_132__A2 BL_3298_afterIf_129))))
(define-fun BL_3298_else_131__A1 () Bool (not |_JML__tmp180|))
(define-fun BL_3298_else_131__A2 () Bool (= |BL_3298_afterIf_129_source| 131))
(assert (= BL_3298_else_131 (=> BL_3298_else_131__A1 (=> BL_3298_else_131__A2 BL_3298_afterIf_129))))
(assert (= BL_3298_afterIf_129 (and BL_3450_then_136 BL_3450_else_137)))
(define-fun BL_3450_then_136__A1 () Bool |_JML__tmp184|)
(define-fun BL_3450_then_136__A2 () Bool (or (not (and (distinct |`exception_233_540___42| NULL) (javaSubType (javaTypeOf |`exception_233_540___42|) T_java_lang_Exception))) (or false (and (distinct |`exception_233_540___42| NULL) (javaSubType (javaTypeOf |`exception_233_540___42|) T_java_lang_IndexOutOfBoundsException)))))
(define-fun BL_3450_then_136__A3 () Bool (= |BL_3450_afterIf_135_source| 136))
(assert (= BL_3450_then_136 (=> BL_3450_then_136__A1 (=> BL_3450_then_136__A2 (=> BL_3450_then_136__A3 BL_3450_afterIf_135)))))
(define-fun BL_3450_else_137__A1 () Bool (not |_JML__tmp184|))
(define-fun BL_3450_else_137__A2 () Bool (= |BL_3450_afterIf_135_source| 137))
(assert (= BL_3450_else_137 (=> BL_3450_else_137__A1 (=> BL_3450_else_137__A2 BL_3450_afterIf_135))))
(assert (= BL_3450_afterIf_135 (and BL_13286_then_139 BL_13286_else_140)))
(define-fun BL_13286_then_139__A1 () Bool |_JML__tmp189|)
(define-fun BL_13286_then_139__A2 () Bool (or (not (and (distinct |`exception_233_540___42| NULL) (javaSubType (javaTypeOf |`exception_233_540___42|) T_java_lang_Exception))) (or false (and (distinct |`exception_233_540___42| NULL) (javaSubType (javaTypeOf |`exception_233_540___42|) T_java_lang_StringIndexOutOfBoundsException)))))
(define-fun BL_13286_then_139__A3 () Bool (= |BL_13286_afterIf_138_source| 139))
(assert (= BL_13286_then_139 (=> BL_13286_then_139__A1 (=> BL_13286_then_139__A2 (=> BL_13286_then_139__A3 BL_13286_afterIf_138)))))
(define-fun BL_13286_else_140__A1 () Bool (not |_JML__tmp189|))
(define-fun BL_13286_else_140__A2 () Bool (= |BL_13286_afterIf_138_source| 140))
(assert (= BL_13286_else_140 (=> BL_13286_else_140__A1 (=> BL_13286_else_140__A2 BL_13286_afterIf_138))))
(assert (= BL_13286_afterIf_138 BL_540_throw_141))
(define-fun BL_540_throw_141__A1 () Bool (= |`exception_233_634___58| |`exception_233_540___42|))
(define-fun BL_540_throw_141__A2 () Bool (= |`terminationPosition_233_634___57| |`terminationPosition_233_540___43|))
(define-fun BL_540_throw_141__A3 () Bool (= |`result_233_634___56| |`result_233_233___17|))
(define-fun BL_540_throw_141__A4 () Bool (= |BL_233tryTarget_38_source| 141))
(assert (= BL_540_throw_141 (=> BL_540_throw_141__A1 (=> BL_540_throw_141__A2 (=> BL_540_throw_141__A3 (=> BL_540_throw_141__A4 BL_233tryTarget_38))))))
(define-fun |_JML__tmp207| () REF |txt_262_262___16|)
(define-fun |_JML__tmp208| () Int |j_469_469___35|)
(define-fun |_JML__tmp209| () REF |_JML__tmp207|)
(define-fun BL_530_afterIf_117__A1 () Bool (= |ASSERT_298_547| (distinct |_JML__tmp209| NULL)))
(assert (= BL_530_afterIf_117 (=> BL_530_afterIf_117__A1 (and |ASSERT_298_547| (=> |ASSERT_298_547| (and BL_557_then_143 BL_557_else_144))))))
(define-fun |_JML__tmp210| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL))
(define-fun BL_557_then_143__A1 () Bool (distinct |_JML__tmp209| NULL))
(define-fun BL_557_then_143__A2 () Bool (= |ASSERT_299_547| |_JML__tmp210|))
(define-fun BL_557_then_143__A3 () Bool (= |BL_557_afterIf_142_source| 143))
(assert (= BL_557_then_143 (=> BL_557_then_143__A1 (=> BL_557_then_143__A2 (and |ASSERT_299_547| (=> |ASSERT_299_547| (=> BL_557_then_143__A3 BL_557_afterIf_142)))))))
(define-fun BL_557_else_144__A1 () Bool (not (distinct |_JML__tmp209| NULL)))
(define-fun BL_557_else_144__A2 () Bool (= |BL_557_afterIf_142_source| 144))
(assert (= BL_557_else_144 (=> BL_557_else_144__A1 (=> BL_557_else_144__A2 BL_557_afterIf_142))))
(assert (= BL_557_afterIf_142 (and BL_250_then_146 BL_250_else_147)))
(define-fun |_JML__tmp211| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |pat_250_250___15|) NULL))
(define-fun BL_250_then_146__A1 () Bool (distinct |pat_250_250___15| NULL))
(define-fun BL_250_then_146__A2 () Bool (= |ASSERT_300_250| |_JML__tmp211|))
(define-fun BL_250_then_146__A3 () Bool (= |BL_250_afterIf_145_source| 146))
(assert (= BL_250_then_146 (=> BL_250_then_146__A1 (=> BL_250_then_146__A2 (and |ASSERT_300_250| (=> |ASSERT_300_250| (=> BL_250_then_146__A3 BL_250_afterIf_145)))))))
(define-fun BL_250_else_147__A1 () Bool (not (distinct |pat_250_250___15| NULL)))
(define-fun BL_250_else_147__A2 () Bool (= |BL_250_afterIf_145_source| 147))
(assert (= BL_250_else_147 (=> BL_250_else_147__A1 (=> BL_250_else_147__A2 BL_250_afterIf_145))))
(assert (= BL_250_afterIf_145 (and BL_262_then_149 BL_262_else_150)))
(define-fun |_JML__tmp212| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |txt_262_262___16|) NULL))
(define-fun BL_262_then_149__A1 () Bool (distinct |txt_262_262___16| NULL))
(define-fun BL_262_then_149__A2 () Bool (= |ASSERT_301_262| |_JML__tmp212|))
(define-fun BL_262_then_149__A3 () Bool (= |BL_262_afterIf_148_source| 149))
(assert (= BL_262_then_149 (=> BL_262_then_149__A1 (=> BL_262_then_149__A2 (and |ASSERT_301_262| (=> |ASSERT_301_262| (=> BL_262_then_149__A3 BL_262_afterIf_148)))))))
(define-fun BL_262_else_150__A1 () Bool (not (distinct |txt_262_262___16| NULL)))
(define-fun BL_262_else_150__A2 () Bool (= |BL_262_afterIf_148_source| 150))
(assert (= BL_262_else_150 (=> BL_262_else_150__A1 (=> BL_262_else_150__A2 BL_262_afterIf_148))))
(assert (= BL_262_afterIf_148 (and BL_557_then_152 BL_557_else_153)))
(define-fun |_JML__tmp213| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL))
(define-fun BL_557_then_152__A1 () Bool (distinct |_JML__tmp209| NULL))
(define-fun BL_557_then_152__A2 () Bool (= |ASSERT_302_547| |_JML__tmp213|))
(define-fun BL_557_then_152__A3 () Bool (= |BL_557_afterIf_151_source| 152))
(assert (= BL_557_then_152 (=> BL_557_then_152__A1 (=> BL_557_then_152__A2 (and |ASSERT_302_547| (=> |ASSERT_302_547| (=> BL_557_then_152__A3 BL_557_afterIf_151)))))))
(define-fun BL_557_else_153__A1 () Bool (not (distinct |_JML__tmp209| NULL)))
(define-fun BL_557_else_153__A2 () Bool (= |BL_557_afterIf_151_source| 153))
(assert (= BL_557_else_153 (=> BL_557_else_153__A1 (=> BL_557_else_153__A2 BL_557_afterIf_151))))
(declare-fun |_JML__tmp214| () Int)
(declare-fun |_JML__tmp215| () Bool)
(define-fun |_$CPRE__38_1_1| () Bool true)
(declare-fun |_JML__tmp216| () Bool)
(define-fun |_JML__tmp217| () Int (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|)))
(define-fun |_JML__tmp218| () Bool (and (<= 0 |_JML__tmp208|) (< |_JML__tmp208| |_JML__tmp217|)))
(define-fun |_$CPRE__38_1_2| () Bool |_JML__tmp218|)
(define-fun |_$CPRE__38_1| () Bool |_JML__tmp216|)
(declare-fun |_JML__tmp219| () Bool)
(define-fun |_$CPRE__38_2_1| () Bool true)
(declare-fun |_JML__tmp220| () Bool)
(define-fun |_JML__tmp221| () Int (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|)))
(define-fun |_JML__tmp222| () Bool (and (<= 0 |_JML__tmp208|) (< |_JML__tmp208| |_JML__tmp221|)))
(define-fun |_JML__tmp223| () Bool (not |_JML__tmp222|))
(define-fun |_$CPRE__38_2_2| () Bool |_JML__tmp223|)
(define-fun |_$CPRE__38_2| () Bool |_JML__tmp220|)
(declare-fun |_JML__tmp224| () Bool)
(define-fun |_$CPRE__38_3_1| () Bool true)
(declare-fun |_JML__tmp225| () Bool)
(define-fun |_JML__tmp226| () Bool (< |_JML__tmp208| 0))
(define-fun BL_557_afterIf_151__A1 () Bool (and (<= 0 |_JML__tmp214|) (<= |_JML__tmp214| 65535)))
(define-fun BL_557_afterIf_151__A2 () Bool (= |_JML__tmp215| true))
(define-fun BL_557_afterIf_151__A3 () Bool (and (<= 0 (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|))) (<= (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|)) 2147483647)))
(define-fun BL_557_afterIf_151__A4 () Bool (= |ASSERT_307_3357| (or (not (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL)) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL))))
(define-fun BL_557_afterIf_151__A5 () Bool (= |_JML__tmp216| |_JML__tmp218|))
(define-fun BL_557_afterIf_151__A6 () Bool (= |_JML__tmp219| true))
(define-fun BL_557_afterIf_151__A7 () Bool (and (<= 0 (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|))) (<= (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|)) 2147483647)))
(define-fun BL_557_afterIf_151__A8 () Bool (= |ASSERT_313_3516| (or (not (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL)) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL))))
(define-fun BL_557_afterIf_151__A9 () Bool (= |_JML__tmp220| |_JML__tmp223|))
(define-fun BL_557_afterIf_151__A10 () Bool (= |_JML__tmp224| true))
(assert (= BL_557_afterIf_151 (=> BL_557_afterIf_151__A1 (=> BL_557_afterIf_151__A2 (=> BL_557_afterIf_151__A3 (=> BL_557_afterIf_151__A4 (and |ASSERT_307_3357| (=> |ASSERT_307_3357| (=> BL_557_afterIf_151__A5 (=> BL_557_afterIf_151__A6 (=> BL_557_afterIf_151__A7 (=> BL_557_afterIf_151__A8 (and |ASSERT_313_3516| (=> |ASSERT_313_3516| (=> BL_557_afterIf_151__A9 (=> BL_557_afterIf_151__A10 (and BL_13335_then_155 BL_13335_else_156)))))))))))))))))
(define-fun BL_13335_then_155__A1 () Bool |_JML__tmp226|)
(define-fun BL_13335_then_155__A2 () Bool (= |`conditionalResult_227_13335_0___45| true))
(define-fun BL_13335_then_155__A3 () Bool (= |`conditionalResult_227_13335_13344___46| |`conditionalResult_227_13335_0___45|))
(define-fun BL_13335_then_155__A4 () Bool (= |BL_13335_afterIf_154_source| 155))
(assert (= BL_13335_then_155 (=> BL_13335_then_155__A1 (=> BL_13335_then_155__A2 (=> BL_13335_then_155__A3 (=> BL_13335_then_155__A4 BL_13335_afterIf_154))))))
(define-fun |_JML__tmp228| () REF |_JML__tmp209|)
(declare-fun |_JML__tmp229| () Int)
(declare-fun |_JML__tmp230| () Bool)
(define-fun |_$CPRE__39_1_1| () Bool true)
(define-fun |_$CPRE__39_1| () Bool true)
(define-fun |_$CPRE__39| () Bool true)
(define-fun BL_13335_else_156__A1 () Bool (not |_JML__tmp226|))
(define-fun BL_13335_else_156__A2 () Bool (and (<= (- 2147483648) |_JML__tmp229|) (<= |_JML__tmp229| 2147483647)))
(define-fun BL_13335_else_156__A3 () Bool (= |_JML__tmp230| true))
(define-fun BL_13335_else_156__A4 () Bool (= |ASSERT_321_0| |_$CPRE__39|))
(assert (= BL_13335_else_156 (=> BL_13335_else_156__A1 (=> BL_13335_else_156__A2 (=> BL_13335_else_156__A3 (=> BL_13335_else_156__A4 (and |ASSERT_321_0| (=> |ASSERT_321_0| BL_13353_AfterLabel_157))))))))
(define-fun |_JML__tmp232| () Bool (= |`exception_233_233___13| NULL))
(assert (= BL_13353_AfterLabel_157 (and BL_13353_then_159 BL_13353_else_160)))
(define-fun BL_13353_then_159__A1 () Bool |_JML__tmp232|)
(define-fun BL_13353_then_159__A2 () Bool (= |BL_13353_afterIf_158_source| 159))
(assert (= BL_13353_then_159 (=> BL_13353_then_159__A1 (=> BL_13353_then_159__A2 BL_13353_afterIf_158))))
(define-fun BL_13353_else_160__A1 () Bool (not |_JML__tmp232|))
(define-fun BL_13353_else_160__A2 () Bool (= |BL_13353_afterIf_158_source| 160))
(assert (= BL_13353_else_160 (=> BL_13353_else_160__A1 (=> BL_13353_else_160__A2 BL_13353_afterIf_158))))
(define-fun |_JML__tmp233| () Bool (>= |_JML__tmp229| 0))
(define-fun |_JML__tmp234| () Int (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp228|)))
(define-fun |_JML__tmp235| () Int |_JML__tmp234|)
(define-fun |_JML__tmp236| () Bool (= |_JML__tmp229| |_JML__tmp235|))
(define-fun |_JML__tmp237| () Bool (>= |_JML__tmp208| |_JML__tmp229|))
(define-fun BL_13353_afterIf_158__A1 () Bool (= |_JML__tmp229| (java_lang_String_length$_12891 |_JML__tmp228|)))
(define-fun BL_13353_afterIf_158__A2 () Bool |_JML__tmp233|)
(define-fun BL_13353_afterIf_158__A3 () Bool (and (<= 0 (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp228|))) (<= (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp228|)) 2147483647)))
(define-fun BL_13353_afterIf_158__A4 () Bool (= |ASSERT_325_3235| (or (not (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp228|) NULL)) (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp228|) NULL))))
(define-fun BL_13353_afterIf_158__A5 () Bool |_JML__tmp236|)
(define-fun BL_13353_afterIf_158__A6 () Bool (= |`conditionalResult_227_13335_13344___46| |_JML__tmp237|))
(define-fun BL_13353_afterIf_158__A7 () Bool (= |BL_13335_afterIf_154_source| 158))
(assert (= BL_13353_afterIf_158 (=> BL_13353_afterIf_158__A1 (=> BL_13353_afterIf_158__A2 (=> BL_13353_afterIf_158__A3 (=> BL_13353_afterIf_158__A4 (and |ASSERT_325_3235| (=> |ASSERT_325_3235| (=> BL_13353_afterIf_158__A5 (=> BL_13353_afterIf_158__A6 (=> BL_13353_afterIf_158__A7 BL_13335_afterIf_154)))))))))))
(define-fun |_$CPRE__38_3_2| () Bool |`conditionalResult_227_13335_13344___46|)
(define-fun |_$CPRE__38_3| () Bool |_JML__tmp225|)
(define-fun |_$CPRE__38| () Bool (or (or |_JML__tmp216| |_JML__tmp220|) |_JML__tmp225|))
(define-fun BL_13335_afterIf_154__A1 () Bool (= |_JML__tmp225| |`conditionalResult_227_13335_13344___46|))
(define-fun BL_13335_afterIf_154__A2 () Bool (= |ASSERT_331_3346| |_$CPRE__38|))
(assert (= BL_13335_afterIf_154 (=> BL_13335_afterIf_154__A1 (=> BL_13335_afterIf_154__A2 (and |ASSERT_331_3346| (=> |ASSERT_331_3346| BL_557_AfterLabel_161))))))
(assert (= BL_557_AfterLabel_161 (and BL_3297_then_163 BL_3297_else_164)))
(define-fun BL_3297_then_163__A1 () Bool |_JML__tmp216|)
(assert (= BL_3297_then_163 (=> BL_3297_then_163__A1 (and BL_3297_then_166 BL_3297_else_167))))
(define-fun BL_3297_then_166__A1 () Bool |_JML__tmp216|)
(define-fun BL_3297_then_166__A2 () Bool (= |BL_3297_afterIf_165_source| 166))
(assert (= BL_3297_then_166 (=> BL_3297_then_166__A1 (=> BL_3297_then_166__A2 BL_3297_afterIf_165))))
(define-fun BL_3297_else_167__A1 () Bool (not |_JML__tmp216|))
(define-fun BL_3297_else_167__A2 () Bool (= |BL_3297_afterIf_165_source| 167))
(assert (= BL_3297_else_167 (=> BL_3297_else_167__A1 (=> BL_3297_else_167__A2 BL_3297_afterIf_165))))
(define-fun BL_3297_afterIf_165__A1 () Bool (= |BL_3297_afterIf_162_source| 165))
(assert (= BL_3297_afterIf_165 (=> BL_3297_afterIf_165__A1 BL_3297_afterIf_162)))
(define-fun BL_3297_else_164__A1 () Bool (not |_JML__tmp216|))
(define-fun BL_3297_else_164__A2 () Bool (= |BL_3297_afterIf_162_source| 164))
(assert (= BL_3297_else_164 (=> BL_3297_else_164__A1 (=> BL_3297_else_164__A2 BL_3297_afterIf_162))))
(assert (= BL_3297_afterIf_162 (and BL_3449_then_169 BL_3449_else_170)))
(define-fun BL_3449_then_169__A1 () Bool |_JML__tmp220|)
(assert (= BL_3449_then_169 (=> BL_3449_then_169__A1 (and BL_3449_then_172 BL_3449_else_173))))
(define-fun BL_3449_then_172__A1 () Bool |_JML__tmp220|)
(define-fun BL_3449_then_172__A2 () Bool (= |BL_3449_afterIf_171_source| 172))
(assert (= BL_3449_then_172 (=> BL_3449_then_172__A1 (=> BL_3449_then_172__A2 BL_3449_afterIf_171))))
(define-fun BL_3449_else_173__A1 () Bool (not |_JML__tmp220|))
(define-fun BL_3449_else_173__A2 () Bool (= |BL_3449_afterIf_171_source| 173))
(assert (= BL_3449_else_173 (=> BL_3449_else_173__A1 (=> BL_3449_else_173__A2 BL_3449_afterIf_171))))
(define-fun BL_3449_afterIf_171__A1 () Bool (= |BL_3449_afterIf_168_source| 171))
(assert (= BL_3449_afterIf_171 (=> BL_3449_afterIf_171__A1 BL_3449_afterIf_168)))
(define-fun BL_3449_else_170__A1 () Bool (not |_JML__tmp220|))
(define-fun BL_3449_else_170__A2 () Bool (= |BL_3449_afterIf_168_source| 170))
(assert (= BL_3449_else_170 (=> BL_3449_else_170__A1 (=> BL_3449_else_170__A2 BL_3449_afterIf_168))))
(assert (= BL_3449_afterIf_168 (and BL_13285_then_175 BL_13285_else_176)))
(define-fun BL_13285_then_175__A1 () Bool |_JML__tmp225|)
(assert (= BL_13285_then_175 (=> BL_13285_then_175__A1 (and BL_13285_then_178 BL_13285_else_179))))
(define-fun BL_13285_then_178__A1 () Bool |_JML__tmp225|)
(define-fun BL_13285_then_178__A2 () Bool (= |BL_13285_afterIf_177_source| 178))
(assert (= BL_13285_then_178 (=> BL_13285_then_178__A1 (=> BL_13285_then_178__A2 BL_13285_afterIf_177))))
(define-fun BL_13285_else_179__A1 () Bool (not |_JML__tmp225|))
(define-fun BL_13285_else_179__A2 () Bool (= |BL_13285_afterIf_177_source| 179))
(assert (= BL_13285_else_179 (=> BL_13285_else_179__A1 (=> BL_13285_else_179__A2 BL_13285_afterIf_177))))
(define-fun BL_13285_afterIf_177__A1 () Bool (= |BL_13285_afterIf_174_source| 177))
(assert (= BL_13285_afterIf_177 (=> BL_13285_afterIf_177__A1 BL_13285_afterIf_174)))
(define-fun BL_13285_else_176__A1 () Bool (not |_JML__tmp225|))
(define-fun BL_13285_else_176__A2 () Bool (= |BL_13285_afterIf_174_source| 176))
(assert (= BL_13285_else_176 (=> BL_13285_else_176__A1 (=> BL_13285_else_176__A2 BL_13285_afterIf_174))))
(define-fun BL_13285_afterIf_174__A1 () Bool (or (not (distinct (select |java.lang.Object___owner_1586_0___5| |_JML__tmp209|) NULL)) (and (and (distinct (select |java.lang.Object___owner_1586_0___5| |_JML__tmp209|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object___owner_1586_0___5| |_JML__tmp209|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object___owner_1586_0___5| |_JML__tmp209|)) JMLT_java_lang_Object))))
(define-fun BL_13285_afterIf_174__A2 () Bool (and (distinct (select |java.lang.Object_theString_8079_0___8| |_JML__tmp209|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |_JML__tmp209|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |_JML__tmp209|)) T_java_lang_String)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |_JML__tmp209|)) JMLT_java_lang_String))))
(define-fun BL_13285_afterIf_174__A3 () Bool (and (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL) (and (jmlSubType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|)) (_makeJMLArrayType JMLT_char)) (= (__arrayElemType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|))) JMLT_char))))
(define-fun BL_13285_afterIf_174__A4 () Bool (and (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (and (and (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (javaSubType (javaTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) T_java_util_Comparator)) (jmlSubType (jmlTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) (_JMLT_1 T_java_util_Comparator JMLT_java_lang_String)))))
(assert (= BL_13285_afterIf_174 (=> BL_13285_afterIf_174__A1 (=> BL_13285_afterIf_174__A2 (=> BL_13285_afterIf_174__A3 (=> BL_13285_afterIf_174__A4 (and BL_557_then_181 BL_557_else_182)))))))
(define-fun BL_557_then_181__A1 () Bool (distinct |_JML__tmp209| NULL))
(define-fun BL_557_then_181__A2 () Bool (or (= (select |java.lang.Object___owner_1586_0___5| |_JML__tmp209|) NULL) (and (and (distinct (select |java.lang.Object___owner_1586_0___5| |_JML__tmp209|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object___owner_1586_0___5| |_JML__tmp209|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object___owner_1586_0___5| |_JML__tmp209|)) JMLT_java_lang_Object))))
(define-fun BL_557_then_181__A3 () Bool (distinct (select |java.lang.Object_theString_8079_0___8| |_JML__tmp209|) NULL))
(define-fun BL_557_then_181__A4 () Bool (or (= (select |java.lang.Object_theString_8079_0___8| |_JML__tmp209|) NULL) (and (and (distinct (select |java.lang.Object_theString_8079_0___8| |_JML__tmp209|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8079_0___8| |_JML__tmp209|)) T_java_lang_String)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8079_0___8| |_JML__tmp209|)) JMLT_java_lang_String))))
(define-fun BL_557_then_181__A5 () Bool (= |BL_557_afterIf_180_source| 181))
(assert (= BL_557_then_181 (=> BL_557_then_181__A1 (=> BL_557_then_181__A2 (=> BL_557_then_181__A3 (=> BL_557_then_181__A4 (=> BL_557_then_181__A5 BL_557_afterIf_180)))))))
(define-fun BL_557_else_182__A1 () Bool (not (distinct |_JML__tmp209| NULL)))
(define-fun BL_557_else_182__A2 () Bool (= |BL_557_afterIf_180_source| 182))
(assert (= BL_557_else_182 (=> BL_557_else_182__A1 (=> BL_557_else_182__A2 BL_557_afterIf_180))))
(assert (= BL_557_afterIf_180 (and BL_557_then_184 BL_557_else_185)))
(define-fun |_JML__tmp239| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL))
(define-fun BL_557_then_184__A1 () Bool (distinct |_JML__tmp209| NULL))
(define-fun BL_557_then_184__A2 () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL))
(define-fun BL_557_then_184__A3 () Bool (or (= (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL) (and (jmlSubType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|)) (_makeJMLArrayType JMLT_char)) (= (__arrayElemType (jmlTypeOf (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|))) JMLT_char))))
(define-fun BL_557_then_184__A4 () Bool |_JML__tmp239|)
(define-fun BL_557_then_184__A5 () Bool (= |BL_557_afterIf_183_source| 184))
(assert (= BL_557_then_184 (=> BL_557_then_184__A1 (=> BL_557_then_184__A2 (=> BL_557_then_184__A3 (=> BL_557_then_184__A4 (=> BL_557_then_184__A5 BL_557_afterIf_183)))))))
(define-fun BL_557_else_185__A1 () Bool (not (distinct |_JML__tmp209| NULL)))
(define-fun BL_557_else_185__A2 () Bool (= |BL_557_afterIf_183_source| 185))
(assert (= BL_557_else_185 (=> BL_557_else_185__A1 (=> BL_557_else_185__A2 BL_557_afterIf_183))))
(assert (= BL_557_afterIf_183 (and BL_557_then_187 BL_557_else_188)))
(define-fun BL_557_then_187__A1 () Bool (distinct |_JML__tmp209| NULL))
(define-fun BL_557_then_187__A2 () Bool (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL))
(define-fun BL_557_then_187__A3 () Bool (or (= |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (and (and (distinct |java.lang.String_CASE_INSENSITIVE_ORDER| NULL) (javaSubType (javaTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) T_java_util_Comparator)) (jmlSubType (jmlTypeOf |java.lang.String_CASE_INSENSITIVE_ORDER|) (_JMLT_1 T_java_util_Comparator JMLT_java_lang_String)))))
(define-fun BL_557_then_187__A4 () Bool (= |BL_557_afterIf_186_source| 187))
(assert (= BL_557_then_187 (=> BL_557_then_187__A1 (=> BL_557_then_187__A2 (=> BL_557_then_187__A3 (=> BL_557_then_187__A4 BL_557_afterIf_186))))))
(define-fun BL_557_else_188__A1 () Bool (not (distinct |_JML__tmp209| NULL)))
(define-fun BL_557_else_188__A2 () Bool (= |BL_557_afterIf_186_source| 188))
(assert (= BL_557_else_188 (=> BL_557_else_188__A1 (=> BL_557_else_188__A2 BL_557_afterIf_186))))
(define-fun |_JML__tmp240| () Bool (= |`exception_233_233___13| NULL))
(assert (= BL_557_afterIf_186 (and BL_557_then_190 BL_557_else_191)))
(define-fun BL_557_then_190__A1 () Bool |_JML__tmp240|)
(define-fun BL_557_then_190__A2 () Bool (= |BL_557_afterIf_189_source| 190))
(assert (= BL_557_then_190 (=> BL_557_then_190__A1 (=> BL_557_then_190__A2 BL_557_afterIf_189))))
(define-fun BL_557_else_191__A1 () Bool (not |_JML__tmp240|))
(define-fun BL_557_else_191__A2 () Bool (= |BL_557_afterIf_189_source| 191))
(assert (= BL_557_else_191 (=> BL_557_else_191__A1 (=> BL_557_else_191__A2 BL_557_afterIf_189))))
(define-fun |_JML__tmp242| () Bool (= |`exceptionCall_557_557___47| NULL))
(assert (= BL_557_afterIf_189 (and BL_547_then_193 BL_547_else_194)))
(define-fun BL_547_then_193__A1 () Bool |_JML__tmp242|)
(define-fun BL_547_then_193__A2 () Bool (= |_JML__tmp214| (java_lang_String_charAt$_H2_13452 |_JML__tmp209| |_JML__tmp208|)))
(assert (= BL_547_then_193 (=> BL_547_then_193__A1 (=> BL_547_then_193__A2 (and BL_3298_then_196 BL_3298_else_197)))))
(define-fun |_JML__tmp241| () Bool (= |_JML__tmp214| (select (select arrays_char_0 (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|)) |_JML__tmp208|)))
(define-fun BL_3298_then_196__A1 () Bool |_JML__tmp216|)
(define-fun BL_3298_then_196__A2 () Bool (= |ASSERT_346_3408| (or (not (and |_JML__tmp216| (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL))) (<= 0 |_JML__tmp208|))))
(define-fun BL_3298_then_196__A3 () Bool (= |ASSERT_347_3408| (or (not (and |_JML__tmp216| (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|) NULL))) (> (select |Array_length| (select |java.lang.CharSequence_charArray_1045_0_1380892664| |_JML__tmp209|)) |_JML__tmp208|))))
(define-fun BL_3298_then_196__A4 () Bool |_JML__tmp241|)
(define-fun BL_3298_then_196__A5 () Bool (= |BL_3298_afterIf_195_source| 196))
(assert (= BL_3298_then_196 (=> BL_3298_then_196__A1 (=> BL_3298_then_196__A2 (and |ASSERT_346_3408| (=> |ASSERT_346_3408| (=> BL_3298_then_196__A3 (and |ASSERT_347_3408| (=> |ASSERT_347_3408| (=> BL_3298_then_196__A4 (=> BL_3298_then_196__A5 BL_3298_afterIf_195)))))))))))
(define-fun BL_3298_else_197__A1 () Bool (not |_JML__tmp216|))
(define-fun BL_3298_else_197__A2 () Bool (= |BL_3298_afterIf_195_source| 197))
(assert (= BL_3298_else_197 (=> BL_3298_else_197__A1 (=> BL_3298_else_197__A2 BL_3298_afterIf_195))))
(assert (= BL_3298_afterIf_195 (and BL_3450_then_199 BL_3450_else_200)))
(define-fun BL_3450_then_199__A1 () Bool |_JML__tmp220|)
(define-fun BL_3450_then_199__A2 () Bool false)
(define-fun BL_3450_then_199__A3 () Bool (= |BL_3450_afterIf_198_source| 199))
(assert (= BL_3450_then_199 (=> BL_3450_then_199__A1 (=> BL_3450_then_199__A2 (=> BL_3450_then_199__A3 BL_3450_afterIf_198)))))
(define-fun BL_3450_else_200__A1 () Bool (not |_JML__tmp220|))
(define-fun BL_3450_else_200__A2 () Bool (= |BL_3450_afterIf_198_source| 200))
(assert (= BL_3450_else_200 (=> BL_3450_else_200__A1 (=> BL_3450_else_200__A2 BL_3450_afterIf_198))))
(assert (= BL_3450_afterIf_198 (and BL_13286_then_202 BL_13286_else_203)))
(define-fun BL_13286_then_202__A1 () Bool |_JML__tmp225|)
(define-fun BL_13286_then_202__A2 () Bool false)
(define-fun BL_13286_then_202__A3 () Bool (= |BL_13286_afterIf_201_source| 202))
(assert (= BL_13286_then_202 (=> BL_13286_then_202__A1 (=> BL_13286_then_202__A2 (=> BL_13286_then_202__A3 BL_13286_afterIf_201)))))
(define-fun BL_13286_else_203__A1 () Bool (not |_JML__tmp225|))
(define-fun BL_13286_else_203__A2 () Bool (= |BL_13286_afterIf_201_source| 203))
(assert (= BL_13286_else_203 (=> BL_13286_else_203__A1 (=> BL_13286_else_203__A2 BL_13286_afterIf_201))))
(assert (= BL_13286_afterIf_201 BL_547_afterIf_192))
(define-fun BL_547_else_194__A1 () Bool (not |_JML__tmp242|))
(define-fun BL_547_else_194__A2 () Bool (= |`exception_233_557___48| |`exceptionCall_557_557___47|))
(define-fun BL_547_else_194__A3 () Bool (= |`terminationPosition_233_557___49| (- 557)))
(define-fun BL_547_else_194__A4 () Bool (and (distinct |`exception_233_557___48| NULL) (javaSubType (javaTypeOf |`exception_233_557___48|) T_java_lang_RuntimeException)))
(assert (= BL_547_else_194 (=> BL_547_else_194__A1 (=> BL_547_else_194__A2 (=> BL_547_else_194__A3 (=> BL_547_else_194__A4 (and BL_3298_then_205 BL_3298_else_206)))))))
(define-fun BL_3298_then_205__A1 () Bool |_JML__tmp216|)
(assert (= BL_3298_then_205 (=> BL_3298_then_205__A1 (and BL_3297_then_208 BL_3297_else_209))))
(define-fun BL_3297_then_208__A1 () Bool true)
(define-fun BL_3297_then_208__A2 () Bool false)
(define-fun BL_3297_then_208__A3 () Bool (= |BL_3297_afterIf_207_source| 208))
(assert (= BL_3297_then_208 (=> BL_3297_then_208__A1 (=> BL_3297_then_208__A2 (=> BL_3297_then_208__A3 BL_3297_afterIf_207)))))
(define-fun BL_3297_else_209__A1 () Bool (not true))
(define-fun BL_3297_else_209__A2 () Bool (= |BL_3297_afterIf_207_source| 209))
(assert (= BL_3297_else_209 (=> BL_3297_else_209__A1 (=> BL_3297_else_209__A2 BL_3297_afterIf_207))))
(define-fun BL_3297_afterIf_207__A1 () Bool (or (not (and (distinct |`exception_233_557___48| NULL) (javaSubType (javaTypeOf |`exception_233_557___48|) T_java_lang_Exception))) false))
(define-fun BL_3297_afterIf_207__A2 () Bool (= |BL_3298_afterIf_204_source| 207))
(assert (= BL_3297_afterIf_207 (=> BL_3297_afterIf_207__A1 (=> BL_3297_afterIf_207__A2 BL_3298_afterIf_204))))
(define-fun BL_3298_else_206__A1 () Bool (not |_JML__tmp216|))
(define-fun BL_3298_else_206__A2 () Bool (= |BL_3298_afterIf_204_source| 206))
(assert (= BL_3298_else_206 (=> BL_3298_else_206__A1 (=> BL_3298_else_206__A2 BL_3298_afterIf_204))))
(assert (= BL_3298_afterIf_204 (and BL_3450_then_211 BL_3450_else_212)))
(define-fun BL_3450_then_211__A1 () Bool |_JML__tmp220|)
(define-fun BL_3450_then_211__A2 () Bool (or (not (and (distinct |`exception_233_557___48| NULL) (javaSubType (javaTypeOf |`exception_233_557___48|) T_java_lang_Exception))) (or false (and (distinct |`exception_233_557___48| NULL) (javaSubType (javaTypeOf |`exception_233_557___48|) T_java_lang_IndexOutOfBoundsException)))))
(define-fun BL_3450_then_211__A3 () Bool (= |BL_3450_afterIf_210_source| 211))
(assert (= BL_3450_then_211 (=> BL_3450_then_211__A1 (=> BL_3450_then_211__A2 (=> BL_3450_then_211__A3 BL_3450_afterIf_210)))))
(define-fun BL_3450_else_212__A1 () Bool (not |_JML__tmp220|))
(define-fun BL_3450_else_212__A2 () Bool (= |BL_3450_afterIf_210_source| 212))
(assert (= BL_3450_else_212 (=> BL_3450_else_212__A1 (=> BL_3450_else_212__A2 BL_3450_afterIf_210))))
(assert (= BL_3450_afterIf_210 (and BL_13286_then_214 BL_13286_else_215)))
(define-fun BL_13286_then_214__A1 () Bool |_JML__tmp225|)
(define-fun BL_13286_then_214__A2 () Bool (or (not (and (distinct |`exception_233_557___48| NULL) (javaSubType (javaTypeOf |`exception_233_557___48|) T_java_lang_Exception))) (or false (and (distinct |`exception_233_557___48| NULL) (javaSubType (javaTypeOf |`exception_233_557___48|) T_java_lang_StringIndexOutOfBoundsException)))))
(define-fun BL_13286_then_214__A3 () Bool (= |BL_13286_afterIf_213_source| 214))
(assert (= BL_13286_then_214 (=> BL_13286_then_214__A1 (=> BL_13286_then_214__A2 (=> BL_13286_then_214__A3 BL_13286_afterIf_213)))))
(define-fun BL_13286_else_215__A1 () Bool (not |_JML__tmp225|))
(define-fun BL_13286_else_215__A2 () Bool (= |BL_13286_afterIf_213_source| 215))
(assert (= BL_13286_else_215 (=> BL_13286_else_215__A1 (=> BL_13286_else_215__A2 BL_13286_afterIf_213))))
(assert (= BL_13286_afterIf_213 BL_557_throw_216))
(define-fun BL_557_throw_216__A1 () Bool (= |`exception_233_634___58| |`exception_233_557___48|))
(define-fun BL_557_throw_216__A2 () Bool (= |`terminationPosition_233_634___57| |`terminationPosition_233_557___49|))
(define-fun BL_557_throw_216__A3 () Bool (= |`result_233_634___56| |`result_233_233___17|))
(define-fun BL_557_throw_216__A4 () Bool (= |BL_233tryTarget_38_source| 216))
(assert (= BL_557_throw_216 (=> BL_557_throw_216__A1 (=> BL_557_throw_216__A2 (=> BL_557_throw_216__A3 (=> BL_557_throw_216__A4 BL_233tryTarget_38))))))
(define-fun |_JML__tmp243| () Bool (distinct |_JML__tmp178| |_JML__tmp214|))
(define-fun BL_547_afterIf_192__A1 () Bool (= |`conditionalResult_170_527_544___50| |_JML__tmp243|))
(define-fun BL_547_afterIf_192__A2 () Bool (= |BL_527_afterIf_64_source| 192))
(assert (= BL_547_afterIf_192 (=> BL_547_afterIf_192__A1 (=> BL_547_afterIf_192__A2 BL_527_afterIf_64))))
(define-fun |_JML__tmp244| () Bool |`conditionalResult_170_527_544___50|)
(assert (= BL_527_afterIf_64 (and BL_518_then_218 BL_518_else_219)))
(define-fun BL_518_then_218__A1 () Bool |_JML__tmp244|)
(define-fun BL_518_then_218__A2 () Bool (= |`result_233_578___51| false))
(define-fun BL_518_then_218__A3 () Bool (= |`terminationPosition_233_578___52| 578))
(define-fun BL_518_then_218__A4 () Bool (= |`exception_233_578___53| NULL))
(assert (= BL_518_then_218 (=> BL_518_then_218__A1 (=> BL_518_then_218__A2 (=> BL_518_then_218__A3 (=> BL_518_then_218__A4 BL_578_return_220))))))
(define-fun BL_578_return_220__A1 () Bool (= |`exception_233_634___58| |`exception_233_578___53|))
(define-fun BL_578_return_220__A2 () Bool (= |`terminationPosition_233_634___57| |`terminationPosition_233_578___52|))
(define-fun BL_578_return_220__A3 () Bool (= |`result_233_634___56| |`result_233_578___51|))
(define-fun BL_578_return_220__A4 () Bool (= |BL_233tryTarget_38_source| 220))
(assert (= BL_578_return_220 (=> BL_578_return_220__A1 (=> BL_578_return_220__A2 (=> BL_578_return_220__A3 (=> BL_578_return_220__A4 BL_233tryTarget_38))))))
(define-fun BL_518_else_219__A1 () Bool (not |_JML__tmp244|))
(assert (= BL_518_else_219 (=> BL_518_else_219__A1 BL_518_afterIf_217)))
(define-fun |_JML__tmp245| () Int |i_283_604___31|)
(define-fun |_JML__tmp246| () Int |i_283_604___31|)
(define-fun |_JML__tmp247| () Bool (or (not (and (< 0 |_JML__tmp246|) (< 1 0))) (<= |_JML__tmp246| (+ 2147483647 1))))
(define-fun |_JML__tmp248| () Bool (or (not (and (< |_JML__tmp246| 0) (< 0 1))) (<= (+ (- 2147483648) 1) |_JML__tmp246|)))
(define-fun |_JML__tmp249| () Int (ite (< 2147483647 (- |_JML__tmp246| 1)) (+ (+ (- |_JML__tmp246| 1) (- 2147483648)) (- 2147483648)) (ite (< (- |_JML__tmp246| 1) (- 2147483648)) (- (- (- |_JML__tmp246| 1) (- 2147483648)) (- 2147483648)) (- |_JML__tmp246| 1))))
(define-fun BL_518_afterIf_217__A1 () Bool (and (<= (- 2147483648) |_JML__tmp246|) (<= |_JML__tmp246| 2147483647)))
(define-fun BL_518_afterIf_217__A2 () Bool (or (not (and (< 0 |_JML__tmp246|) (< 1 0))) (<= |_JML__tmp246| (+ 2147483647 1))))
(define-fun BL_518_afterIf_217__A3 () Bool (or (not (and (< |_JML__tmp246| 0) (< 0 1))) (<= (+ (- 2147483648) 1) |_JML__tmp246|)))
(define-fun BL_518_afterIf_217__A4 () Bool (= |i_283_604___54| |_JML__tmp249|))
(assert (= BL_518_afterIf_217 (=> BL_518_afterIf_217__A1 (=> BL_518_afterIf_217__A2 (=> BL_518_afterIf_217__A3 (=> BL_518_afterIf_217__A4 BL_606_AfterLabel_221))))))
(assert (= BL_606_AfterLabel_221 BL_458_AfterLabel_55))
(declare-fun |_JML__tmp259| () Bool)
(assert (= |_JML__tmp259| (forall ((|k| Int) ) (=> (and (< |i_283_604___54| |k|) (< |k| (java_lang_String_length$_12891 |pat_250_250___15|))) (= (java_lang_String_charAt$_H2_13452 |pat_250_250___15| |k|) (java_lang_String_charAt$_H2_13452 |txt_262_262___16| (+ (- (java_lang_String_length$_12891 |txt_262_262___16|) (java_lang_String_length$_12891 |pat_250_250___15|)) |k|)))))))
(define-fun BL_458_AfterLabel_55__A1 () Bool (= |index_444_115_444_444___55| (+ |index_444_115_444_458___32| 1)))
(define-fun BL_458_AfterLabel_55__A2 () Bool (= |ASSERT_371_331| |_JML__tmp259|))
(assert (= BL_458_AfterLabel_55 (=> BL_458_AfterLabel_55__A1 (=> BL_458_AfterLabel_55__A2 (and |ASSERT_371_331| (=> |ASSERT_371_331| BL_444_LoopContinue_49))))))
(assert (= BL_444_LoopContinue_49 true))
(define-fun BL_444_LoopEnd_50__A1 () Bool (not true))
(define-fun BL_444_LoopEnd_50__A2 () Bool (= |index_444_115_444_458___32| |index_444_115_444_444___29|))
(define-fun BL_444_LoopEnd_50__A3 () Bool (= |i_283_604___31| |i_283_283___28|))
(define-fun BL_444_LoopEnd_50__A4 () Bool (= |BL_444_LoopAfter_51_source| 50))
(assert (= BL_444_LoopEnd_50 (=> BL_444_LoopEnd_50__A1 (=> BL_444_LoopEnd_50__A2 (=> BL_444_LoopEnd_50__A3 (=> BL_444_LoopEnd_50__A4 BL_444_LoopAfter_51))))))
(define-fun BL_444_LoopAfter_51__A1 () Bool (= |`result_233_634___56| true))
(define-fun BL_444_LoopAfter_51__A2 () Bool (= |`terminationPosition_233_634___57| 634))
(define-fun BL_444_LoopAfter_51__A3 () Bool (= |`exception_233_634___58| NULL))
(assert (= BL_444_LoopAfter_51 (=> BL_444_LoopAfter_51__A1 (=> BL_444_LoopAfter_51__A2 (=> BL_444_LoopAfter_51__A3 BL_634_return_222)))))
(define-fun BL_634_return_222__A1 () Bool (= |j_469_469___35| |j_469_469___19|))
(define-fun BL_634_return_222__A2 () Bool (= |BL_233tryTarget_38_source| 222))
(assert (= BL_634_return_222 (=> BL_634_return_222__A1 (=> BL_634_return_222__A2 BL_233tryTarget_38))))
(assert (= BL_233tryTarget_38 (and BL_233noException_40 BL_233nocatch_41)))
(define-fun BL_233noException_40__A1 () Bool (= |`exception_233_634___58| NULL))
(define-fun BL_233noException_40__A2 () Bool (= |BL_233_finally_39_source| 40))
(assert (= BL_233noException_40 (=> BL_233noException_40__A1 (=> BL_233noException_40__A2 BL_233_finally_39))))
(define-fun BL_233nocatch_41__A1 () Bool (distinct |`exception_233_634___58| NULL))
(define-fun BL_233nocatch_41__A2 () Bool (= |BL_233_finally_39_source| 41))
(assert (= BL_233nocatch_41 (=> BL_233nocatch_41__A1 (=> BL_233nocatch_41__A2 BL_233_finally_39))))
(define-fun |_JML__tmp276| () Bool (= |`exception_233_634___58| NULL))
(define-fun BL_233_finally_39__A1 () Bool (= |__JMLsavedException_233_233_233___59| |`exception_233_634___58|))
(define-fun BL_233_finally_39__A2 () Bool (= |__JMLsavedTermination_233_233_233___60| |`terminationPosition_233_634___57|))
(assert (= BL_233_finally_39 (=> BL_233_finally_39__A1 (=> BL_233_finally_39__A2 (and BL_233_then_224 BL_233_else_225)))))
(define-fun BL_233_then_224__A1 () Bool |_JML__tmp276|)
(assert (= BL_233_then_224 (=> BL_233_then_224__A1 (and BL_250_then_227 BL_250_else_228))))
(define-fun |_JML__tmp260| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |pat_250_250___15|) NULL))
(define-fun BL_250_then_227__A1 () Bool (distinct |pat_250_250___15| NULL))
(define-fun BL_250_then_227__A2 () Bool (= |ASSERT_372_1093| |_JML__tmp260|))
(define-fun BL_250_then_227__A3 () Bool (= |BL_250_afterIf_226_source| 227))
(assert (= BL_250_then_227 (=> BL_250_then_227__A1 (=> BL_250_then_227__A2 (and |ASSERT_372_1093| (=> |ASSERT_372_1093| (=> BL_250_then_227__A3 BL_250_afterIf_226)))))))
(define-fun BL_250_else_228__A1 () Bool (not (distinct |pat_250_250___15| NULL)))
(define-fun BL_250_else_228__A2 () Bool (= |BL_250_afterIf_226_source| 228))
(assert (= BL_250_else_228 (=> BL_250_else_228__A1 (=> BL_250_else_228__A2 BL_250_afterIf_226))))
(assert (= BL_250_afterIf_226 (and BL_262_then_230 BL_262_else_231)))
(define-fun |_JML__tmp261| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |txt_262_262___16|) NULL))
(define-fun BL_262_then_230__A1 () Bool (distinct |txt_262_262___16| NULL))
(define-fun BL_262_then_230__A2 () Bool (= |ASSERT_373_1093| |_JML__tmp261|))
(define-fun BL_262_then_230__A3 () Bool (= |BL_262_afterIf_229_source| 230))
(assert (= BL_262_then_230 (=> BL_262_then_230__A1 (=> BL_262_then_230__A2 (and |ASSERT_373_1093| (=> |ASSERT_373_1093| (=> BL_262_then_230__A3 BL_262_afterIf_229)))))))
(define-fun BL_262_else_231__A1 () Bool (not (distinct |txt_262_262___16| NULL)))
(define-fun BL_262_else_231__A2 () Bool (= |BL_262_afterIf_229_source| 231))
(assert (= BL_262_else_231 (=> BL_262_else_231__A1 (=> BL_262_else_231__A2 BL_262_afterIf_229))))
(assert (= BL_262_afterIf_229 (and BL_78_then_233 BL_78_else_234)))
(define-fun |_JML__tmp264| () Bool (= |`result_233_634___56| true))
(declare-fun |_JML__tmp274| () Bool)
(assert (= |_JML__tmp274| (exists ((|i| Int) ) (and (and (<= 0 |i|) (< |i| (java_lang_String_length$_12891 |pat_250_250___15|))) (= (java_lang_String_charAt$_H2_13452 |pat_250_250___15| |i|) (java_lang_String_charAt$_H2_13452 |txt_262_262___16| (+ (- (java_lang_String_length$_12891 |txt_262_262___16|) (java_lang_String_length$_12891 |pat_250_250___15|)) |i|)))))))
(define-fun |_JML__tmp275| () Bool (= |_JML__tmp264| |_JML__tmp274|))
(define-fun BL_78_then_233__A1 () Bool |Pre_2_54_33___26|)
(define-fun BL_78_then_233__A2 () Bool (= |ASSERT_389_86| |_JML__tmp275|))
(define-fun BL_78_then_233__A3 () Bool (= |BL_78_afterIf_232_source| 233))
(assert (= BL_78_then_233 (=> BL_78_then_233__A1 (=> BL_78_then_233__A2 (and |ASSERT_389_86| (=> |ASSERT_389_86| (=> BL_78_then_233__A3 BL_78_afterIf_232)))))))
(define-fun BL_78_else_234__A1 () Bool (not |Pre_2_54_33___26|))
(define-fun BL_78_else_234__A2 () Bool (= |BL_78_afterIf_232_source| 234))
(assert (= BL_78_else_234 (=> BL_78_else_234__A1 (=> BL_78_else_234__A2 BL_78_afterIf_232))))
(define-fun BL_78_afterIf_232__A1 () Bool (= |BL_233_afterIf_223_source| 232))
(assert (= BL_78_afterIf_232 (=> BL_78_afterIf_232__A1 BL_233_afterIf_223)))
(define-fun BL_233_else_225__A1 () Bool (not |_JML__tmp276|))
(assert (= BL_233_else_225 (=> BL_233_else_225__A1 (and BL_250_then_236 BL_250_else_237))))
(define-fun |_JML__tmp262| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |pat_250_250___15|) NULL))
(define-fun BL_250_then_236__A1 () Bool (distinct |pat_250_250___15| NULL))
(define-fun BL_250_then_236__A2 () Bool (= |ASSERT_374_250| |_JML__tmp262|))
(define-fun BL_250_then_236__A3 () Bool (= |BL_250_afterIf_235_source| 236))
(assert (= BL_250_then_236 (=> BL_250_then_236__A1 (=> BL_250_then_236__A2 (and |ASSERT_374_250| (=> |ASSERT_374_250| (=> BL_250_then_236__A3 BL_250_afterIf_235)))))))
(define-fun BL_250_else_237__A1 () Bool (not (distinct |pat_250_250___15| NULL)))
(define-fun BL_250_else_237__A2 () Bool (= |BL_250_afterIf_235_source| 237))
(assert (= BL_250_else_237 (=> BL_250_else_237__A1 (=> BL_250_else_237__A2 BL_250_afterIf_235))))
(assert (= BL_250_afterIf_235 (and BL_262_then_239 BL_262_else_240)))
(define-fun |_JML__tmp263| () Bool (distinct (select |java.lang.CharSequence_charArray_1045_0_1380892664| |txt_262_262___16|) NULL))
(define-fun BL_262_then_239__A1 () Bool (distinct |txt_262_262___16| NULL))
(define-fun BL_262_then_239__A2 () Bool (= |ASSERT_375_262| |_JML__tmp263|))
(define-fun BL_262_then_239__A3 () Bool (= |BL_262_afterIf_238_source| 239))
(assert (= BL_262_then_239 (=> BL_262_then_239__A1 (=> BL_262_then_239__A2 (and |ASSERT_375_262| (=> |ASSERT_375_262| (=> BL_262_then_239__A3 BL_262_afterIf_238)))))))
(define-fun BL_262_else_240__A1 () Bool (not (distinct |txt_262_262___16| NULL)))
(define-fun BL_262_else_240__A2 () Bool (= |BL_262_afterIf_238_source| 240))
(assert (= BL_262_else_240 (=> BL_262_else_240__A1 (=> BL_262_else_240__A2 BL_262_afterIf_238))))
(define-fun BL_262_afterIf_238__A1 () Bool (= |ASSERT_390_233| (or (not (and (distinct |`exception_233_634___58| NULL) (javaSubType (javaTypeOf |`exception_233_634___58|) T_java_lang_Exception))) (or (not |Pre_2_54_33___26|) (or false (and (distinct |`exception_233_634___58| NULL) (javaSubType (javaTypeOf |`exception_233_634___58|) T_java_lang_RuntimeException)))))))
(define-fun BL_262_afterIf_238__A2 () Bool (= |BL_233_afterIf_223_source| 238))
(assert (= BL_262_afterIf_238 (=> BL_262_afterIf_238__A1 (and |ASSERT_390_233| (=> |ASSERT_390_233| (=> BL_262_afterIf_238__A2 BL_233_afterIf_223))))))
(define-fun BL_233_afterIf_223__A1 () Bool (= |`exception_233_233___61| |__JMLsavedException_233_233_233___59|))
(define-fun BL_233_afterIf_223__A2 () Bool (= |`terminationPosition_233_233___62| |__JMLsavedTermination_233_233_233___60|))
(assert (= BL_233_afterIf_223 (=> BL_233_afterIf_223__A1 (=> BL_233_afterIf_223__A2 (and BL_233finallyNormal_42 BL_233finallyExit_43)))))
(define-fun BL_233finallyNormal_42__A1 () Bool (= |`terminationPosition_233_233___62| 0))
(define-fun BL_233finallyNormal_42__A2 () Bool (= |BL_233_AfterTry_37_source| 42))
(assert (= BL_233finallyNormal_42 (=> BL_233finallyNormal_42__A1 (=> BL_233finallyNormal_42__A2 BL_233_AfterTry_37))))
(define-fun BL_233finallyExit_43__A1 () Bool (distinct |`terminationPosition_233_233___62| 0))
(define-fun BL_233finallyExit_43__A2 () Bool (= |BL_233_AfterTry_37_source| 43))
(assert (= BL_233finallyExit_43 (=> BL_233finallyExit_43__A1 (=> BL_233finallyExit_43__A2 BL_233_AfterTry_37))))
(assert (= BL_233_AfterTry_37 true))
(assert (not BL_233Start_1))
(push 1)
(assert (= __JML_FeasCheck_ 0))
(push 1)
(check-sat)
